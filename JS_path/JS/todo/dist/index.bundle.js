(()=>{"use strict";var e={97:(e,t,r)=>{r.d(t,{A:()=>s});var n=r(354),a=r.n(n),o=r(314),i=r.n(o)()(a());i.push([e.id,".mini-card {\n    background: grey;\n    /* border: 2px solid black; */\n    min-height: 200px;\n    border-radius: 20px solid black;\n    cursor: move;\n    /* position:relative; */\n    /* z-index: 0; */\n}\n.remove-bg {\n    position:absolute;\n    width:100%;\n    height:100%;\n    z-index:9;\n    background-color: rgba(0,0,0,0.5);\n}\n\n.full-card {\n    z-index: 99;\n    position: absolute;\n    background: white;\n    height: 80%;\n    width: 80%;\n    display: grid;\n    grid-template:\n        'title title title' auto\n        ' desc desc priority' auto\n        'desc desc date' auto\n        'desc desc status' auto\n        ' button foot foot ' auto\n}\n\n#new-card-title, #full-card-title {\n    grid-area: title;\n}\n\n#new-card-detail, #full-card-detail {\n    grid-area: desc;\n}\n\n#new-card-priority, #full-card-priority{\n    grid-area: priority;\n}\n\n#new-card-dueDate, #full-card-dueDate{\n    grid-area: date;\n}\n\n#card-remove-button, #new-card-create-button{\n    grid-area: button;\n}\n\n#full-card-status {\n    grid-area: status;\n}\n\n#card-area {\n    position:fixed;\n    padding:0;\n    margin:0;\n\n    top:0;\n    left:0;\n\n    width: 100%;\n    height: 100%;\n    background:rgba(255,255,255,0.5);\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n\n.hide {\n    display:none;\n}\n\n.is-dragging {\n    scale: 1.05;\n    box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.25);\n    background: rgb(50, 50, 50);\n    color: white;\n  }","",{version:3,sources:["webpack://./src/styles/cards.css"],names:[],mappings:"AAAA;IACI,gBAAgB;IAChB,6BAA6B;IAC7B,iBAAiB;IACjB,+BAA+B;IAC/B,YAAY;IACZ,uBAAuB;IACvB,gBAAgB;AACpB;AACA;IACI,iBAAiB;IACjB,UAAU;IACV,WAAW;IACX,SAAS;IACT,iCAAiC;AACrC;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,iBAAiB;IACjB,WAAW;IACX,UAAU;IACV,aAAa;IACb;;;;;;AAMJ;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,cAAc;IACd,SAAS;IACT,QAAQ;;IAER,KAAK;IACL,MAAM;;IAEN,WAAW;IACX,YAAY;IACZ,gCAAgC;;IAEhC,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,4CAA4C;IAC5C,2BAA2B;IAC3B,YAAY;EACd",sourcesContent:[".mini-card {\r\n    background: grey;\r\n    /* border: 2px solid black; */\r\n    min-height: 200px;\r\n    border-radius: 20px solid black;\r\n    cursor: move;\r\n    /* position:relative; */\r\n    /* z-index: 0; */\r\n}\r\n.remove-bg {\r\n    position:absolute;\r\n    width:100%;\r\n    height:100%;\r\n    z-index:9;\r\n    background-color: rgba(0,0,0,0.5);\r\n}\r\n\r\n.full-card {\r\n    z-index: 99;\r\n    position: absolute;\r\n    background: white;\r\n    height: 80%;\r\n    width: 80%;\r\n    display: grid;\r\n    grid-template:\r\n        'title title title' auto\r\n        ' desc desc priority' auto\r\n        'desc desc date' auto\r\n        'desc desc status' auto\r\n        ' button foot foot ' auto\r\n}\r\n\r\n#new-card-title, #full-card-title {\r\n    grid-area: title;\r\n}\r\n\r\n#new-card-detail, #full-card-detail {\r\n    grid-area: desc;\r\n}\r\n\r\n#new-card-priority, #full-card-priority{\r\n    grid-area: priority;\r\n}\r\n\r\n#new-card-dueDate, #full-card-dueDate{\r\n    grid-area: date;\r\n}\r\n\r\n#card-remove-button, #new-card-create-button{\r\n    grid-area: button;\r\n}\r\n\r\n#full-card-status {\r\n    grid-area: status;\r\n}\r\n\r\n#card-area {\r\n    position:fixed;\r\n    padding:0;\r\n    margin:0;\r\n\r\n    top:0;\r\n    left:0;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n    background:rgba(255,255,255,0.5);\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.hide {\r\n    display:none;\r\n}\r\n\r\n.is-dragging {\r\n    scale: 1.05;\r\n    box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.25);\r\n    background: rgb(50, 50, 50);\r\n    color: white;\r\n  }"],sourceRoot:""}]);const s=i},249:(e,t,r)=>{r.d(t,{A:()=>s});var n=r(354),a=r.n(n),o=r(314),i=r.n(o)()(a());i.push([e.id,"* {\n    box-sizing: border-box;\n    font-size: 1em;\n    font-family: 'Sublima', 'Poppins', sans-serif;\n    color: #182825;\n}\n\n.container {\n    display: grid;\n    grid-template-rows: 1fr 3fr 1fr;\n    grid-template-columns: 100vw;\n    grid-template-areas:\n        'header'\n        'article'\n        'foot';\n    height: 100vh;\n}\n\n.top {\n    grid-area: header;\n\n    display: grid;\n    grid-template-rows: 1fr 1fr;\n    grid-template-columns: 1fr 1fr;\n    grid-template-areas: \n        'page logo'\n        'searchbar searchbar';    \n    justify-content: space-around;\n    align-items: center;\n    padding-left: 5%;\n    padding-top: 5%;\n    background:#faf2ff;\n}\n\n\n.page {\n    grid-area: page;\n    margin-left: 10%;\n}\n\n.logo {\n    grid-area: logo;\n    display: grid;\n    justify-content: center;\n    margin-left: 45%;\n}\n\n.search {\n    grid-area: searchbar;\n    margin-right: 10%;\n    margin-left: 5%;\n    color: #474847;\n}\n\n.searchbar {\n    width:100%;\n    border-radius: 25px;\n    color: #474847;\n}\n.searchbar input:focus {\n    outline: none;\n}\n/*\nThe sidebar element has a gap of 50px\nThe text elements in the sidebar are centered with grid\n*/\n.sidebar {\n    background-color: #81667A;\n    width: 12rem;\n    height: 100vh;\n    padding: 0;\n    position: fixed;\n    transition: transform 300ms ease-in;\n    opacity: 90%;\n    z-index: 999;\n}\n.sidebar--isHidden {\n    transform: translateX(-12rem);\n    transition: transform 300ms ease-out;\n}\n.sidebar-menu {\n    list-style: none;\n    padding: 1.5rem;\n    margin-top: 0;\n}\n.sidebar-menu__item {\n    display: block;\n    cursor: pointer;\n    margin-bottom: 0.5rem;\n}\n\n.sidebar-meu_item :nth-child(1){\n    position: fixed;\n    left: -5;\n}\n\n.sidebar-menu__item a {\n    color: white;\n    text-decoration: none;\n    display: block;\n}\n.sidebar-menu__item a:hover {\n    color: grey;\n    transition: color 150ms linear;\n}\n\n\n.openbtn {\n    width: 30px;\n    height: 30px;\n    border-radius: 15%;\n    border:none;\n    outline:none;\n    cursor:pointer;\n    position: fixed;\n    transition: transform 300ms ease-in;\n    left: 12rem;\n    color: #474847;\n    background-color:#81667A;\n    font-weight: bold;\n  }\n\n.openbtn--isHidden {\n    transform: translateX(-12rem);\n    transition: transform 300ms ease-out;\n  }\n\n.openbtn:hover {\n    background-color: #f4a261;\n    transition: all 150ms ease-in;\n}\n\n#logo {\n    width: 4.5rem;\n    height: 4.5rem;\n}","",{version:3,sources:["webpack://./src/styles/main.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,cAAc;IACd,6CAA6C;IAC7C,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,+BAA+B;IAC/B,4BAA4B;IAC5B;;;cAGU;IACV,aAAa;AACjB;;AAEA;IACI,iBAAiB;;IAEjB,aAAa;IACb,2BAA2B;IAC3B,8BAA8B;IAC9B;;6BAEyB;IACzB,6BAA6B;IAC7B,mBAAmB;IACnB,gBAAgB;IAChB,eAAe;IACf,kBAAkB;AACtB;;;AAGA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,gBAAgB;AACpB;;AAEA;IACI,oBAAoB;IACpB,iBAAiB;IACjB,eAAe;IACf,cAAc;AAClB;;AAEA;IACI,UAAU;IACV,mBAAmB;IACnB,cAAc;AAClB;AACA;IACI,aAAa;AACjB;AACA;;;CAGC;AACD;IACI,yBAAyB;IACzB,YAAY;IACZ,aAAa;IACb,UAAU;IACV,eAAe;IACf,mCAAmC;IACnC,YAAY;IACZ,YAAY;AAChB;AACA;IACI,6BAA6B;IAC7B,oCAAoC;AACxC;AACA;IACI,gBAAgB;IAChB,eAAe;IACf,aAAa;AACjB;AACA;IACI,cAAc;IACd,eAAe;IACf,qBAAqB;AACzB;;AAEA;IACI,eAAe;IACf,QAAQ;AACZ;;AAEA;IACI,YAAY;IACZ,qBAAqB;IACrB,cAAc;AAClB;AACA;IACI,WAAW;IACX,8BAA8B;AAClC;;;AAGA;IACI,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,cAAc;IACd,eAAe;IACf,mCAAmC;IACnC,WAAW;IACX,cAAc;IACd,wBAAwB;IACxB,iBAAiB;EACnB;;AAEF;IACI,6BAA6B;IAC7B,oCAAoC;EACtC;;AAEF;IACI,yBAAyB;IACzB,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,cAAc;AAClB",sourcesContent:["* {\r\n    box-sizing: border-box;\r\n    font-size: 1em;\r\n    font-family: 'Sublima', 'Poppins', sans-serif;\r\n    color: #182825;\r\n}\r\n\r\n.container {\r\n    display: grid;\r\n    grid-template-rows: 1fr 3fr 1fr;\r\n    grid-template-columns: 100vw;\r\n    grid-template-areas:\r\n        'header'\r\n        'article'\r\n        'foot';\r\n    height: 100vh;\r\n}\r\n\r\n.top {\r\n    grid-area: header;\r\n\r\n    display: grid;\r\n    grid-template-rows: 1fr 1fr;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-areas: \r\n        'page logo'\r\n        'searchbar searchbar';    \r\n    justify-content: space-around;\r\n    align-items: center;\r\n    padding-left: 5%;\r\n    padding-top: 5%;\r\n    background:#faf2ff;\r\n}\r\n\r\n\r\n.page {\r\n    grid-area: page;\r\n    margin-left: 10%;\r\n}\r\n\r\n.logo {\r\n    grid-area: logo;\r\n    display: grid;\r\n    justify-content: center;\r\n    margin-left: 45%;\r\n}\r\n\r\n.search {\r\n    grid-area: searchbar;\r\n    margin-right: 10%;\r\n    margin-left: 5%;\r\n    color: #474847;\r\n}\r\n\r\n.searchbar {\r\n    width:100%;\r\n    border-radius: 25px;\r\n    color: #474847;\r\n}\r\n.searchbar input:focus {\r\n    outline: none;\r\n}\r\n/*\r\nThe sidebar element has a gap of 50px\r\nThe text elements in the sidebar are centered with grid\r\n*/\r\n.sidebar {\r\n    background-color: #81667A;\r\n    width: 12rem;\r\n    height: 100vh;\r\n    padding: 0;\r\n    position: fixed;\r\n    transition: transform 300ms ease-in;\r\n    opacity: 90%;\r\n    z-index: 999;\r\n}\r\n.sidebar--isHidden {\r\n    transform: translateX(-12rem);\r\n    transition: transform 300ms ease-out;\r\n}\r\n.sidebar-menu {\r\n    list-style: none;\r\n    padding: 1.5rem;\r\n    margin-top: 0;\r\n}\r\n.sidebar-menu__item {\r\n    display: block;\r\n    cursor: pointer;\r\n    margin-bottom: 0.5rem;\r\n}\r\n\r\n.sidebar-meu_item :nth-child(1){\r\n    position: fixed;\r\n    left: -5;\r\n}\r\n\r\n.sidebar-menu__item a {\r\n    color: white;\r\n    text-decoration: none;\r\n    display: block;\r\n}\r\n.sidebar-menu__item a:hover {\r\n    color: grey;\r\n    transition: color 150ms linear;\r\n}\r\n\r\n\r\n.openbtn {\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 15%;\r\n    border:none;\r\n    outline:none;\r\n    cursor:pointer;\r\n    position: fixed;\r\n    transition: transform 300ms ease-in;\r\n    left: 12rem;\r\n    color: #474847;\r\n    background-color:#81667A;\r\n    font-weight: bold;\r\n  }\r\n\r\n.openbtn--isHidden {\r\n    transform: translateX(-12rem);\r\n    transition: transform 300ms ease-out;\r\n  }\r\n\r\n.openbtn:hover {\r\n    background-color: #f4a261;\r\n    transition: all 150ms ease-in;\r\n}\r\n\r\n#logo {\r\n    width: 4.5rem;\r\n    height: 4.5rem;\r\n}"],sourceRoot:""}]);const s=i},416:(e,t,r)=>{r.d(t,{A:()=>s});var n=r(354),a=r.n(n),o=r(314),i=r.n(o)()(a());i.push([e.id,"#projects {\n    display:flex;\n    flex-direction: column;\n\n}\n\n#status-labels {\n    /* left: 12px; */\n    min-height: 12px;\n    max-height: 24px;\n    background: lightyellow;\n}\n\n.project-header {\n    background: lightgray;\n    border: 6px solid black;\n}\n\n.project-options {\n    display: grid;\n    grid-template-columns: 2fr 1fr 1fr;\n    grid-template-rows: 2fr 1fr;\n}\n\n.project-name {\n\n}\n.project-name-change-button{\n\n}\n\n.project-delete-button{\n\n}\n\n.project-collapse-button{\n    height:50px;\n    width:50px;\n}\n\n.new-task-button{\n\n}\n\n.project-status-wrapper {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 12px;\n    /* min-height: 5rem; */\n}\n\n.project-status-col {\n    background: lightblue;\n    /* z-index: 5; */\n    /* max-height: 0px; */\n    /* border-bottom: 1px solid red; */\n    /* margin-top: -100%; */\n    transition: all 1s;\n\n}\n\n.hover {\n    background: blue;\n    z-index:99;\n}\n\n.save{\n    background: lightblue;\n}\n.project-collapse-button:hover {\n    color: green;\n}\n\n.project-collapse-button::before {\n    content: ' ';\n    display: inline-block;\n\n    border-top: 5px solid transparent;\n    border-bottom: 5px solid transparent;\n    border-left: 5px solid currentColor;\n\n    vertical-align: middle;\n    margin-right: .7rem;\n    transform: translateY(-2px);\n\n    transition: transform .2s ease-out;\n}\n\n.toggle-button-transition {\n    transform: rotate(90deg) translateX(-3px);\n  }\n\n.collapsed {\n    background-color: red;\n    transform: translateY(-100%);\n    max-height:0px;\n }\n\n\n.project {\n    overflow: hidden;\n  }\n  \n/* #expand-contract {\nborder-bottom: 1px solid red;\nmargin-top: -100%;\ntransition: all 1s;\n} */\n\n.project-status-col.expanded {\n    background-color: green;\n    margin-top: 0;\n}\n\n@keyframes slide-in {\n    100% {\n        transform: translateY(0%)\n    }\n}","",{version:3,sources:["webpack://./src/styles/projectArea.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,sBAAsB;;AAE1B;;AAEA;IACI,gBAAgB;IAChB,gBAAgB;IAChB,gBAAgB;IAChB,uBAAuB;AAC3B;;AAEA;IACI,qBAAqB;IACrB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,kCAAkC;IAClC,2BAA2B;AAC/B;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;IACI,WAAW;IACX,UAAU;AACd;;AAEA;;AAEA;;AAEA;IACI,aAAa;IACb,qCAAqC;IACrC,cAAc;IACd,sBAAsB;AAC1B;;AAEA;IACI,qBAAqB;IACrB,gBAAgB;IAChB,qBAAqB;IACrB,kCAAkC;IAClC,uBAAuB;IACvB,kBAAkB;;AAEtB;;AAEA;IACI,gBAAgB;IAChB,UAAU;AACd;;AAEA;IACI,qBAAqB;AACzB;AACA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,qBAAqB;;IAErB,iCAAiC;IACjC,oCAAoC;IACpC,mCAAmC;;IAEnC,sBAAsB;IACtB,mBAAmB;IACnB,2BAA2B;;IAE3B,kCAAkC;AACtC;;AAEA;IACI,yCAAyC;EAC3C;;AAEF;IACI,qBAAqB;IACrB,4BAA4B;IAC5B,cAAc;CACjB;;;AAGD;IACI,gBAAgB;EAClB;;AAEF;;;;GAIG;;AAEH;IACI,uBAAuB;IACvB,aAAa;AACjB;;AAEA;IACI;QACI;IACJ;AACJ",sourcesContent:["#projects {\r\n    display:flex;\r\n    flex-direction: column;\r\n\r\n}\r\n\r\n#status-labels {\r\n    /* left: 12px; */\r\n    min-height: 12px;\r\n    max-height: 24px;\r\n    background: lightyellow;\r\n}\r\n\r\n.project-header {\r\n    background: lightgray;\r\n    border: 6px solid black;\r\n}\r\n\r\n.project-options {\r\n    display: grid;\r\n    grid-template-columns: 2fr 1fr 1fr;\r\n    grid-template-rows: 2fr 1fr;\r\n}\r\n\r\n.project-name {\r\n\r\n}\r\n.project-name-change-button{\r\n\r\n}\r\n\r\n.project-delete-button{\r\n\r\n}\r\n\r\n.project-collapse-button{\r\n    height:50px;\r\n    width:50px;\r\n}\r\n\r\n.new-task-button{\r\n\r\n}\r\n\r\n.project-status-wrapper {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-gap: 12px;\r\n    /* min-height: 5rem; */\r\n}\r\n\r\n.project-status-col {\r\n    background: lightblue;\r\n    /* z-index: 5; */\r\n    /* max-height: 0px; */\r\n    /* border-bottom: 1px solid red; */\r\n    /* margin-top: -100%; */\r\n    transition: all 1s;\r\n\r\n}\r\n\r\n.hover {\r\n    background: blue;\r\n    z-index:99;\r\n}\r\n\r\n.save{\r\n    background: lightblue;\r\n}\r\n.project-collapse-button:hover {\r\n    color: green;\r\n}\r\n\r\n.project-collapse-button::before {\r\n    content: ' ';\r\n    display: inline-block;\r\n\r\n    border-top: 5px solid transparent;\r\n    border-bottom: 5px solid transparent;\r\n    border-left: 5px solid currentColor;\r\n\r\n    vertical-align: middle;\r\n    margin-right: .7rem;\r\n    transform: translateY(-2px);\r\n\r\n    transition: transform .2s ease-out;\r\n}\r\n\r\n.toggle-button-transition {\r\n    transform: rotate(90deg) translateX(-3px);\r\n  }\r\n\r\n.collapsed {\r\n    background-color: red;\r\n    transform: translateY(-100%);\r\n    max-height:0px;\r\n }\r\n\r\n\r\n.project {\r\n    overflow: hidden;\r\n  }\r\n  \r\n/* #expand-contract {\r\nborder-bottom: 1px solid red;\r\nmargin-top: -100%;\r\ntransition: all 1s;\r\n} */\r\n\r\n.project-status-col.expanded {\r\n    background-color: green;\r\n    margin-top: 0;\r\n}\r\n\r\n@keyframes slide-in {\r\n    100% {\r\n        transform: translateY(0%)\r\n    }\r\n}"],sourceRoot:""}]);const s=i},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var r="",n=void 0!==t[5];return t[4]&&(r+="@supports (".concat(t[4],") {")),t[2]&&(r+="@media ".concat(t[2]," {")),n&&(r+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),r+=e(t),n&&(r+="}"),t[2]&&(r+="}"),t[4]&&(r+="}"),r})).join("")},t.i=function(e,r,n,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(n)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<e.length;d++){var A=[].concat(e[d]);n&&i[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),r&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=r):A[2]=r),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),t.push(A))}},t}},354:e=>{e.exports=function(e){var t=e[1],r=e[3];if(!r)return t;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),o="/*# ".concat(a," */");return[t].concat([o]).join("\n")}return[t].join("\n")}},72:e=>{var t=[];function r(e){for(var r=-1,n=0;n<t.length;n++)if(t[n].identifier===e){r=n;break}return r}function n(e,n){for(var o={},i=[],s=0;s<e.length;s++){var c=e[s],d=n.base?c[0]+n.base:c[0],A=o[d]||0,l="".concat(d," ").concat(A);o[d]=A+1;var u=r(l),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var h=a(p,n);n.byIndex=s,t.splice(s,0,{identifier:l,updater:h,references:1})}i.push(l)}return i}function a(e,t){var r=t.domAPI(t);return r.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;r.update(e=t)}else r.remove()}}e.exports=function(e,a){var o=n(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var s=r(o[i]);t[s].references--}for(var c=n(e,a),d=0;d<o.length;d++){var A=r(o[d]);0===t[A].references&&(t[A].updater(),t.splice(A,1))}o=c}}},659:e=>{var t={};e.exports=function(e,r){var n=function(e){if(void 0===t[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}(e);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(r)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,r)=>{e.exports=function(e){var t=r.nc;t&&e.setAttribute("nonce",t)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(r){!function(e,t,r){var n="";r.supports&&(n+="@supports (".concat(r.supports,") {")),r.media&&(n+="@media ".concat(r.media," {"));var a=void 0!==r.layer;a&&(n+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),n+=r.css,a&&(n+="}"),r.media&&(n+="}"),r.supports&&(n+="}");var o=r.sourceMap;o&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(n,e,t.options)}(t,e,r)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function r(n){var a=t[n];if(void 0!==a)return a.exports;var o=t[n]={id:n,exports:{}};return e[n](o,o.exports,r),o.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.nc=void 0,(()=>{class e{constructor(e){this.name=e,this.tasks=[]}addTask(e){this.tasks.filter((t=>e.title!==t))&&this.tasks.push(e)}removeTask(e){this.tasks=this.tasks.filter((t=>t.title!==e))}filterTasks(e){let t,r=[];for(t=0;t<this.tasks.length;t++)this.tasks[t].title.toLowerCase().includes(e.toLowerCase())&&r.push(t);return this.tasks[r]}returnAllTasks(){return this.tasks}returnAllTaskTitles(){let e=[];for(let t of this.tasks)e.push(t.returnTitle());return console.log(e),e}returnProjectName(){return this.name}returnProjectNameWithNoWhitespace(){return this.name.replace(/\s+/g,"-")}returnProjectJSON(){let e=[];for(const t of this.tasks)e.push(t.returnItemJSON());return{name:this.returnProjectName(),tasks:e}}updateProjectName(e){this.name=e}}const t=(e,t,...r)=>{const n=document.createElement(e);for(let e in t)n.setAttribute(e,t[e]);return r.forEach((e=>{e instanceof Element?n.appendChild(e):n.appendChild(document.createTextNode(e))})),n};function n(e){e.preventDefault();const t=e.currentTarget,r=t.id,n=i(t,e.clientY),a=document.querySelector(".is-dragging"),o=a.dataset.project;console.log("onDragOver task project name",o);let s=r.includes(o);console.log(r),console.log(s),s&&(n?t.insertBefore(a,n):t.appendChild(a))}function a(e){e.preventDefault()}function o(e){const t=e.dataTransfer.getData("text"),r=e.currentTarget,n=document.querySelector(".is-dragging"),a=n.dataset.project,o=r.id;console.log("onDragOver task project name",a);let i=o.includes(a),s=r.dataset.status;if(i){n.dataset.status=s;const r=new CustomEvent("statusChange",{detail:{id:t,newStatus:s}});document.dispatchEvent(r),e.dataTransfer.clearData()}}const i=(e,t)=>{const r=e.querySelectorAll(".mini-card:not(.is-dragging)");let n=null,a=Number.NEGATIVE_INFINITY;return r.forEach((e=>{const{top:r}=e.getBoundingClientRect(),o=t-r;o<0&&o>a&&(a=o,n=e)})),n};var s=r(72),c=r.n(s),d=r(825),A=r.n(d),l=r(659),u=r.n(l),p=r(56),h=r.n(p),g=r(540),m=r.n(g),C=r(113),f=r.n(C),b=r(97),I={};I.styleTagTransform=f(),I.setAttributes=h(),I.insert=u().bind(null,"head"),I.domAPI=A(),I.insertStyleElement=m(),c()(b.A,I),b.A&&b.A.locals&&b.A.locals;class B{constructor(e,t){this.task=t,this.projectRenderer=e}setProjectRenderer(e){this.projectRenderer=e}createFullCard(){const e=t("button",{id:"card-remove-button",class:"full-card-info"},"Delete Task");e.addEventListener("click",(e=>{const t=document.querySelector("#card-area");this.deleteTarget(t),this.projectRenderer.project.removeTask(this.task.title),this.projectRenderer.renderAndUpdateProject(),console.log(this.projectRenderer.project.returnProjectJSON())}));const r=t("h1",{id:"full-card-title",class:"full-card-info",contenteditable:!0},this.task.title),n=t("h2",{id:"full-card-status",class:"full-card-info",contenteditable:!0},this.task.jobStatus),a=t("h2",{id:"full-card-dueDate",class:"full-card-info",contenteditable:!0},this.task.dueDate),o=t("h2",{id:"full-card-priority",class:"full-card-info",contenteditable:!0},this.task.priority),i=t("p",{id:"full-card-detail",class:"full-card-info",contenteditable:!0},this.task.detail),s=t("div",{class:"full-card"},r,n,a,o,i,e),c=t("div",{class:"remove-bg",id:"remove-full-card-bg"},s),d=t("div",{id:"card-area"},s,c);return c.addEventListener("click",(e=>{this.task.updateTitle(r.innerHTML),this.task.updateStatus(n.innerHTML),this.task.updateDueDate(a.innerHTML),this.task.updateDetail(i.innerHTML),this.task.updatePriority(o.innerHTML),this.deleteParent(e),this.projectRenderer.renderAndUpdateProject(),console.log(this.projectRenderer.project.returnProjectJSON())})),d}createMinimizedCard(){const e=t("h1",{id:"mini-card-title",class:"mini-card-info"},`Title: ${this.task.title}`),r=(t("h2",{id:"mini-card-status",class:"mini-card-info"},this.task.jobStatus),t("h2",{id:"mini-card-dueDate",class:"mini-card-info"},`Due: ${this.task.dueDate}`)),n=t("h2",{id:"mini-card-priority",class:"mini-card-info"},`Priority: ${this.task.priority}`),a=t("div",{class:"mini-card",id:this.task.title.replace(/\s+/g,"-"),draggable:!0},e,r,n);return a.setAttribute("data-project",this.projectRenderer.project.returnProjectNameWithNoWhitespace()),a.setAttribute("data-status",this.task.returnStatusAsHtmlData()),a.addEventListener("click",(()=>{document.body.append(this.createFullCard(this.projectRenderer.project,this.task))})),a.addEventListener("dragstart",(e=>{!function(e){const t=e.target.id;e.dataTransfer.setData("text",t),e.target.classList.add("is-dragging")}(e)})),a.addEventListener("dragend",(e=>{e.target.classList.remove("is-dragging")})),a}deleteParent(e){e.currentTarget.parentNode.remove()}deleteTarget(e){e.remove()}returnStatus(){return this.task.jobStatus}}class j{constructor(e,t,r,n,a){this.title=e,this.jobStatus=t,this.priority=r,this.dueDate=n,this.detail=a,document.addEventListener("statusChange",(e=>{const t=e.detail.id,r=e.detail.newStatus;t===this.title&&(this.updateStatus(r),console.log(`Status of TodoItem ${this.title} changed to ${this.jobStatus}`))}))}updateStatus(e){this.jobStatus!=e&&(this.jobStatus=e,console.log(this.jobStatus))}updateDetail(e){this.detail=e}updateTitle(e){this.title=e}updatePriority(e){this.priority=e}updateDueDate(e){this.dueDate=e}returnTitle(){return this.title}returnStatus(){return this.jobStatus}returnStatusAsHtmlData(){return this.jobStatus.replace(/\s+/g,"-")}returnPriority(){return this.priority}returnDueDate(){return this.dueDate}returnDetail(){return this.detail}returnItemJSON(){return{title:this.returnTitle(),status:this.returnStatus(),dueDate:this.returnDueDate(),priority:this.returnPriority(),detail:this.returnDetail()}}}const v=new class{constructor(){}throwError(e){throw new Error(e)}};var k=r(416),y={};y.styleTagTransform=f(),y.setAttributes=h(),y.insert=u().bind(null,"head"),y.domAPI=A(),y.insertStyleElement=m(),c()(k.A,y),k.A&&k.A.locals&&k.A.locals;class x{constructor(e,t){this.project=t,this.handler=e,document.addEventListener("statusChange",(e=>{const t=e.detail.id.replaceAll("-"," ").toLowerCase(),r=e.detail.newStatus,n=this.project.returnAllTaskTitles();n.forEach((e=>e.toLowerCase())),console.log(n),console.log(t),console.log(r),console.log(n.includes(t)),n.includes(t)&&(this.project.filterTasks(t).updateStatus(r),console.log(`Status of TodoItem ${this.project.filterTasks(t).title} changed to ${this.project.filterTasks(t).jobStatus}`))}))}clearAllChildren(e){for(;e.childNodes.length>0;)e.removeChild(e.lastChild)}renderAndUpdateProject(){const e=this.project.returnProjectNameWithNoWhitespace();document.querySelectorAll(`#${e} .project-status-col`).forEach((e=>{e.hasChildNodes()&&this.clearAllChildren(e)})),this.placeTaskCardsIntoProjectDOM()}createNewTaskForm(e){const r=t("input",{id:"new-card-title",class:"new-card-info",type:"text"}),n=t("input",{id:"new-card-dueDate",class:"new-card-info"}),a=t("datalist",{id:"priorities"},t("option",{value:"low"}),t("option",{value:"medium"}),t("option",{value:"high"})),o=t("input",{id:"new-card-priority",class:"new-card-info",list:"priorities"},a),i=t("input",{id:"new-card-detail",class:"new-card-info",type:"text"}),s=t("button",{id:"new-card-create-button",class:"new-card-info"},"Create Task"),c=t("div",{class:"full-card"},r,n,o,i,s),d=t("div",{class:"remove-bg",id:"remove-full-card-bg"},c),A=t("div",{id:"card-area"},c,d);d.addEventListener("click",(function(e){e.currentTarget.parentNode.remove()})),s.addEventListener("click",(e=>{this.submitNewTask(this.project),this.renderAndUpdateProject(),e.currentTarget.parentNode.parentNode.remove()})),document.body.append(A)}submitNewTask(){const e=document.querySelector("#new-card-title").value,t=document.querySelector("#new-card-dueDate").value,r=document.querySelector("#new-card-priority").value,n=document.querySelector("#new-card-detail").value;let a=new j(e,"not-started",r,t,n);this.project.addTask(a)}createProjectDOM(e){const r=this.project,i=t("button",{class:"new-task-button"},"+");i.addEventListener("click",(()=>{this.createNewTaskForm(r)}));const s=t("div",{class:"project-name",id:`${this.project.returnProjectNameWithNoWhitespace()}-title`},this.project.name),c=t("button",{class:"project-name-change-button",id:`${this.project.returnProjectNameWithNoWhitespace()}-edit`},"Edit");c.addEventListener("click",(e=>{c.classList.contains("save")?(function(e){e.innerHTML="Edit",s.setAttribute("contenteditable",!1),e.classList.remove("save")}(c),console.log("save on")):(function(e){s.setAttribute("contenteditable",!0),s.focus(),e.classList.add("save")}(c),console.log("edit on"))}));const d=t("button",{class:"project-delete-button",id:`${this.project.returnProjectNameWithNoWhitespace()}-delete`},"Delete");d.addEventListener("click",(()=>{this.handler.removeProject(this.project.name),console.log(this.handler.returnAllProjectTitles()),C.remove()}));const A=t("button",{class:"project-collapse-button",id:`${this.project.returnProjectNameWithNoWhitespace()}-collapse`});t("label",{for:"project-collapse-button",class:"lbl-toggle"}),A.addEventListener("click",(()=>{m.classList.contains("collapsed")?(m.classList.remove("collapsed"),A.classList.remove("toggle-button-transition")):(m.classList.add("collapsed"),A.classList.add("toggle-button-transition"))}));const l=t("div",{class:"project-options"},s,c,d,i,A),u=t("div",{class:"project-header"},l),p=t("div",{class:"project-status-col",id:`not-started-${this.project.returnProjectNameWithNoWhitespace()}`});p.classList.add("not-started"),p.setAttribute("data-status","not-started"),p.addEventListener("dragover",(e=>{n(e)})),p.addEventListener("drop",(e=>{o(e)})),p.addEventListener("dragleave",(e=>{a(e)}));const h=t("div",{class:"project-status-col",id:`in-progress-${this.project.returnProjectNameWithNoWhitespace()}`});h.classList.add("in-progress"),h.setAttribute("data-status","in-progress"),h.addEventListener("dragover",(e=>{n(e)})),h.addEventListener("drop",(e=>{o(e)})),h.addEventListener("dragleave",(e=>{a(e)}));const g=t("div",{class:"project-status-col",id:`completed-${this.project.returnProjectNameWithNoWhitespace()}`});g.classList.add("completed"),g.setAttribute("data-status","completed"),g.addEventListener("dragover",(e=>{n(e)})),g.addEventListener("drop",(e=>{o(e)})),g.addEventListener("dragleave",(e=>{a(e)}));const m=t("div",{class:"project-status-wrapper",id:`columns-${this.project.returnProjectNameWithNoWhitespace()}`},p,h,g),C=t("div",{class:"project",id:this.project.returnProjectNameWithNoWhitespace()},u,m),f=document.querySelector("#projects");if(e){const e=document.querySelector("#project-section-header");f.insertBefore(C,e.nextSibling)}else f.appendChild(C);s.addEventListener("input",(e=>{let t=s.innerHTML.replace(/\s+/g,"-"),r=document.querySelector(`#${this.project.returnProjectNameWithNoWhitespace()}-edit`);"Save"!=r.innerHTML&&(r.innerHTML="Save"),this.project.updateProjectName(t),C.setAttribute("id",t),p.setAttribute("id",`not-started-${t}`),h.setAttribute("id",`in-progress-${t}`),g.setAttribute("id",`completed-${t}`),s.setAttribute("id",`${t}-title`),c.setAttribute("id",`${t}-edit`),d.setAttribute("id",`${t}-delete`),A.setAttribute("id",`${t}-collapse`),(p.hasChildNodes()||h.hasChildNodes()||g.hasChildNodes())&&(p.childNodes.forEach((e=>e.dataset.project=t)),h.childNodes.forEach((e=>e.dataset.project=t)),g.childNodes.forEach((e=>e.dataset.project=t)))}))}renderTaskCards(){const e=this.project.returnAllTasks();let t=[];for(let r of e){let e=new B(this,r);t.push(e)}return t}placeTaskCardsIntoProjectDOM(){let e=this.renderTaskCards();for(let t of e){let e=`#${t.returnStatus()}-${this.project.returnProjectNameWithNoWhitespace()}`;document.querySelector(e).appendChild(t.createMinimizedCard())}}getProject(){return this.project}updateProjectName(e){this.project.updateProjectName(e),this.renderAndUpdateProject()}}var w=r(249),E={};E.styleTagTransform=f(),E.setAttributes=h(),E.insert=u().bind(null,"head"),E.domAPI=A(),E.insertStyleElement=m(),c()(w.A,E),w.A&&w.A.locals&&w.A.locals;const T=new class{constructor(){this.projectList=[]}addProject(e){this.projectList.some((t=>t.name===e.name))?v.throwError("Project Already Exists"):this.projectList.push(e)}removeProject(e){this.projectList=this.projectList.filter((t=>t.name!==e))}returnAllProjectTitles(){const e=[];for(const t of this.projectList)e.push(t.name);return e}returnAllProjects(){return this.projectList}returnSingleProject(e){let t,r=[];for(t=0;t<this.projectList.length;t++)this.projectList[t].name.toLowerCase().includes(e.toLowerCase())&&r.push(t);return this.projectList[r]}},P=new j("do the thing","not-started","high","8/17/2034","you need to do the thing"),N=new j("do this thing too","completed","low","9/17/2034","you need to do the thing but not more important than other thing"),S=new e("testProject"),L=new j("this is in project 2","in-progress","medium","9/17/2034","you need to do the thing but not more important than other thing");S.addTask(P),S.addTask(N),T.addProject(S);const W=new e("second project");W.addTask(L),T.addProject(W),console.log(T.returnAllProjects());let D=new class{constructor(e){this.projectHandler=e}setProjectHandler(e){this.projectHandler=e}setCreateNewProjectButton(){document.querySelector("#new-project-button").addEventListener("click",this.createSingleProject.bind(this))}createSingleProject(){let t,r="New Project",n=1;const a=this.projectHandler.returnAllProjectTitles();if(a.includes(r)){t=r+n;do{n+=1,t=r+n}while(a.includes(t))}else t=r;const o=new e(t),i=new x(this.projectHandler,o);this.projectHandler.addProject(o),i.createProjectDOM(!0)}initialize(){document.querySelector("#projects");let e=this.projectHandler.returnAllProjects();for(let t of e){let e=new x(this.projectHandler,t);e.createProjectDOM(),e.placeTaskCardsIntoProjectDOM()}this.setCreateNewProjectButton()}}(T);D.initialize(T)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,