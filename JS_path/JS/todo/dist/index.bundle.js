(()=>{"use strict";var n={97:(n,e,r)=>{r.d(e,{A:()=>s});var t=r(354),o=r.n(t),i=r(314),a=r.n(i)()(o());a.push([n.id,"h1, h2 {\n    text-overflow: clip;\n    white-space: nowrap;\n    overflow: hidden;\n    /* font-size: 12px; */\n}\n\ntextarea {\n    resize: none;\n}\n\nlabel, select, textarea, p {\n    display:block;\n    resize:none;\n}\nselect, textarea, p {\n    padding: 12px;\n}\n\n.mini-card {\n    min-height: 200px;\n    max-height: 800px;\n    max-width: 400px;\n    border-radius: 20px solid black;\n    background: white;\n    color: black;\n    box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.15);\n    width: 80%;\n    align-self: center;\n    padding: 12px;\n    border-radius: 4px;\n    cursor: move;\n}\n.remove-bg {\n    position:absolute;\n    width:100%;\n    height:100%;\n    z-index:9;\n    background-color: rgba(0,0,0,0.5);\n}\n\n.full-card {\n    z-index: 99;\n    position: absolute;\n    background: white;\n    display: grid;\n    grid-template:\n        'title title title' auto\n        ' desc desc priority' auto\n        'desc desc date' auto\n        'desc desc status' auto\n        ' button foot foot ' auto;\n    width: 40%;\n    height: 80%;\n    font-size: 18px;\n    border-radius: 5px;\n    justify-self: center;\n    align-self: center;\n    padding:24px;\n    grid-gap: 24px;\n}\n\n#new-card-title, #full-card-title {\n    grid-area: title;\n}\n\n#detail, #full-card-detail {\n    grid-area: desc;\n    height: 100%;\n    width: 100%;\n}\n\n#detail-label, #new-card-detail {\n    display:block;\n}\n\n#mini-card-status {\n    border-radius: 25%;\n    display:none;\n}\n\n\n\n#new-card-detail {\n    height: 100%;\n    width: 100%;\n}\n\n#priorities, #full-card-priority{\n    grid-area: priority;\n}\n\n#due-date, #full-card-dueDate{\n    grid-area: date;\n}\n\n#card-remove-button, #new-card-create-button{\n    grid-area: button;\n    border-radius: 5px;\n    width: 6rem;\n    height: 3rem;\n    font-size: 18px;\n    align-self: center;\n    justify-self: center;\n}\n\n#full-card-status {\n    grid-area: status;\n}\n\n#card-area {\n    position:fixed;\n    padding:0;\n    margin:0;\n\n    top:0;\n    left:0;\n\n    width: 100%;\n    height: 100%;\n    background:rgba(255,255,255,0.5);\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n\n.hide {\n    display:none;\n}\n\n.is-dragging {\n    scale: 1.05;\n    box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.25);\n    background: rgb(50, 50, 50);\n    color: white;\n  }\n\n  .haveTime {\n    text-decoration: underline;\n    text-decoration-color: rgb(28, 181, 28);\n  }\n\n  .shouldDo {\n    text-decoration: underline;\n    text-decoration-color: rgb(205, 205, 26);\n  }\n\n  .urgent {\n    text-decoration: underline;\n    text-decoration-color: rgb(205, 15, 15);\n  }\n\n  \n/* Mobile */\n@media only screen and (max-width: 768px) {\n\n    .mini-card {\n        min-height: 0px;\n        max-height: 200px;\n        max-width: 100%;\n        width: 99%;\n        background: white;\n        box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.15);\n        align-self: center;\n        padding: 12px;\n        border-radius: 4px;\n        border: 2px solid black;\n        text-overflow: ellipsis;\n        font-size: 8px;\n        cursor: move;\n        display: flex;\n        justify-content: space-between;\n    }\n\n    .full-card {   \n        display: flex;\n        flex-direction: column;\n        width: 80%;\n        height: 80%;\n    }\n\n    .haveTime {\n        text-decoration: underline;\n        text-decoration-color: rgb(28, 181, 28);\n      }\n    \n      .shouldDo {\n        text-decoration: underline;\n        text-decoration-color: rgb(205, 205, 26);\n      }\n    \n      .urgent {\n        text-decoration: underline;\n        text-decoration-color: rgb(205, 15, 15);\n      }\n      \n    #mini-card-status {\n        display:block;\n    }\n\n    #mini-card-status.not-started{\n        border: 4px solid rgb(205, 15, 15);\n        fill: rgb(205, 15, 15);\n    }\n    #mini-card-status.in-progress{\n        border: 4px solid rgb(205, 205, 26);\n        fill: rgb(205, 205, 26);\n    }\n    #mini-card-status.completed {\n        border: 4px solid rgb(28, 181, 28);\n        fill: rgb(28, 181, 28);\n    }\n\n    .mini-card-info {\n        max-width: 30%;\n    }\n    #full-card-title{\n        font-size: 30px;\n        width: 100%;\n        height: 72px;\n    \n    }\n}","",{version:3,sources:["webpack://./src/styles/cards.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,mBAAmB;IACnB,gBAAgB;IAChB,qBAAqB;AACzB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,WAAW;AACf;AACA;IACI,aAAa;AACjB;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;IACjB,gBAAgB;IAChB,+BAA+B;IAC/B,iBAAiB;IACjB,YAAY;IACZ,4CAA4C;IAC5C,UAAU;IACV,kBAAkB;IAClB,aAAa;IACb,kBAAkB;IAClB,YAAY;AAChB;AACA;IACI,iBAAiB;IACjB,UAAU;IACV,WAAW;IACX,SAAS;IACT,iCAAiC;AACrC;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,iBAAiB;IACjB,aAAa;IACb;;;;;iCAK6B;IAC7B,UAAU;IACV,WAAW;IACX,eAAe;IACf,kBAAkB;IAClB,oBAAoB;IACpB,kBAAkB;IAClB,YAAY;IACZ,cAAc;AAClB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,YAAY;AAChB;;;;AAIA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,eAAe;IACf,kBAAkB;IAClB,oBAAoB;AACxB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,cAAc;IACd,SAAS;IACT,QAAQ;;IAER,KAAK;IACL,MAAM;;IAEN,WAAW;IACX,YAAY;IACZ,gCAAgC;;IAEhC,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,4CAA4C;IAC5C,2BAA2B;IAC3B,YAAY;EACd;;EAEA;IACE,0BAA0B;IAC1B,uCAAuC;EACzC;;EAEA;IACE,0BAA0B;IAC1B,wCAAwC;EAC1C;;EAEA;IACE,0BAA0B;IAC1B,uCAAuC;EACzC;;;AAGF,WAAW;AACX;;IAEI;QACI,eAAe;QACf,iBAAiB;QACjB,eAAe;QACf,UAAU;QACV,iBAAiB;QACjB,4CAA4C;QAC5C,kBAAkB;QAClB,aAAa;QACb,kBAAkB;QAClB,uBAAuB;QACvB,uBAAuB;QACvB,cAAc;QACd,YAAY;QACZ,aAAa;QACb,8BAA8B;IAClC;;IAEA;QACI,aAAa;QACb,sBAAsB;QACtB,UAAU;QACV,WAAW;IACf;;IAEA;QACI,0BAA0B;QAC1B,uCAAuC;MACzC;;MAEA;QACE,0BAA0B;QAC1B,wCAAwC;MAC1C;;MAEA;QACE,0BAA0B;QAC1B,uCAAuC;MACzC;;IAEF;QACI,aAAa;IACjB;;IAEA;QACI,kCAAkC;QAClC,sBAAsB;IAC1B;IACA;QACI,mCAAmC;QACnC,uBAAuB;IAC3B;IACA;QACI,kCAAkC;QAClC,sBAAsB;IAC1B;;IAEA;QACI,cAAc;IAClB;IACA;QACI,eAAe;QACf,WAAW;QACX,YAAY;;IAEhB;AACJ",sourcesContent:["h1, h2 {\r\n    text-overflow: clip;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    /* font-size: 12px; */\r\n}\r\n\r\ntextarea {\r\n    resize: none;\r\n}\r\n\r\nlabel, select, textarea, p {\r\n    display:block;\r\n    resize:none;\r\n}\r\nselect, textarea, p {\r\n    padding: 12px;\r\n}\r\n\r\n.mini-card {\r\n    min-height: 200px;\r\n    max-height: 800px;\r\n    max-width: 400px;\r\n    border-radius: 20px solid black;\r\n    background: white;\r\n    color: black;\r\n    box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.15);\r\n    width: 80%;\r\n    align-self: center;\r\n    padding: 12px;\r\n    border-radius: 4px;\r\n    cursor: move;\r\n}\r\n.remove-bg {\r\n    position:absolute;\r\n    width:100%;\r\n    height:100%;\r\n    z-index:9;\r\n    background-color: rgba(0,0,0,0.5);\r\n}\r\n\r\n.full-card {\r\n    z-index: 99;\r\n    position: absolute;\r\n    background: white;\r\n    display: grid;\r\n    grid-template:\r\n        'title title title' auto\r\n        ' desc desc priority' auto\r\n        'desc desc date' auto\r\n        'desc desc status' auto\r\n        ' button foot foot ' auto;\r\n    width: 40%;\r\n    height: 80%;\r\n    font-size: 18px;\r\n    border-radius: 5px;\r\n    justify-self: center;\r\n    align-self: center;\r\n    padding:24px;\r\n    grid-gap: 24px;\r\n}\r\n\r\n#new-card-title, #full-card-title {\r\n    grid-area: title;\r\n}\r\n\r\n#detail, #full-card-detail {\r\n    grid-area: desc;\r\n    height: 100%;\r\n    width: 100%;\r\n}\r\n\r\n#detail-label, #new-card-detail {\r\n    display:block;\r\n}\r\n\r\n#mini-card-status {\r\n    border-radius: 25%;\r\n    display:none;\r\n}\r\n\r\n\r\n\r\n#new-card-detail {\r\n    height: 100%;\r\n    width: 100%;\r\n}\r\n\r\n#priorities, #full-card-priority{\r\n    grid-area: priority;\r\n}\r\n\r\n#due-date, #full-card-dueDate{\r\n    grid-area: date;\r\n}\r\n\r\n#card-remove-button, #new-card-create-button{\r\n    grid-area: button;\r\n    border-radius: 5px;\r\n    width: 6rem;\r\n    height: 3rem;\r\n    font-size: 18px;\r\n    align-self: center;\r\n    justify-self: center;\r\n}\r\n\r\n#full-card-status {\r\n    grid-area: status;\r\n}\r\n\r\n#card-area {\r\n    position:fixed;\r\n    padding:0;\r\n    margin:0;\r\n\r\n    top:0;\r\n    left:0;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n    background:rgba(255,255,255,0.5);\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.hide {\r\n    display:none;\r\n}\r\n\r\n.is-dragging {\r\n    scale: 1.05;\r\n    box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.25);\r\n    background: rgb(50, 50, 50);\r\n    color: white;\r\n  }\r\n\r\n  .haveTime {\r\n    text-decoration: underline;\r\n    text-decoration-color: rgb(28, 181, 28);\r\n  }\r\n\r\n  .shouldDo {\r\n    text-decoration: underline;\r\n    text-decoration-color: rgb(205, 205, 26);\r\n  }\r\n\r\n  .urgent {\r\n    text-decoration: underline;\r\n    text-decoration-color: rgb(205, 15, 15);\r\n  }\r\n\r\n  \r\n/* Mobile */\r\n@media only screen and (max-width: 768px) {\r\n\r\n    .mini-card {\r\n        min-height: 0px;\r\n        max-height: 200px;\r\n        max-width: 100%;\r\n        width: 99%;\r\n        background: white;\r\n        box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.15);\r\n        align-self: center;\r\n        padding: 12px;\r\n        border-radius: 4px;\r\n        border: 2px solid black;\r\n        text-overflow: ellipsis;\r\n        font-size: 8px;\r\n        cursor: move;\r\n        display: flex;\r\n        justify-content: space-between;\r\n    }\r\n\r\n    .full-card {   \r\n        display: flex;\r\n        flex-direction: column;\r\n        width: 80%;\r\n        height: 80%;\r\n    }\r\n\r\n    .haveTime {\r\n        text-decoration: underline;\r\n        text-decoration-color: rgb(28, 181, 28);\r\n      }\r\n    \r\n      .shouldDo {\r\n        text-decoration: underline;\r\n        text-decoration-color: rgb(205, 205, 26);\r\n      }\r\n    \r\n      .urgent {\r\n        text-decoration: underline;\r\n        text-decoration-color: rgb(205, 15, 15);\r\n      }\r\n      \r\n    #mini-card-status {\r\n        display:block;\r\n    }\r\n\r\n    #mini-card-status.not-started{\r\n        border: 4px solid rgb(205, 15, 15);\r\n        fill: rgb(205, 15, 15);\r\n    }\r\n    #mini-card-status.in-progress{\r\n        border: 4px solid rgb(205, 205, 26);\r\n        fill: rgb(205, 205, 26);\r\n    }\r\n    #mini-card-status.completed {\r\n        border: 4px solid rgb(28, 181, 28);\r\n        fill: rgb(28, 181, 28);\r\n    }\r\n\r\n    .mini-card-info {\r\n        max-width: 30%;\r\n    }\r\n    #full-card-title{\r\n        font-size: 30px;\r\n        width: 100%;\r\n        height: 72px;\r\n    \r\n    }\r\n}"],sourceRoot:""}]);const s=a},249:(n,e,r)=>{r.d(e,{A:()=>s});var t=r(354),o=r.n(t),i=r(314),a=r.n(i)()(o());a.push([n.id,"* {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n    font-family: sans-serif;\n  \n    /* -ms-overflow-style: none; \n    scrollbar-width: none; Firefox */\n}\n\n/* ---- RESET/BASIC STYLING ---- */\n  \n  /* *::-webkit-scrollbar {\n    display: none;\n  } */\n\n\n.container {\n    display: flex;\n    flex-direction:column;\n}\n\n.top {\n    min-height: 20vh;\n    display: flex;  \n    justify-content: space-around;\n    align-items: start;\n    padding-left: 5%;\n    padding-top: 5%;\n    /* background:#faf2ff; */\n    transition: 300ms;\n    overflow: auto;\n    flex-direction: column;\n    flex:1;\n}\n\n\n\n.page {\n    margin-left: 10%;\n    font-size: 2rem;\n}\n\n.logo {\n    grid-area: logo;\n    display: grid;\n    justify-content: center;\n    margin-left: 45%;\n}\n\n/*\nThe sidebar element has a gap of 50px\nThe text elements in the sidebar are centered with grid\n*/\n.sidebar {\n    background-color: #e3e3e3;\n    width: 12rem;\n    height: 100vh;\n    padding: 0;\n    position: fixed;\n    transition: 300ms;\n    z-index: 999;\n    opacity:90%;\n}\n.sidebar--isHidden {\n    transform: translateX(-12rem);\n    transition: 300ms;\n}\n\nsection .container {\n    margin-left: 250px;\n}\n\n.sidebar-menu {\n    list-style: none;\n    padding: 1.5rem;\n    margin-top: 12px;\n    display: flex;\n    flex-direction: column;\n    gap: 3rem;\n}\n\n.sidebar li {\n    color: #131200;\n    text-decoration: none;\n    display: block;\n    cursor:pointer;\n}\n.sidebar li:hover {\n    color: #0197F6;\n    transition: color 150ms linear;\n}\n\n\n.openbtn {\n    border: none;\n    text-align: center;\n    border-radius: 15%;\n    border:none;\n    outline:none;\n    cursor:pointer;\n    position: fixed;\n    transition: transform 300ms ease-in;\n    left: 12rem;\n    color: #131200;\n    background-color:#0197F6;\n    font-weight: bold;\n  }\n\n#show-all{\n    border-radius: 15%;\n    border:none;\n    outline:none;\n    cursor:pointer;\n    transition: transform 300ms ease-in;\n    color: #131200;\n    display: block;\n    font-weight: bold;\n}\n.sidebar li {\n    color: #131200;\n    text-decoration: none;\n    display: block;\n}\n#show-all:hover {\n    color: #0197F6;\n    transition: color 150ms linear;\n}\n\n.openbtn--isHidden {\n    transform: translateX(-12rem);\n    transition: transform 300ms ease-out;\n  }\n\n.openbtn:hover {\n    background-color: #f4a261;\n    transition: all 150ms ease-in;\n}\n\n#logo {\n    width: 4.5rem;\n    height: 4.5rem;\n}\n\n#foot{\n    align-self: flex-end;\n    background: #131200;\n    height: 5vh;\n}\n\n/* Mobile */\n@media only screen and (max-width: 768px) {\n\n    \n    .top {\n        max-height: 15vh;\n        min-height: 10vh;\n    }\n\n    .sidebar {\n        background-color: #e3e3e3;\n        padding: 0;\n        position: fixed;\n        transition: 300ms;\n        z-index: 999;\n    }\n    .sidebar--isHidden {\n        transform: translateX(-12rem);\n        transition: 300ms;\n    }\n    \n    section .container {\n        margin-left: 0px;\n    }\n    \n    .sidebar-menu {\n        list-style: none;\n        padding: 1.5rem;\n        margin-top: 12px;\n        display: flex;\n        flex-direction: column;\n        gap: 3rem;\n    }\n    \n    .sidebar li {\n        color: #131200;\n        text-decoration: none;\n        display: block;\n        cursor:pointer;\n    }\n    .sidebar li:hover {\n        color: #0197F6;\n        transition: color 150ms linear;\n    }\n    \n    \n    .openbtn {\n        border: none;\n        text-align: center;\n        border-radius: 15%;\n        border:none;\n        outline:none;\n        cursor:pointer;\n        position: fixed;\n        transition: transform 300ms ease-in;\n        top: 0;\n        color: #131200;\n        background-color:#0197F6;\n        font-weight: bold;\n      }\n}","",{version:3,sources:["webpack://./src/styles/main.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,SAAS;IACT,sBAAsB;IACtB,uBAAuB;;IAEvB;oCACgC;AACpC;;AAEA,kCAAkC;;EAEhC;;KAEG;;;AAGL;IACI,aAAa;IACb,qBAAqB;AACzB;;AAEA;IACI,gBAAgB;IAChB,aAAa;IACb,6BAA6B;IAC7B,kBAAkB;IAClB,gBAAgB;IAChB,eAAe;IACf,wBAAwB;IACxB,iBAAiB;IACjB,cAAc;IACd,sBAAsB;IACtB,MAAM;AACV;;;;AAIA;IACI,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,gBAAgB;AACpB;;AAEA;;;CAGC;AACD;IACI,yBAAyB;IACzB,YAAY;IACZ,aAAa;IACb,UAAU;IACV,eAAe;IACf,iBAAiB;IACjB,YAAY;IACZ,WAAW;AACf;AACA;IACI,6BAA6B;IAC7B,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,eAAe;IACf,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,cAAc;IACd,qBAAqB;IACrB,cAAc;IACd,cAAc;AAClB;AACA;IACI,cAAc;IACd,8BAA8B;AAClC;;;AAGA;IACI,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,cAAc;IACd,eAAe;IACf,mCAAmC;IACnC,WAAW;IACX,cAAc;IACd,wBAAwB;IACxB,iBAAiB;EACnB;;AAEF;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,cAAc;IACd,mCAAmC;IACnC,cAAc;IACd,cAAc;IACd,iBAAiB;AACrB;AACA;IACI,cAAc;IACd,qBAAqB;IACrB,cAAc;AAClB;AACA;IACI,cAAc;IACd,8BAA8B;AAClC;;AAEA;IACI,6BAA6B;IAC7B,oCAAoC;EACtC;;AAEF;IACI,yBAAyB;IACzB,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,cAAc;AAClB;;AAEA;IACI,oBAAoB;IACpB,mBAAmB;IACnB,WAAW;AACf;;AAEA,WAAW;AACX;;;IAGI;QACI,gBAAgB;QAChB,gBAAgB;IACpB;;IAEA;QACI,yBAAyB;QACzB,UAAU;QACV,eAAe;QACf,iBAAiB;QACjB,YAAY;IAChB;IACA;QACI,6BAA6B;QAC7B,iBAAiB;IACrB;;IAEA;QACI,gBAAgB;IACpB;;IAEA;QACI,gBAAgB;QAChB,eAAe;QACf,gBAAgB;QAChB,aAAa;QACb,sBAAsB;QACtB,SAAS;IACb;;IAEA;QACI,cAAc;QACd,qBAAqB;QACrB,cAAc;QACd,cAAc;IAClB;IACA;QACI,cAAc;QACd,8BAA8B;IAClC;;;IAGA;QACI,YAAY;QACZ,kBAAkB;QAClB,kBAAkB;QAClB,WAAW;QACX,YAAY;QACZ,cAAc;QACd,eAAe;QACf,mCAAmC;QACnC,MAAM;QACN,cAAc;QACd,wBAAwB;QACxB,iBAAiB;MACnB;AACN",sourcesContent:["* {\r\n    padding: 0;\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n    font-family: sans-serif;\r\n  \r\n    /* -ms-overflow-style: none; \r\n    scrollbar-width: none; Firefox */\r\n}\r\n\r\n/* ---- RESET/BASIC STYLING ---- */\r\n  \r\n  /* *::-webkit-scrollbar {\r\n    display: none;\r\n  } */\r\n\r\n\r\n.container {\r\n    display: flex;\r\n    flex-direction:column;\r\n}\r\n\r\n.top {\r\n    min-height: 20vh;\r\n    display: flex;  \r\n    justify-content: space-around;\r\n    align-items: start;\r\n    padding-left: 5%;\r\n    padding-top: 5%;\r\n    /* background:#faf2ff; */\r\n    transition: 300ms;\r\n    overflow: auto;\r\n    flex-direction: column;\r\n    flex:1;\r\n}\r\n\r\n\r\n\r\n.page {\r\n    margin-left: 10%;\r\n    font-size: 2rem;\r\n}\r\n\r\n.logo {\r\n    grid-area: logo;\r\n    display: grid;\r\n    justify-content: center;\r\n    margin-left: 45%;\r\n}\r\n\r\n/*\r\nThe sidebar element has a gap of 50px\r\nThe text elements in the sidebar are centered with grid\r\n*/\r\n.sidebar {\r\n    background-color: #e3e3e3;\r\n    width: 12rem;\r\n    height: 100vh;\r\n    padding: 0;\r\n    position: fixed;\r\n    transition: 300ms;\r\n    z-index: 999;\r\n    opacity:90%;\r\n}\r\n.sidebar--isHidden {\r\n    transform: translateX(-12rem);\r\n    transition: 300ms;\r\n}\r\n\r\nsection .container {\r\n    margin-left: 250px;\r\n}\r\n\r\n.sidebar-menu {\r\n    list-style: none;\r\n    padding: 1.5rem;\r\n    margin-top: 12px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 3rem;\r\n}\r\n\r\n.sidebar li {\r\n    color: #131200;\r\n    text-decoration: none;\r\n    display: block;\r\n    cursor:pointer;\r\n}\r\n.sidebar li:hover {\r\n    color: #0197F6;\r\n    transition: color 150ms linear;\r\n}\r\n\r\n\r\n.openbtn {\r\n    border: none;\r\n    text-align: center;\r\n    border-radius: 15%;\r\n    border:none;\r\n    outline:none;\r\n    cursor:pointer;\r\n    position: fixed;\r\n    transition: transform 300ms ease-in;\r\n    left: 12rem;\r\n    color: #131200;\r\n    background-color:#0197F6;\r\n    font-weight: bold;\r\n  }\r\n\r\n#show-all{\r\n    border-radius: 15%;\r\n    border:none;\r\n    outline:none;\r\n    cursor:pointer;\r\n    transition: transform 300ms ease-in;\r\n    color: #131200;\r\n    display: block;\r\n    font-weight: bold;\r\n}\r\n.sidebar li {\r\n    color: #131200;\r\n    text-decoration: none;\r\n    display: block;\r\n}\r\n#show-all:hover {\r\n    color: #0197F6;\r\n    transition: color 150ms linear;\r\n}\r\n\r\n.openbtn--isHidden {\r\n    transform: translateX(-12rem);\r\n    transition: transform 300ms ease-out;\r\n  }\r\n\r\n.openbtn:hover {\r\n    background-color: #f4a261;\r\n    transition: all 150ms ease-in;\r\n}\r\n\r\n#logo {\r\n    width: 4.5rem;\r\n    height: 4.5rem;\r\n}\r\n\r\n#foot{\r\n    align-self: flex-end;\r\n    background: #131200;\r\n    height: 5vh;\r\n}\r\n\r\n/* Mobile */\r\n@media only screen and (max-width: 768px) {\r\n\r\n    \r\n    .top {\r\n        max-height: 15vh;\r\n        min-height: 10vh;\r\n    }\r\n\r\n    .sidebar {\r\n        background-color: #e3e3e3;\r\n        padding: 0;\r\n        position: fixed;\r\n        transition: 300ms;\r\n        z-index: 999;\r\n    }\r\n    .sidebar--isHidden {\r\n        transform: translateX(-12rem);\r\n        transition: 300ms;\r\n    }\r\n    \r\n    section .container {\r\n        margin-left: 0px;\r\n    }\r\n    \r\n    .sidebar-menu {\r\n        list-style: none;\r\n        padding: 1.5rem;\r\n        margin-top: 12px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 3rem;\r\n    }\r\n    \r\n    .sidebar li {\r\n        color: #131200;\r\n        text-decoration: none;\r\n        display: block;\r\n        cursor:pointer;\r\n    }\r\n    .sidebar li:hover {\r\n        color: #0197F6;\r\n        transition: color 150ms linear;\r\n    }\r\n    \r\n    \r\n    .openbtn {\r\n        border: none;\r\n        text-align: center;\r\n        border-radius: 15%;\r\n        border:none;\r\n        outline:none;\r\n        cursor:pointer;\r\n        position: fixed;\r\n        transition: transform 300ms ease-in;\r\n        top: 0;\r\n        color: #131200;\r\n        background-color:#0197F6;\r\n        font-weight: bold;\r\n      }\r\n}"],sourceRoot:""}]);const s=a},416:(n,e,r)=>{r.d(e,{A:()=>s});var t=r(354),o=r.n(t),i=r(314),a=r.n(i)()(o());a.push([n.id,"button {\n    background: none;\n    font-size: 30px;\n    border: solid #131200;\n    color: #131200;\n    border-radius: 50%;\n    width: 45px;\n    height: 45px;\n    cursor: pointer;\n    \n}\n\nbutton:hover {\n    color: #e3e3e3;\n    border: solid #e3e3e3;\n    transition: color 150ms linear;\n}\n\n#projects {\n    display:flex;\n    flex-direction: column;\n    /* position: fixed; */\n    /* width: 100%; */\n    top: 20vh;\n    padding: 1rem 1rem 1rem 1rem;\n    transition: 300ms;\n    overflow: auto;\n    flex:1;\n}\n\n#project-section-header {\n    display: grid;\n    grid-template-rows: repeat(2, 1fr);\n    padding-bottom: 12px;\n    margin-top: 12px;\n}\n\n#status-labels {\n    align-content: center;\n    justify-items: center;\n    border-radius: 5px;\n}\n\n#new-project-button {\n    align-self: start;\n    height: 3rem;\n    width: 6rem;\n    margin-left: 2rem;\n    border-radius: 0%;\n    font-size: 18px;\n}\n\n.project-header {\n    display: grid;\n    grid-template-columns: 60% 40%;\n    border-radius: 8px;\n    padding: 1rem;\n    background: #0197F6;\n    align-items: center;\n    margin-bottom: 12px;\n}\n\n.head-lbl {\n    background: #e3e3e3;\n    height:100%;\n    width:100%;\n    text-align:center;\n}\n\n.project-options {\n    display:flex;\n    justify-content: space-evenly;\n    align-items: center;\n}\n\n.project-name {\n    font-size: 18px;\n    font-weight: bold;\n    color:#131200;\n    padding-left: 24px;\n}\n.project-name-change-button{\n    \n}\n\n.project-delete-button{\n}\n\n.project-collapse-button{\n}\n\n.new-task-button{\n    grid-row: 1;\n    grid-column-start: 1;\n}\n\n.project-status-wrapper {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 12px;\n    padding: 0rem 2rem;\n    margin-top: -24px;\n}\n\n.project-status-col {\n    background: #e3e3e3;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: start;\n    gap: 16px;\n    overflow: scroll;\n    height: 100%;\n    transition: all 1s;\n    grid-row: 2;\n}\n\n.hover {\n    background: #0197F6;\n    z-index:99;\n}\n\n.save{\n    /* background: ; */\n}\n\n.project-collapse-button::before {\n    content: ' ';\n    display: inline-block;\n\n    border-top: 5px solid transparent;\n    border-bottom: 5px solid transparent;\n    border-left: 5px solid currentColor;\n\n    vertical-align: middle;\n    /* margin-right: .7rem; */\n    transform: translateY(-2px);\n\n    transition: transform .2s ease-out;\n}\n\n.toggle-button-transition {\n    transform: rotate(90deg) translateX(-3px);\n  }\n\n.collapsed {\n    background-color: red;\n    transform: translateY(-100%);\n    max-height:0px;\n }\n\n\n.project {\n    overflow: hidden;\n  }\n  \n/* #expand-contract {\nborder-bottom: 1px solid red;\nmargin-top: -100%;\ntransition: all 1s;\n} */\n\n.project-status-col.expanded {\n    background-color: green;\n    margin-top: 0;\n}\n\n.hide{\n    display:none;\n}\n\n.clicked{\n    color: yellow;\n}\n\n#new-project {\n    display: flex;\n    align-items: start;\n    transition: 300ms;\n    overflow: auto;\n    flex-direction: column;\n    flex: 1;\n}\n\n/* Mobile */\n@media only screen and (max-width: 768px) {\n\n    button {\n        height: 35px;\n        width: 35px;\n        font-size: 20px;\n    }\n    #projects{\n        padding: 0px;\n    }\n    #project-section-header{\n        display: none;\n    }\n\n    .project-status-wrapper {\n        display: flex;\n        flex-direction: column;\n        grid-gap: 0px;\n        padding: 0px;\n        margin-top: -24px;\n    }\n\n    .project-header {\n        margin-bottom: 24px;\n        grid-template-columns: 50% 50%;\n    }\n    .project-status-col {\n        gap: 0px;\n    }\n\n}","",{version:3,sources:["webpack://./src/styles/projectArea.css"],names:[],mappings:"AAAA;IACI,gBAAgB;IAChB,eAAe;IACf,qBAAqB;IACrB,cAAc;IACd,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,eAAe;;AAEnB;;AAEA;IACI,cAAc;IACd,qBAAqB;IACrB,8BAA8B;AAClC;;AAEA;IACI,YAAY;IACZ,sBAAsB;IACtB,qBAAqB;IACrB,iBAAiB;IACjB,SAAS;IACT,4BAA4B;IAC5B,iBAAiB;IACjB,cAAc;IACd,MAAM;AACV;;AAEA;IACI,aAAa;IACb,kCAAkC;IAClC,oBAAoB;IACpB,gBAAgB;AACpB;;AAEA;IACI,qBAAqB;IACrB,qBAAqB;IACrB,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;IACjB,YAAY;IACZ,WAAW;IACX,iBAAiB;IACjB,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,kBAAkB;IAClB,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;IACnB,WAAW;IACX,UAAU;IACV,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,6BAA6B;IAC7B,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,iBAAiB;IACjB,aAAa;IACb,kBAAkB;AACtB;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;IACI,WAAW;IACX,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,qCAAqC;IACrC,cAAc;IACd,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,mBAAmB;IACnB,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,sBAAsB;IACtB,SAAS;IACT,gBAAgB;IAChB,YAAY;IACZ,kBAAkB;IAClB,WAAW;AACf;;AAEA;IACI,mBAAmB;IACnB,UAAU;AACd;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,qBAAqB;;IAErB,iCAAiC;IACjC,oCAAoC;IACpC,mCAAmC;;IAEnC,sBAAsB;IACtB,yBAAyB;IACzB,2BAA2B;;IAE3B,kCAAkC;AACtC;;AAEA;IACI,yCAAyC;EAC3C;;AAEF;IACI,qBAAqB;IACrB,4BAA4B;IAC5B,cAAc;CACjB;;;AAGD;IACI,gBAAgB;EAClB;;AAEF;;;;GAIG;;AAEH;IACI,uBAAuB;IACvB,aAAa;AACjB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,iBAAiB;IACjB,cAAc;IACd,sBAAsB;IACtB,OAAO;AACX;;AAEA,WAAW;AACX;;IAEI;QACI,YAAY;QACZ,WAAW;QACX,eAAe;IACnB;IACA;QACI,YAAY;IAChB;IACA;QACI,aAAa;IACjB;;IAEA;QACI,aAAa;QACb,sBAAsB;QACtB,aAAa;QACb,YAAY;QACZ,iBAAiB;IACrB;;IAEA;QACI,mBAAmB;QACnB,8BAA8B;IAClC;IACA;QACI,QAAQ;IACZ;;AAEJ",sourcesContent:["button {\r\n    background: none;\r\n    font-size: 30px;\r\n    border: solid #131200;\r\n    color: #131200;\r\n    border-radius: 50%;\r\n    width: 45px;\r\n    height: 45px;\r\n    cursor: pointer;\r\n    \r\n}\r\n\r\nbutton:hover {\r\n    color: #e3e3e3;\r\n    border: solid #e3e3e3;\r\n    transition: color 150ms linear;\r\n}\r\n\r\n#projects {\r\n    display:flex;\r\n    flex-direction: column;\r\n    /* position: fixed; */\r\n    /* width: 100%; */\r\n    top: 20vh;\r\n    padding: 1rem 1rem 1rem 1rem;\r\n    transition: 300ms;\r\n    overflow: auto;\r\n    flex:1;\r\n}\r\n\r\n#project-section-header {\r\n    display: grid;\r\n    grid-template-rows: repeat(2, 1fr);\r\n    padding-bottom: 12px;\r\n    margin-top: 12px;\r\n}\r\n\r\n#status-labels {\r\n    align-content: center;\r\n    justify-items: center;\r\n    border-radius: 5px;\r\n}\r\n\r\n#new-project-button {\r\n    align-self: start;\r\n    height: 3rem;\r\n    width: 6rem;\r\n    margin-left: 2rem;\r\n    border-radius: 0%;\r\n    font-size: 18px;\r\n}\r\n\r\n.project-header {\r\n    display: grid;\r\n    grid-template-columns: 60% 40%;\r\n    border-radius: 8px;\r\n    padding: 1rem;\r\n    background: #0197F6;\r\n    align-items: center;\r\n    margin-bottom: 12px;\r\n}\r\n\r\n.head-lbl {\r\n    background: #e3e3e3;\r\n    height:100%;\r\n    width:100%;\r\n    text-align:center;\r\n}\r\n\r\n.project-options {\r\n    display:flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n}\r\n\r\n.project-name {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    color:#131200;\r\n    padding-left: 24px;\r\n}\r\n.project-name-change-button{\r\n    \r\n}\r\n\r\n.project-delete-button{\r\n}\r\n\r\n.project-collapse-button{\r\n}\r\n\r\n.new-task-button{\r\n    grid-row: 1;\r\n    grid-column-start: 1;\r\n}\r\n\r\n.project-status-wrapper {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-gap: 12px;\r\n    padding: 0rem 2rem;\r\n    margin-top: -24px;\r\n}\r\n\r\n.project-status-col {\r\n    background: #e3e3e3;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-content: start;\r\n    gap: 16px;\r\n    overflow: scroll;\r\n    height: 100%;\r\n    transition: all 1s;\r\n    grid-row: 2;\r\n}\r\n\r\n.hover {\r\n    background: #0197F6;\r\n    z-index:99;\r\n}\r\n\r\n.save{\r\n    /* background: ; */\r\n}\r\n\r\n.project-collapse-button::before {\r\n    content: ' ';\r\n    display: inline-block;\r\n\r\n    border-top: 5px solid transparent;\r\n    border-bottom: 5px solid transparent;\r\n    border-left: 5px solid currentColor;\r\n\r\n    vertical-align: middle;\r\n    /* margin-right: .7rem; */\r\n    transform: translateY(-2px);\r\n\r\n    transition: transform .2s ease-out;\r\n}\r\n\r\n.toggle-button-transition {\r\n    transform: rotate(90deg) translateX(-3px);\r\n  }\r\n\r\n.collapsed {\r\n    background-color: red;\r\n    transform: translateY(-100%);\r\n    max-height:0px;\r\n }\r\n\r\n\r\n.project {\r\n    overflow: hidden;\r\n  }\r\n  \r\n/* #expand-contract {\r\nborder-bottom: 1px solid red;\r\nmargin-top: -100%;\r\ntransition: all 1s;\r\n} */\r\n\r\n.project-status-col.expanded {\r\n    background-color: green;\r\n    margin-top: 0;\r\n}\r\n\r\n.hide{\r\n    display:none;\r\n}\r\n\r\n.clicked{\r\n    color: yellow;\r\n}\r\n\r\n#new-project {\r\n    display: flex;\r\n    align-items: start;\r\n    transition: 300ms;\r\n    overflow: auto;\r\n    flex-direction: column;\r\n    flex: 1;\r\n}\r\n\r\n/* Mobile */\r\n@media only screen and (max-width: 768px) {\r\n\r\n    button {\r\n        height: 35px;\r\n        width: 35px;\r\n        font-size: 20px;\r\n    }\r\n    #projects{\r\n        padding: 0px;\r\n    }\r\n    #project-section-header{\r\n        display: none;\r\n    }\r\n\r\n    .project-status-wrapper {\r\n        display: flex;\r\n        flex-direction: column;\r\n        grid-gap: 0px;\r\n        padding: 0px;\r\n        margin-top: -24px;\r\n    }\r\n\r\n    .project-header {\r\n        margin-bottom: 24px;\r\n        grid-template-columns: 50% 50%;\r\n    }\r\n    .project-status-col {\r\n        gap: 0px;\r\n    }\r\n\r\n}"],sourceRoot:""}]);const s=a},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(t)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);t&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),r&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=r):c[2]=r),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},354:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var i={},a=[],s=0;s<n.length;s++){var A=n[s],d=t.base?A[0]+t.base:A[0],c=i[d]||0,l="".concat(d," ").concat(c);i[d]=c+1;var u=r(l),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var h=o(p,t);t.byIndex=s,e.splice(s,0,{identifier:l,updater:h,references:1})}a.push(l)}return a}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var i=t(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=r(i[a]);e[s].references--}for(var A=t(n,o),d=0;d<i.length;d++){var c=r(i[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=A}}},659:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var i=r.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var i=e[t]={id:t,exports:{}};return n[t](i,i.exports,r),i.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),r.nc=void 0,(()=>{const n=(n,e,...r)=>{const t=document.createElement(n);for(let n in e)t.setAttribute(n,e[n]);return r.forEach((n=>{n instanceof Element?t.appendChild(n):t.appendChild(document.createTextNode(n))})),t};function e(n){n.preventDefault();const e=n.currentTarget,r=e.id,t=i(e,n.clientY),o=document.querySelector(".is-dragging"),a=o.dataset.project;console.log("onDragOver task project name",a);let s=r.includes(a);console.log(r),console.log(s),s&&(t?e.insertBefore(o,t):e.appendChild(o))}function t(n){n.preventDefault()}function o(n){const e=n.dataTransfer.getData("text"),r=n.currentTarget,t=document.querySelector(".is-dragging"),o=t.dataset.project,i=r.id;console.log("onDragOver task project name",o);let a=i.includes(o),s=r.dataset.status;if(a){t.dataset.status=s;const r=new CustomEvent("statusChange",{detail:{id:e,newStatus:s}});document.dispatchEvent(r),n.dataTransfer.clearData()}}const i=(n,e)=>{const r=n.querySelectorAll(".mini-card:not(.is-dragging)");let t=null,o=Number.NEGATIVE_INFINITY;return r.forEach((n=>{const{top:r}=n.getBoundingClientRect(),i=e-r;i<0&&i>o&&(o=i,t=n)})),t},a=(Math.pow(10,8),864e5);function s(n){const e=Object.prototype.toString.call(n);return n instanceof Date||"object"==typeof n&&"[object Date]"===e?new n.constructor(+n):"number"==typeof n||"[object Number]"===e||"string"==typeof n||"[object String]"===e?new Date(n):new Date(NaN)}function A(n){const e=s(n);return e.setHours(0,0,0,0),e}function d(n){const e=s(n),r=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()));return r.setUTCFullYear(e.getFullYear()),+n-+r}function c(n,e){const r=s(n),t=s(e),o=l(r,t),i=Math.abs(function(n,e){const r=A(n),t=A(e),o=+r-d(r),i=+t-d(t);return Math.round((o-i)/a)}(r,t));r.setDate(r.getDate()-o*i);const c=o*(i-Number(l(r,t)===-o));return 0===c?0:c}function l(n,e){const r=n.getFullYear()-e.getFullYear()||n.getMonth()-e.getMonth()||n.getDate()-e.getDate()||n.getHours()-e.getHours()||n.getMinutes()-e.getMinutes()||n.getSeconds()-e.getSeconds()||n.getMilliseconds()-e.getMilliseconds();return r<0?-1:r>0?1:r}var u=r(72),p=r.n(u),h=r(825),C=r.n(h),g=r(659),m=r.n(g),B=r(56),f=r.n(B),b=r(540),I=r.n(b),x=r(113),j=r.n(x),v=r(97),y={};y.styleTagTransform=j(),y.setAttributes=f(),y.insert=m().bind(null,"head"),y.domAPI=C(),y.insertStyleElement=I(),p()(v.A,y),v.A&&v.A.locals&&v.A.locals;class w{constructor(n,e){this.task=e,this.projectRenderer=n}setProjectRenderer(n){this.projectRenderer=n}createFullCard(){const e=n("button",{id:"card-remove-button",class:"full-card-info"},"Delete Task");e.addEventListener("click",(n=>{const e=document.querySelector("#card-area");this.deleteTarget(e),this.projectRenderer.project.removeTask(this.task.title),this.projectRenderer.renderAndUpdateProject(),console.log(this.projectRenderer.project.returnProjectJSON())}));const r=new Date;let t=this.task.returnDueDate();c(t,r);const o=n("label",{id:"dueDate-label",for:"new-card-dueDate"},"Due: "),i=n("input",{id:"full-card-dueDate",class:"full-card-info",contenteditable:!0,type:"date"});i.value=t;const a=n("div",{id:"due-date"},o,i),s=n("label",{id:"priority-label",for:"new-card-priority"},"Priority:"),A=n("select",{id:"new-card-priority"},n("option",{value:"low"},"Low"),n("option",{value:"medium"},"Medium"),n("option",{value:"high"},"High"));A.value=this.task.priority;const d=n("div",{id:"priorities"},s,A),l=n("label",{id:"detail-label",for:"new-card-detail"},"Details:"),u=n("textarea",{id:"full-card-detail",class:"full-card-info",contenteditable:!0},this.task.detail),p=n("div",{id:"detail"},l,u),h=n("label",{id:"status-label",for:"new-card-detail"},"Status:"),C=n("select",{id:"full-card-status",class:"full-card-info",contenteditable:!1},n("option",{value:"not-started"},"Not Started"),n("option",{value:"in-progress"},"In Progress"),n("option",{value:"completed"},"Completed"));C.value=this.task.jobStatus;const g=n("div",{id:"status"},h,C),m=n("h2",{id:"full-card-title",class:"full-card-info",contenteditable:!0},this.task.title),B=n("div",{class:"full-card"},m,g,a,d,p,e),f=n("div",{class:"remove-bg",id:"remove-full-card-bg"},B),b=n("div",{id:"card-area"},B,f);return f.addEventListener("click",(n=>{this.task.updateTitle(m.innerHTML),this.task.updateStatus(C.value),this.task.updateDueDate(i.value),this.task.updateDetail(u.innerHTML),this.task.updatePriority(A.value),this.deleteParent(n),this.projectRenderer.renderAndUpdateProject(),console.log(this.projectRenderer.project.returnProjectJSON())})),b}createMinimizedCard(){const e=n("h1",{id:"mini-card-title",class:"mini-card-info"},`Title: ${this.task.title}`),r=n("h2",{id:"mini-card-status",class:"mini-card-info"}),t=n("h2",{id:"mini-card-dueDate",class:"mini-card-info"},`Due: ${this.task.dueDate}`),o=n("h2",{id:"mini-card-priority",class:"mini-card-info"},`Priority: ${this.task.priority.charAt(0).toUpperCase()+this.task.priority.slice(1)}`),i=n("div",{class:"mini-card",id:this.task.title.replace(/\s+/g,"-"),draggable:!0},e,t,o,r);i.setAttribute("data-project",this.projectRenderer.project.returnProjectNameWithNoWhitespace()),i.setAttribute("data-status",this.task.returnStatusAsHtmlData()),"not-started"==this.task.jobStatus?r.classList.add("not-started"):"in-progress"==this.task.jobStatus?r.classList.add("in-progress"):"completed"==this.task.jobStatus&&r.classList.add("completed"),i.addEventListener("click",(()=>{document.body.append(this.createFullCard(this.projectRenderer.project,this.task))})),i.addEventListener("dragstart",(n=>{!function(n){const e=n.target.id;n.dataTransfer.setData("text",e),n.target.classList.add("is-dragging")}(n)})),i.addEventListener("dragend",(n=>{n.target.classList.remove("is-dragging")}));const a=new Date;let s=c(this.task.returnDueDate(),a);return s>=7?t.classList.add("haveTime"):s<7&&s>=2?t.classList.add("shouldDo"):s<2&&t.classList.add("urgent"),"low"==this.task.priority?o.classList.add("haveTime"):"medium"==this.task.priority?o.classList.add("shouldDo"):"high"==this.task.priority&&o.classList.add("urgent"),i}deleteParent(n){n.currentTarget.parentNode.remove()}deleteTarget(n){n.remove()}returnStatus(){return this.task.jobStatus}}class k{constructor(n,e,r,t,o){this.title=n,this.jobStatus=e,this.priority=r,this.dueDate=t,this.detail=o,document.addEventListener("statusChange",(n=>{const e=n.detail.id,r=n.detail.newStatus;e===this.title&&(this.updateStatus(r),console.log(`Status of TodoItem ${this.title} changed to ${this.jobStatus}`))}))}updateStatus(n){this.jobStatus!=n&&(this.jobStatus=n,console.log(this.jobStatus))}updateDetail(n){this.detail=n}updateTitle(n){this.title=n}updatePriority(n){this.priority=n}updateDueDate(n){this.dueDate=n}returnTitle(){return this.title}returnStatus(){return this.jobStatus}returnStatusAsHtmlData(){return this.jobStatus.replace(/\s+/g,"-")}returnPriority(){return this.priority}returnDueDate(){return this.dueDate}returnDetail(){return this.detail}returnItemJSON(){return{title:this.returnTitle(),status:this.returnStatus(),dueDate:this.returnDueDate(),priority:this.returnPriority(),detail:this.returnDetail()}}}const E=new class{constructor(){}throwError(n){throw new Error(n)}};var S=r(416),L={};L.styleTagTransform=j(),L.setAttributes=f(),L.insert=m().bind(null,"head"),L.domAPI=C(),L.insertStyleElement=I(),p()(S.A,L),S.A&&S.A.locals&&S.A.locals;class T{constructor(n,e,r){this.project=e,this.handler=n,this.sidebar=r,document.addEventListener("statusChange",(n=>{const e=n.detail.id.replaceAll("-"," ").toLowerCase(),r=n.detail.newStatus,t=this.project.returnAllTaskTitles();t.forEach((n=>n.toLowerCase())),t.includes(e)&&this.project.filterTasks(e).updateStatus(r)}))}clearAllChildren(n){n.innerHTML=""}renderAndUpdateProject(){const n=this.project.returnProjectNameWithNoWhitespace();document.querySelectorAll(`#${n} .project-status-col`).forEach((n=>{n.hasChildNodes()&&this.clearAllChildren(n)})),this.placeTaskCardsIntoProjectDOM()}submitNewTask(){const n=document.querySelector("#new-card-title").value,e=document.querySelector("#new-card-dueDate").value,r=document.querySelector("#new-card-priority").value,t=document.querySelector("#new-card-detail").value;let o=new k(n,"not-started",r,e,t);console.log(o.returnDueDate()),this.project.addTask(o)}renderTaskCards(){const n=this.project.returnAllTasks();let e=[];for(let r of n){let n=new w(this,r);e.push(n)}return e}placeTaskCardsIntoProjectDOM(){let n=this.renderTaskCards();for(let e of n){let n=`#${e.returnStatus()}-${this.project.returnProjectNameWithNoWhitespace()}`;document.querySelector(n).appendChild(e.createMinimizedCard())}}getProject(){return this.project}updateIDsToNewProjectName(n,e){const r=document.querySelector(`#${n}-title`);let t=document.querySelector(`#${this.project.returnProjectNameWithNoWhitespace()}-edit`);"✎"!=t.innerHTML&&(t.innerHTML="✎"),document.querySelector(`#${n}`).setAttribute("id",e),document.querySelector(`#columns-${n}`).setAttribute("id",`#columns-${e}`);const o=document.querySelector(`#not-started-${n}`);o.setAttribute("id",`not-started-${e}`);const i=document.querySelector(`#in-progress-${n}`);i.setAttribute("id",`in-progress-${e}`);const a=document.querySelector(`#completed-${n}`);a.setAttribute("id",`completed-${e}`),r.setAttribute("id",`${e}-title`),t.setAttribute("id",`${e}-edit`),document.querySelector(`#${n}-delete`).setAttribute("id",`${e}-delete`),document.querySelector(`#${n}-collapse`).setAttribute("id",`${e}-collapse`),(o.hasChildNodes()||i.hasChildNodes()||a.hasChildNodes())&&(o.childNodes.forEach((n=>n.dataset.project=e)),i.childNodes.forEach((n=>n.dataset.project=e)),a.childNodes.forEach((n=>n.dataset.project=e))),this.project.updateProjectName(e),this.sidebar.displayProjects()}createNewTaskForm(){const e=n("input",{id:"new-card-title",class:"new-card-info",type:"text",placeholder:"New Task"}),r=n("label",{id:"dueDate-label",for:"new-card-dueDate"},"Due: "),t=n("input",{id:"new-card-dueDate",class:"new-card-info",type:"date"}),o=n("div",{id:"due-date"},r,t),i=n("label",{id:"priority-label",for:"new-card-priority"},"Priority:"),a=n("select",{id:"new-card-priority"},n("option",{value:"low"},"Low"),n("option",{value:"medium"},"Medium"),n("option",{value:"high"},"High")),s=n("div",{id:"priorities"},i,a),A=n("label",{id:"detail-label",for:"new-card-detail"},"Details:"),d=n("textarea",{id:"new-card-detail",class:"new-card-info",type:"text"}),c=n("div",{id:"detail"},A,d),l=n("button",{id:"new-card-create-button",class:"new-card-info"},"Create Task"),u=n("div",{class:"full-card"},e,c,s,o,l),p=n("div",{class:"remove-bg",id:"remove-full-card-bg"},u),h=n("div",{id:"card-area"},u,p);p.addEventListener("click",(function(n){n.currentTarget.parentNode.remove()})),l.addEventListener("click",(n=>{this.submitNewTask(this.project),this.renderAndUpdateProject(),n.currentTarget.parentNode.parentNode.remove()})),document.body.append(h)}createProjectDOM(n){this.renderProjectHeader(),this.renderProjectTaskColumns(n)}renderProjectHeader(){this.project;const e=n("button",{class:"new-task-button"},"+");e.addEventListener("click",(()=>{this.createNewTaskForm(this.project)}));const r=n("div",{class:"project-name",id:`${this.project.returnProjectNameWithNoWhitespace()}-title`},this.project.name),t=n("button",{class:"project-name-change-button",id:`${this.project.returnProjectNameWithNoWhitespace()}-edit`},"✎");t.addEventListener("click",(n=>{const e=document.querySelector(`#${this.project.returnProjectNameWithNoWhitespace()}`);if(t.classList.contains("save")){let n=e.id,o=r.innerHTML.replace(/\s+/g,"-");!function(n){n.innerHTML="✎",r.setAttribute("contenteditable",!1),n.classList.remove("save")}(t),this.updateIDsToNewProjectName(n,o)}else!function(n){r.setAttribute("contenteditable",!0),r.focus(),n.innerHTML="💾",n.classList.add("save")}(t),t.innerHTML="💾"}));const o=n("button",{class:"project-delete-button",id:`${this.project.returnProjectNameWithNoWhitespace()}-delete`},"🗑");o.addEventListener("click",(()=>{const n=document.querySelector(`#${this.project.returnProjectNameWithNoWhitespace()}`);this.handler.removeProject(this.project.name),n.remove(),this.sidebar.displayProjects()}));const i=n("button",{class:"project-collapse-button",id:`${this.project.returnProjectNameWithNoWhitespace()}-collapse`});i.addEventListener("click",(n=>{console.log(`#columns-${this.project.returnProjectNameWithNoWhitespace()}`);const e=n.target.parentNode.parentNode.nextSibling;console.log(e),e.classList.contains("collapsed")?(e.classList.remove("collapsed"),i.classList.remove("toggle-button-transition")):(e.classList.add("collapsed"),i.classList.add("toggle-button-transition"))}));const a=n("div",{class:"project-options"},t,e,o,i),s=n("div",{class:"project-header"},r,a);return r.addEventListener("input",(n=>{let e=document.querySelector(`#${this.project.returnProjectNameWithNoWhitespace()}-edit`);"✎"!=e.innerHTML&&(e.innerHTML="💾")})),s}renderProjectTaskColumns(r){const i=n("div",{class:"project-status-col",id:`not-started-${this.project.returnProjectNameWithNoWhitespace()}`});i.classList.add("not-started"),i.setAttribute("data-status","not-started"),i.addEventListener("dragover",(n=>{e(n)})),i.addEventListener("drop",(n=>{o(n)})),i.addEventListener("dragleave",(n=>{t(n)}));const a=n("div",{class:"project-status-col",id:`in-progress-${this.project.returnProjectNameWithNoWhitespace()}`});a.classList.add("in-progress"),a.setAttribute("data-status","in-progress"),a.addEventListener("dragover",(n=>{e(n)})),a.addEventListener("drop",(n=>{o(n)})),a.addEventListener("dragleave",(n=>{t(n)}));const s=n("div",{class:"project-status-col",id:`completed-${this.project.returnProjectNameWithNoWhitespace()}`});s.classList.add("completed"),s.setAttribute("data-status","completed"),s.addEventListener("dragover",(n=>{e(n)})),s.addEventListener("drop",(n=>{o(n)})),s.addEventListener("dragleave",(n=>{t(n)}));const A=n("div",{class:"project-status-wrapper",id:`columns-${this.project.returnProjectNameWithNoWhitespace()}`},i,a,s),d=this.renderProjectHeader(),c=n("div",{class:"project",id:this.project.returnProjectNameWithNoWhitespace()},d,A),l=document.querySelector("#projects");r?(document.querySelector("#project-section-header"),l.insertBefore(c,null)):l.insertBefore(c,null)}}class N{constructor(n){this.name=n,this.tasks=[]}addTask(n){this.tasks.filter((e=>n.title!==e))&&this.tasks.push(n)}removeTask(n){this.tasks=this.tasks.filter((e=>e.title!==n))}filterTasks(n){let e,r=[];for(e=0;e<this.tasks.length;e++)this.tasks[e].title.toLowerCase().includes(n.toLowerCase())&&r.push(e);return this.tasks[r]}returnAllTasks(){return this.tasks}returnAllTaskTitles(){let n=[];for(let e of this.tasks)n.push(e.returnTitle());return console.log(n),n}returnProjectName(){return this.name}returnProjectNameWithNoWhitespace(){return this.name.replace(/\s+/g,"-")}returnProjectJSON(){let n=[];for(const e of this.tasks)n.push(e.returnItemJSON());return{name:this.returnProjectName(),tasks:n}}updateProjectName(n){this.name=n}}class P{constructor(n){this.handler=n,this.projectList=this.handler.returnAllProjects(),this.DOM=document.querySelector(".sidebar")}getProjectList(){return this.handler.returnAllProjects()}getProjectTitles(){return this.handler.returnAllProjectTitles()}displayProjects(){const e=document.querySelector("#sidebar-project-list");e.hasChildNodes&&(e.innerHTML="");const r=this.getProjectList();for(let t of r){console.log(t);const r=n("li",{class:"project-list-item",id:`${t.returnProjectNameWithNoWhitespace()}-sidebar`},t.returnProjectName());r.addEventListener("click",(n=>{this.showSingleProject(t.returnProjectNameWithNoWhitespace()),console.log(n),n.target.classList.add("clicked")})),e.appendChild(r)}}showSingleProject(n){document.querySelectorAll(".project").forEach((n=>{n.classList.add("hide")})),document.querySelectorAll("li").forEach((n=>n.classList.remove("clicked"))),document.querySelector(`#${n}`).classList.remove("hide")}giveSidebarOpenButtonFunction(){const n=document.querySelector(".openbtn"),e=document.querySelector(".sidebar"),r=document.querySelector(".top"),t=document.querySelector("#projects"),o=document.querySelector("#new-project"),i=document.querySelector("#foot");n.addEventListener("click",(()=>{e.classList.toggle("sidebar--isHidden"),n.classList.toggle(".openbtn--isHidden"),e.classList.contains("sidebar--isHidden")?(function(){const n=window.matchMedia("(min-width: 768px)");console.log(n),n.matches&&(e.style.width="0",r.style.marginLeft="0px",t.style.marginLeft="0px",o.style.marginLeft="0px",i.style.marginLeft="0px")}(),n.innerHTML="☰"):(function(){const n=window.matchMedia("(min-width: 768px)");console.log(n),n.matches&&(e.style.width="250px",r.style.marginLeft="250px",t.style.marginLeft="250px",o.style.marginLeft="250px",i.style.marginLeft="250px")}(),n.innerHTML="X")}))}showAllProjects(){document.querySelectorAll(".project").forEach((n=>{n.classList.remove("hide")})),document.querySelectorAll("li").forEach((n=>n.classList.remove("clicked")))}giveShowAllFunction(){document.querySelector("#show-all").addEventListener("click",this.showAllProjects)}activateSidebar(){this.giveSidebarOpenButtonFunction(),this.giveShowAllFunction()}}var W=r(249),Q={};Q.styleTagTransform=j(),Q.setAttributes=f(),Q.insert=m().bind(null,"head"),Q.domAPI=C(),Q.insertStyleElement=I(),p()(W.A,Q),W.A&&W.A.locals&&W.A.locals;const D=new class{constructor(n){this.projectList=[],this.sidebar=n}addProject(n){this.projectList.some((e=>e.name===n.name))?E.throwError("Project Already Exists"):this.projectList.push(n)}removeProject(n){this.projectList=this.projectList.filter((e=>e.name!==n))}returnAllProjectTitles(){const n=[];for(const e of this.projectList)n.push(e.name);return n}returnAllProjects(){return this.projectList}returnSingleProject(n){let e,r=[];for(e=0;e<this.projectList.length;e++)this.projectList[e].name.toLowerCase().includes(n.toLowerCase())&&r.push(e);return this.projectList[r]}};let Y=new class{constructor(n){this.projectHandler=n,this.sidebar=new P(this.projectHandler)}setProjectHandler(n){this.projectHandler=n}setCreateNewProjectButton(){document.querySelector("#new-project-button").addEventListener("click",this.createSingleProject.bind(this))}createSingleProject(){const n="New Project";let e,r=1;const t=this.projectHandler.returnAllProjectTitles();if(t.includes(n))do{e=n+r,r+=1}while(t.includes(e));else e=n;const o=new N(e),i=new T(this.projectHandler,o,this.sidebar);this.projectHandler.addProject(o),i.createProjectDOM(!0),this.sidebar.displayProjects()}initialize(){const n=this.projectHandler.returnAllProjects();for(const e of n){const n=new T(this.projectHandler,e,this.sidebar);n.createProjectDOM(),n.placeTaskCardsIntoProjectDOM()}this.sidebar.activateSidebar(),this.sidebar.displayProjects(),this.setCreateNewProjectButton()}}(D);Y.initialize(D)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFNRSxFQUFzQixjQUM1QixJQUNJQyxFQURBdFgsRUFBSSxFQUdSLE1BQU11WCxFQUFnQi9YLEtBQUtnUixlQUFlNEUseUJBQzFDLEdBQUltQyxFQUFjelAsU0FBU3VQLEdBQ3ZCLEdBQ0lDLEVBQWtCRCxFQUFzQnJYLEVBQ3hDQSxHQUFLLFFBQ0F1WCxFQUFjelAsU0FBU3dQLFNBRWhDQSxFQUFrQkQsRUFHdEIsTUFBTXZCLEVBQWEsSUFBSXpCLEVBQVFpRCxHQUN6QkUsRUFBcUIsSUFBSWpILEVBQWdCL1EsS0FBS2dSLGVBQWdCc0YsRUFBWXRXLEtBQUtpUixTQUNyRmpSLEtBQUtnUixlQUFlbUcsV0FBV2IsR0FDL0IwQixFQUFtQnpFLGtCQUFpQixHQUNwQ3ZULEtBQUtpUixRQUFRaUMsaUJBQ2pCLENBRUEsVUFBQStFLEdBQ0ksTUFBTTFDLEVBQWN2VixLQUFLZ1IsZUFBZXdFLG9CQUN4QyxJQUFLLE1BQU1NLEtBQVFQLEVBQWEsQ0FDNUIsTUFBTTJDLEVBQWlCLElBQUluSCxFQUFnQi9RLEtBQUtnUixlQUFnQjhFLEVBQU05VixLQUFLaVIsU0FDM0VpSCxFQUFlM0UsbUJBQ2YyRSxFQUFldEcsOEJBQ25CLENBQ0E1UixLQUFLaVIsUUFBUWlHLGtCQUNibFgsS0FBS2lSLFFBQVFpQyxrQkFDYmxULEtBQUswWCwyQkFDVCxHRFIyQjFHLEdBRS9Cd0csRUFBS1MsV0FBV2pILEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvLy4vc3JjL3N0eWxlcy9jYXJkcy5jc3MiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9zdHlsZXMvbWFpbi5jc3MiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9zdHlsZXMvcHJvamVjdEFyZWEuY3NzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3RvZG8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9kby93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90b2RvL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90b2RvL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9kby93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9jb21wb25lbnRNYWtlcnMuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9kcmFnRnVuY3Rpb25zLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvY29uc3RhbnRzLm1qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL3RvRGF0ZS5tanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9zdGFydE9mRGF5Lm1qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL19saWIvZ2V0VGltZXpvbmVPZmZzZXRJbk1pbGxpc2Vjb25kcy5tanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9kaWZmZXJlbmNlSW5EYXlzLm1qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2RpZmZlcmVuY2VJbkNhbGVuZGFyRGF5cy5tanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9zdHlsZXMvY2FyZHMuY3NzP2Q5OGIiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9jYXJkRGlzcGxheS5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL3RvZG9PYmouanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9wcm9qZWN0SGFuZGxlci5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2Vycm9yTG9nZ2VyLmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvc3R5bGVzL3Byb2plY3RBcmVhLmNzcz8xYTY2Iiwid2VicGFjazovL3RvZG8vLi9zcmMvcHJvamVjdERpc3BsYXkuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9wcm9qZWN0T2JqLmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvc2lkZWJhci5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL3N0eWxlcy9tYWluLmNzcz9lODBhIiwid2VicGFjazovL3RvZG8vLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9wYWdlQ29udHJvbGxlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgaDEsIGgyIHtcclxuICAgIHRleHQtb3ZlcmZsb3c6IGNsaXA7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIC8qIGZvbnQtc2l6ZTogMTJweDsgKi9cclxufVxyXG5cclxudGV4dGFyZWEge1xyXG4gICAgcmVzaXplOiBub25lO1xyXG59XHJcblxyXG5sYWJlbCwgc2VsZWN0LCB0ZXh0YXJlYSwgcCB7XHJcbiAgICBkaXNwbGF5OmJsb2NrO1xyXG4gICAgcmVzaXplOm5vbmU7XHJcbn1cclxuc2VsZWN0LCB0ZXh0YXJlYSwgcCB7XHJcbiAgICBwYWRkaW5nOiAxMnB4O1xyXG59XHJcblxyXG4ubWluaS1jYXJkIHtcclxuICAgIG1pbi1oZWlnaHQ6IDIwMHB4O1xyXG4gICAgbWF4LWhlaWdodDogODAwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDQwMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMjBweCBzb2xpZCBibGFjaztcclxuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gICAgYm94LXNoYWRvdzogMHB4IDVweCAxNXB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgcGFkZGluZzogMTJweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIGN1cnNvcjogbW92ZTtcclxufVxyXG4ucmVtb3ZlLWJnIHtcclxuICAgIHBvc2l0aW9uOmFic29sdXRlO1xyXG4gICAgd2lkdGg6MTAwJTtcclxuICAgIGhlaWdodDoxMDAlO1xyXG4gICAgei1pbmRleDo5O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjUpO1xyXG59XHJcblxyXG4uZnVsbC1jYXJkIHtcclxuICAgIHotaW5kZXg6IDk5O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZTpcclxuICAgICAgICAndGl0bGUgdGl0bGUgdGl0bGUnIGF1dG9cclxuICAgICAgICAnIGRlc2MgZGVzYyBwcmlvcml0eScgYXV0b1xyXG4gICAgICAgICdkZXNjIGRlc2MgZGF0ZScgYXV0b1xyXG4gICAgICAgICdkZXNjIGRlc2Mgc3RhdHVzJyBhdXRvXHJcbiAgICAgICAgJyBidXR0b24gZm9vdCBmb290ICcgYXV0bztcclxuICAgIHdpZHRoOiA0MCU7XHJcbiAgICBoZWlnaHQ6IDgwJTtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgcGFkZGluZzoyNHB4O1xyXG4gICAgZ3JpZC1nYXA6IDI0cHg7XHJcbn1cclxuXHJcbiNuZXctY2FyZC10aXRsZSwgI2Z1bGwtY2FyZC10aXRsZSB7XHJcbiAgICBncmlkLWFyZWE6IHRpdGxlO1xyXG59XHJcblxyXG4jZGV0YWlsLCAjZnVsbC1jYXJkLWRldGFpbCB7XHJcbiAgICBncmlkLWFyZWE6IGRlc2M7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuI2RldGFpbC1sYWJlbCwgI25ldy1jYXJkLWRldGFpbCB7XHJcbiAgICBkaXNwbGF5OmJsb2NrO1xyXG59XHJcblxyXG4jbWluaS1jYXJkLXN0YXR1cyB7XHJcbiAgICBib3JkZXItcmFkaXVzOiAyNSU7XHJcbiAgICBkaXNwbGF5Om5vbmU7XHJcbn1cclxuXHJcblxyXG5cclxuI25ldy1jYXJkLWRldGFpbCB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuI3ByaW9yaXRpZXMsICNmdWxsLWNhcmQtcHJpb3JpdHl7XHJcbiAgICBncmlkLWFyZWE6IHByaW9yaXR5O1xyXG59XHJcblxyXG4jZHVlLWRhdGUsICNmdWxsLWNhcmQtZHVlRGF0ZXtcclxuICAgIGdyaWQtYXJlYTogZGF0ZTtcclxufVxyXG5cclxuI2NhcmQtcmVtb3ZlLWJ1dHRvbiwgI25ldy1jYXJkLWNyZWF0ZS1idXR0b257XHJcbiAgICBncmlkLWFyZWE6IGJ1dHRvbjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIHdpZHRoOiA2cmVtO1xyXG4gICAgaGVpZ2h0OiAzcmVtO1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XHJcbn1cclxuXHJcbiNmdWxsLWNhcmQtc3RhdHVzIHtcclxuICAgIGdyaWQtYXJlYTogc3RhdHVzO1xyXG59XHJcblxyXG4jY2FyZC1hcmVhIHtcclxuICAgIHBvc2l0aW9uOmZpeGVkO1xyXG4gICAgcGFkZGluZzowO1xyXG4gICAgbWFyZ2luOjA7XHJcblxyXG4gICAgdG9wOjA7XHJcbiAgICBsZWZ0OjA7XHJcblxyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kOnJnYmEoMjU1LDI1NSwyNTUsMC41KTtcclxuXHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLmhpZGUge1xyXG4gICAgZGlzcGxheTpub25lO1xyXG59XHJcblxyXG4uaXMtZHJhZ2dpbmcge1xyXG4gICAgc2NhbGU6IDEuMDU7XHJcbiAgICBib3gtc2hhZG93OiAwcHggNXB4IDE1cHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcclxuICAgIGJhY2tncm91bmQ6IHJnYig1MCwgNTAsIDUwKTtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICB9XHJcblxyXG4gIC5oYXZlVGltZSB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgIHRleHQtZGVjb3JhdGlvbi1jb2xvcjogcmdiKDI4LCAxODEsIDI4KTtcclxuICB9XHJcblxyXG4gIC5zaG91bGREbyB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgIHRleHQtZGVjb3JhdGlvbi1jb2xvcjogcmdiKDIwNSwgMjA1LCAyNik7XHJcbiAgfVxyXG5cclxuICAudXJnZW50IHtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uLWNvbG9yOiByZ2IoMjA1LCAxNSwgMTUpO1xyXG4gIH1cclxuXHJcbiAgXHJcbi8qIE1vYmlsZSAqL1xyXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcblxyXG4gICAgLm1pbmktY2FyZCB7XHJcbiAgICAgICAgbWluLWhlaWdodDogMHB4O1xyXG4gICAgICAgIG1heC1oZWlnaHQ6IDIwMHB4O1xyXG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgICB3aWR0aDogOTklO1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDBweCA1cHggMTVweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xyXG4gICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICBwYWRkaW5nOiAxMnB4O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgICAgICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcclxuICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgICAgICBmb250LXNpemU6IDhweDtcclxuICAgICAgICBjdXJzb3I6IG1vdmU7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICB9XHJcblxyXG4gICAgLmZ1bGwtY2FyZCB7ICAgXHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgaGVpZ2h0OiA4MCU7XHJcbiAgICB9XHJcblxyXG4gICAgLmhhdmVUaW1lIHtcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb24tY29sb3I6IHJnYigyOCwgMTgxLCAyOCk7XHJcbiAgICAgIH1cclxuICAgIFxyXG4gICAgICAuc2hvdWxkRG8ge1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbi1jb2xvcjogcmdiKDIwNSwgMjA1LCAyNik7XHJcbiAgICAgIH1cclxuICAgIFxyXG4gICAgICAudXJnZW50IHtcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb24tY29sb3I6IHJnYigyMDUsIDE1LCAxNSk7XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAjbWluaS1jYXJkLXN0YXR1cyB7XHJcbiAgICAgICAgZGlzcGxheTpibG9jaztcclxuICAgIH1cclxuXHJcbiAgICAjbWluaS1jYXJkLXN0YXR1cy5ub3Qtc3RhcnRlZHtcclxuICAgICAgICBib3JkZXI6IDRweCBzb2xpZCByZ2IoMjA1LCAxNSwgMTUpO1xyXG4gICAgICAgIGZpbGw6IHJnYigyMDUsIDE1LCAxNSk7XHJcbiAgICB9XHJcbiAgICAjbWluaS1jYXJkLXN0YXR1cy5pbi1wcm9ncmVzc3tcclxuICAgICAgICBib3JkZXI6IDRweCBzb2xpZCByZ2IoMjA1LCAyMDUsIDI2KTtcclxuICAgICAgICBmaWxsOiByZ2IoMjA1LCAyMDUsIDI2KTtcclxuICAgIH1cclxuICAgICNtaW5pLWNhcmQtc3RhdHVzLmNvbXBsZXRlZCB7XHJcbiAgICAgICAgYm9yZGVyOiA0cHggc29saWQgcmdiKDI4LCAxODEsIDI4KTtcclxuICAgICAgICBmaWxsOiByZ2IoMjgsIDE4MSwgMjgpO1xyXG4gICAgfVxyXG5cclxuICAgIC5taW5pLWNhcmQtaW5mbyB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAzMCU7XHJcbiAgICB9XHJcbiAgICAjZnVsbC1jYXJkLXRpdGxle1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMzBweDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IDcycHg7XHJcbiAgICBcclxuICAgIH1cclxufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9jYXJkcy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQixxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLFdBQVc7QUFDZjtBQUNBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLCtCQUErQjtJQUMvQixpQkFBaUI7SUFDakIsWUFBWTtJQUNaLDRDQUE0QztJQUM1QyxVQUFVO0lBQ1Ysa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsWUFBWTtBQUNoQjtBQUNBO0lBQ0ksaUJBQWlCO0lBQ2pCLFVBQVU7SUFDVixXQUFXO0lBQ1gsU0FBUztJQUNULGlDQUFpQztBQUNyQzs7QUFFQTtJQUNJLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYjs7Ozs7aUNBSzZCO0lBQzdCLFVBQVU7SUFDVixXQUFXO0lBQ1gsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixvQkFBb0I7SUFDcEIsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLFlBQVk7SUFDWixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFlBQVk7QUFDaEI7Ozs7QUFJQTtJQUNJLFlBQVk7SUFDWixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksY0FBYztJQUNkLFNBQVM7SUFDVCxRQUFROztJQUVSLEtBQUs7SUFDTCxNQUFNOztJQUVOLFdBQVc7SUFDWCxZQUFZO0lBQ1osZ0NBQWdDOztJQUVoQyxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksV0FBVztJQUNYLDRDQUE0QztJQUM1QywyQkFBMkI7SUFDM0IsWUFBWTtFQUNkOztFQUVBO0lBQ0UsMEJBQTBCO0lBQzFCLHVDQUF1QztFQUN6Qzs7RUFFQTtJQUNFLDBCQUEwQjtJQUMxQix3Q0FBd0M7RUFDMUM7O0VBRUE7SUFDRSwwQkFBMEI7SUFDMUIsdUNBQXVDO0VBQ3pDOzs7QUFHRixXQUFXO0FBQ1g7O0lBRUk7UUFDSSxlQUFlO1FBQ2YsaUJBQWlCO1FBQ2pCLGVBQWU7UUFDZixVQUFVO1FBQ1YsaUJBQWlCO1FBQ2pCLDRDQUE0QztRQUM1QyxrQkFBa0I7UUFDbEIsYUFBYTtRQUNiLGtCQUFrQjtRQUNsQix1QkFBdUI7UUFDdkIsdUJBQXVCO1FBQ3ZCLGNBQWM7UUFDZCxZQUFZO1FBQ1osYUFBYTtRQUNiLDhCQUE4QjtJQUNsQzs7SUFFQTtRQUNJLGFBQWE7UUFDYixzQkFBc0I7UUFDdEIsVUFBVTtRQUNWLFdBQVc7SUFDZjs7SUFFQTtRQUNJLDBCQUEwQjtRQUMxQix1Q0FBdUM7TUFDekM7O01BRUE7UUFDRSwwQkFBMEI7UUFDMUIsd0NBQXdDO01BQzFDOztNQUVBO1FBQ0UsMEJBQTBCO1FBQzFCLHVDQUF1QztNQUN6Qzs7SUFFRjtRQUNJLGFBQWE7SUFDakI7O0lBRUE7UUFDSSxrQ0FBa0M7UUFDbEMsc0JBQXNCO0lBQzFCO0lBQ0E7UUFDSSxtQ0FBbUM7UUFDbkMsdUJBQXVCO0lBQzNCO0lBQ0E7UUFDSSxrQ0FBa0M7UUFDbEMsc0JBQXNCO0lBQzFCOztJQUVBO1FBQ0ksY0FBYztJQUNsQjtJQUNBO1FBQ0ksZUFBZTtRQUNmLFdBQVc7UUFDWCxZQUFZOztJQUVoQjtBQUNKXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImgxLCBoMiB7XFxyXFxuICAgIHRleHQtb3ZlcmZsb3c6IGNsaXA7XFxyXFxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XFxyXFxuICAgIG92ZXJmbG93OiBoaWRkZW47XFxyXFxuICAgIC8qIGZvbnQtc2l6ZTogMTJweDsgKi9cXHJcXG59XFxyXFxuXFxyXFxudGV4dGFyZWEge1xcclxcbiAgICByZXNpemU6IG5vbmU7XFxyXFxufVxcclxcblxcclxcbmxhYmVsLCBzZWxlY3QsIHRleHRhcmVhLCBwIHtcXHJcXG4gICAgZGlzcGxheTpibG9jaztcXHJcXG4gICAgcmVzaXplOm5vbmU7XFxyXFxufVxcclxcbnNlbGVjdCwgdGV4dGFyZWEsIHAge1xcclxcbiAgICBwYWRkaW5nOiAxMnB4O1xcclxcbn1cXHJcXG5cXHJcXG4ubWluaS1jYXJkIHtcXHJcXG4gICAgbWluLWhlaWdodDogMjAwcHg7XFxyXFxuICAgIG1heC1oZWlnaHQ6IDgwMHB4O1xcclxcbiAgICBtYXgtd2lkdGg6IDQwMHB4O1xcclxcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4IHNvbGlkIGJsYWNrO1xcclxcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcXHJcXG4gICAgY29sb3I6IGJsYWNrO1xcclxcbiAgICBib3gtc2hhZG93OiAwcHggNXB4IDE1cHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcXHJcXG4gICAgd2lkdGg6IDgwJTtcXHJcXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xcclxcbiAgICBwYWRkaW5nOiAxMnB4O1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XFxyXFxuICAgIGN1cnNvcjogbW92ZTtcXHJcXG59XFxyXFxuLnJlbW92ZS1iZyB7XFxyXFxuICAgIHBvc2l0aW9uOmFic29sdXRlO1xcclxcbiAgICB3aWR0aDoxMDAlO1xcclxcbiAgICBoZWlnaHQ6MTAwJTtcXHJcXG4gICAgei1pbmRleDo5O1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLDAuNSk7XFxyXFxufVxcclxcblxcclxcbi5mdWxsLWNhcmQge1xcclxcbiAgICB6LWluZGV4OiA5OTtcXHJcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcXHJcXG4gICAgZGlzcGxheTogZ3JpZDtcXHJcXG4gICAgZ3JpZC10ZW1wbGF0ZTpcXHJcXG4gICAgICAgICd0aXRsZSB0aXRsZSB0aXRsZScgYXV0b1xcclxcbiAgICAgICAgJyBkZXNjIGRlc2MgcHJpb3JpdHknIGF1dG9cXHJcXG4gICAgICAgICdkZXNjIGRlc2MgZGF0ZScgYXV0b1xcclxcbiAgICAgICAgJ2Rlc2MgZGVzYyBzdGF0dXMnIGF1dG9cXHJcXG4gICAgICAgICcgYnV0dG9uIGZvb3QgZm9vdCAnIGF1dG87XFxyXFxuICAgIHdpZHRoOiA0MCU7XFxyXFxuICAgIGhlaWdodDogODAlO1xcclxcbiAgICBmb250LXNpemU6IDE4cHg7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXHJcXG4gICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XFxyXFxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcXHJcXG4gICAgcGFkZGluZzoyNHB4O1xcclxcbiAgICBncmlkLWdhcDogMjRweDtcXHJcXG59XFxyXFxuXFxyXFxuI25ldy1jYXJkLXRpdGxlLCAjZnVsbC1jYXJkLXRpdGxlIHtcXHJcXG4gICAgZ3JpZC1hcmVhOiB0aXRsZTtcXHJcXG59XFxyXFxuXFxyXFxuI2RldGFpbCwgI2Z1bGwtY2FyZC1kZXRhaWwge1xcclxcbiAgICBncmlkLWFyZWE6IGRlc2M7XFxyXFxuICAgIGhlaWdodDogMTAwJTtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxufVxcclxcblxcclxcbiNkZXRhaWwtbGFiZWwsICNuZXctY2FyZC1kZXRhaWwge1xcclxcbiAgICBkaXNwbGF5OmJsb2NrO1xcclxcbn1cXHJcXG5cXHJcXG4jbWluaS1jYXJkLXN0YXR1cyB7XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDI1JTtcXHJcXG4gICAgZGlzcGxheTpub25lO1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG5cXHJcXG4jbmV3LWNhcmQtZGV0YWlsIHtcXHJcXG4gICAgaGVpZ2h0OiAxMDAlO1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG59XFxyXFxuXFxyXFxuI3ByaW9yaXRpZXMsICNmdWxsLWNhcmQtcHJpb3JpdHl7XFxyXFxuICAgIGdyaWQtYXJlYTogcHJpb3JpdHk7XFxyXFxufVxcclxcblxcclxcbiNkdWUtZGF0ZSwgI2Z1bGwtY2FyZC1kdWVEYXRle1xcclxcbiAgICBncmlkLWFyZWE6IGRhdGU7XFxyXFxufVxcclxcblxcclxcbiNjYXJkLXJlbW92ZS1idXR0b24sICNuZXctY2FyZC1jcmVhdGUtYnV0dG9ue1xcclxcbiAgICBncmlkLWFyZWE6IGJ1dHRvbjtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcclxcbiAgICB3aWR0aDogNnJlbTtcXHJcXG4gICAgaGVpZ2h0OiAzcmVtO1xcclxcbiAgICBmb250LXNpemU6IDE4cHg7XFxyXFxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcXHJcXG4gICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XFxyXFxufVxcclxcblxcclxcbiNmdWxsLWNhcmQtc3RhdHVzIHtcXHJcXG4gICAgZ3JpZC1hcmVhOiBzdGF0dXM7XFxyXFxufVxcclxcblxcclxcbiNjYXJkLWFyZWEge1xcclxcbiAgICBwb3NpdGlvbjpmaXhlZDtcXHJcXG4gICAgcGFkZGluZzowO1xcclxcbiAgICBtYXJnaW46MDtcXHJcXG5cXHJcXG4gICAgdG9wOjA7XFxyXFxuICAgIGxlZnQ6MDtcXHJcXG5cXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGhlaWdodDogMTAwJTtcXHJcXG4gICAgYmFja2dyb3VuZDpyZ2JhKDI1NSwyNTUsMjU1LDAuNSk7XFxyXFxuXFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbn1cXHJcXG5cXHJcXG4uaGlkZSB7XFxyXFxuICAgIGRpc3BsYXk6bm9uZTtcXHJcXG59XFxyXFxuXFxyXFxuLmlzLWRyYWdnaW5nIHtcXHJcXG4gICAgc2NhbGU6IDEuMDU7XFxyXFxuICAgIGJveC1zaGFkb3c6IDBweCA1cHggMTVweCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xcclxcbiAgICBiYWNrZ3JvdW5kOiByZ2IoNTAsIDUwLCA1MCk7XFxyXFxuICAgIGNvbG9yOiB3aGl0ZTtcXHJcXG4gIH1cXHJcXG5cXHJcXG4gIC5oYXZlVGltZSB7XFxyXFxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xcclxcbiAgICB0ZXh0LWRlY29yYXRpb24tY29sb3I6IHJnYigyOCwgMTgxLCAyOCk7XFxyXFxuICB9XFxyXFxuXFxyXFxuICAuc2hvdWxkRG8ge1xcclxcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcXHJcXG4gICAgdGV4dC1kZWNvcmF0aW9uLWNvbG9yOiByZ2IoMjA1LCAyMDUsIDI2KTtcXHJcXG4gIH1cXHJcXG5cXHJcXG4gIC51cmdlbnQge1xcclxcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcXHJcXG4gICAgdGV4dC1kZWNvcmF0aW9uLWNvbG9yOiByZ2IoMjA1LCAxNSwgMTUpO1xcclxcbiAgfVxcclxcblxcclxcbiAgXFxyXFxuLyogTW9iaWxlICovXFxyXFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xcclxcblxcclxcbiAgICAubWluaS1jYXJkIHtcXHJcXG4gICAgICAgIG1pbi1oZWlnaHQ6IDBweDtcXHJcXG4gICAgICAgIG1heC1oZWlnaHQ6IDIwMHB4O1xcclxcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xcclxcbiAgICAgICAgd2lkdGg6IDk5JTtcXHJcXG4gICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xcclxcbiAgICAgICAgYm94LXNoYWRvdzogMHB4IDVweCAxNXB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XFxyXFxuICAgICAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxyXFxuICAgICAgICBwYWRkaW5nOiAxMnB4O1xcclxcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xcclxcbiAgICAgICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XFxyXFxuICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcXHJcXG4gICAgICAgIGZvbnQtc2l6ZTogOHB4O1xcclxcbiAgICAgICAgY3Vyc29yOiBtb3ZlO1xcclxcbiAgICAgICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXHJcXG4gICAgfVxcclxcblxcclxcbiAgICAuZnVsbC1jYXJkIHsgICBcXHJcXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICAgICAgd2lkdGg6IDgwJTtcXHJcXG4gICAgICAgIGhlaWdodDogODAlO1xcclxcbiAgICB9XFxyXFxuXFxyXFxuICAgIC5oYXZlVGltZSB7XFxyXFxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcXHJcXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbi1jb2xvcjogcmdiKDI4LCAxODEsIDI4KTtcXHJcXG4gICAgICB9XFxyXFxuICAgIFxcclxcbiAgICAgIC5zaG91bGREbyB7XFxyXFxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcXHJcXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbi1jb2xvcjogcmdiKDIwNSwgMjA1LCAyNik7XFxyXFxuICAgICAgfVxcclxcbiAgICBcXHJcXG4gICAgICAudXJnZW50IHtcXHJcXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xcclxcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uLWNvbG9yOiByZ2IoMjA1LCAxNSwgMTUpO1xcclxcbiAgICAgIH1cXHJcXG4gICAgICBcXHJcXG4gICAgI21pbmktY2FyZC1zdGF0dXMge1xcclxcbiAgICAgICAgZGlzcGxheTpibG9jaztcXHJcXG4gICAgfVxcclxcblxcclxcbiAgICAjbWluaS1jYXJkLXN0YXR1cy5ub3Qtc3RhcnRlZHtcXHJcXG4gICAgICAgIGJvcmRlcjogNHB4IHNvbGlkIHJnYigyMDUsIDE1LCAxNSk7XFxyXFxuICAgICAgICBmaWxsOiByZ2IoMjA1LCAxNSwgMTUpO1xcclxcbiAgICB9XFxyXFxuICAgICNtaW5pLWNhcmQtc3RhdHVzLmluLXByb2dyZXNze1xcclxcbiAgICAgICAgYm9yZGVyOiA0cHggc29saWQgcmdiKDIwNSwgMjA1LCAyNik7XFxyXFxuICAgICAgICBmaWxsOiByZ2IoMjA1LCAyMDUsIDI2KTtcXHJcXG4gICAgfVxcclxcbiAgICAjbWluaS1jYXJkLXN0YXR1cy5jb21wbGV0ZWQge1xcclxcbiAgICAgICAgYm9yZGVyOiA0cHggc29saWQgcmdiKDI4LCAxODEsIDI4KTtcXHJcXG4gICAgICAgIGZpbGw6IHJnYigyOCwgMTgxLCAyOCk7XFxyXFxuICAgIH1cXHJcXG5cXHJcXG4gICAgLm1pbmktY2FyZC1pbmZvIHtcXHJcXG4gICAgICAgIG1heC13aWR0aDogMzAlO1xcclxcbiAgICB9XFxyXFxuICAgICNmdWxsLWNhcmQtdGl0bGV7XFxyXFxuICAgICAgICBmb250LXNpemU6IDMwcHg7XFxyXFxuICAgICAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgICAgIGhlaWdodDogNzJweDtcXHJcXG4gICAgXFxyXFxuICAgIH1cXHJcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAqIHtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XHJcbiAgXHJcbiAgICAvKiAtbXMtb3ZlcmZsb3ctc3R5bGU6IG5vbmU7IFxyXG4gICAgc2Nyb2xsYmFyLXdpZHRoOiBub25lOyBGaXJlZm94ICovXHJcbn1cclxuXHJcbi8qIC0tLS0gUkVTRVQvQkFTSUMgU1RZTElORyAtLS0tICovXHJcbiAgXHJcbiAgLyogKjo6LXdlYmtpdC1zY3JvbGxiYXIge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9ICovXHJcblxyXG5cclxuLmNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246Y29sdW1uO1xyXG59XHJcblxyXG4udG9wIHtcclxuICAgIG1pbi1oZWlnaHQ6IDIwdmg7XHJcbiAgICBkaXNwbGF5OiBmbGV4OyAgXHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICAgIGFsaWduLWl0ZW1zOiBzdGFydDtcclxuICAgIHBhZGRpbmctbGVmdDogNSU7XHJcbiAgICBwYWRkaW5nLXRvcDogNSU7XHJcbiAgICAvKiBiYWNrZ3JvdW5kOiNmYWYyZmY7ICovXHJcbiAgICB0cmFuc2l0aW9uOiAzMDBtcztcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGZsZXg6MTtcclxufVxyXG5cclxuXHJcblxyXG4ucGFnZSB7XHJcbiAgICBtYXJnaW4tbGVmdDogMTAlO1xyXG4gICAgZm9udC1zaXplOiAycmVtO1xyXG59XHJcblxyXG4ubG9nbyB7XHJcbiAgICBncmlkLWFyZWE6IGxvZ287XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tbGVmdDogNDUlO1xyXG59XHJcblxyXG4vKlxyXG5UaGUgc2lkZWJhciBlbGVtZW50IGhhcyBhIGdhcCBvZiA1MHB4XHJcblRoZSB0ZXh0IGVsZW1lbnRzIGluIHRoZSBzaWRlYmFyIGFyZSBjZW50ZXJlZCB3aXRoIGdyaWRcclxuKi9cclxuLnNpZGViYXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2UzZTNlMztcclxuICAgIHdpZHRoOiAxMnJlbTtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdHJhbnNpdGlvbjogMzAwbXM7XHJcbiAgICB6LWluZGV4OiA5OTk7XHJcbiAgICBvcGFjaXR5OjkwJTtcclxufVxyXG4uc2lkZWJhci0taXNIaWRkZW4ge1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMnJlbSk7XHJcbiAgICB0cmFuc2l0aW9uOiAzMDBtcztcclxufVxyXG5cclxuc2VjdGlvbiAuY29udGFpbmVyIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAyNTBweDtcclxufVxyXG5cclxuLnNpZGViYXItbWVudSB7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgcGFkZGluZzogMS41cmVtO1xyXG4gICAgbWFyZ2luLXRvcDogMTJweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgZ2FwOiAzcmVtO1xyXG59XHJcblxyXG4uc2lkZWJhciBsaSB7XHJcbiAgICBjb2xvcjogIzEzMTIwMDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgY3Vyc29yOnBvaW50ZXI7XHJcbn1cclxuLnNpZGViYXIgbGk6aG92ZXIge1xyXG4gICAgY29sb3I6ICMwMTk3RjY7XHJcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAxNTBtcyBsaW5lYXI7XHJcbn1cclxuXHJcblxyXG4ub3BlbmJ0biB7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxNSU7XHJcbiAgICBib3JkZXI6bm9uZTtcclxuICAgIG91dGxpbmU6bm9uZTtcclxuICAgIGN1cnNvcjpwb2ludGVyO1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDMwMG1zIGVhc2UtaW47XHJcbiAgICBsZWZ0OiAxMnJlbTtcclxuICAgIGNvbG9yOiAjMTMxMjAwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjojMDE5N0Y2O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgfVxyXG5cclxuI3Nob3ctYWxse1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTUlO1xyXG4gICAgYm9yZGVyOm5vbmU7XHJcbiAgICBvdXRsaW5lOm5vbmU7XHJcbiAgICBjdXJzb3I6cG9pbnRlcjtcclxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAzMDBtcyBlYXNlLWluO1xyXG4gICAgY29sb3I6ICMxMzEyMDA7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcbi5zaWRlYmFyIGxpIHtcclxuICAgIGNvbG9yOiAjMTMxMjAwO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuI3Nob3ctYWxsOmhvdmVyIHtcclxuICAgIGNvbG9yOiAjMDE5N0Y2O1xyXG4gICAgdHJhbnNpdGlvbjogY29sb3IgMTUwbXMgbGluZWFyO1xyXG59XHJcblxyXG4ub3BlbmJ0bi0taXNIaWRkZW4ge1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMnJlbSk7XHJcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMzAwbXMgZWFzZS1vdXQ7XHJcbiAgfVxyXG5cclxuLm9wZW5idG46aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y0YTI2MTtcclxuICAgIHRyYW5zaXRpb246IGFsbCAxNTBtcyBlYXNlLWluO1xyXG59XHJcblxyXG4jbG9nbyB7XHJcbiAgICB3aWR0aDogNC41cmVtO1xyXG4gICAgaGVpZ2h0OiA0LjVyZW07XHJcbn1cclxuXHJcbiNmb290e1xyXG4gICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMTMxMjAwO1xyXG4gICAgaGVpZ2h0OiA1dmg7XHJcbn1cclxuXHJcbi8qIE1vYmlsZSAqL1xyXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcblxyXG4gICAgXHJcbiAgICAudG9wIHtcclxuICAgICAgICBtYXgtaGVpZ2h0OiAxNXZoO1xyXG4gICAgICAgIG1pbi1oZWlnaHQ6IDEwdmg7XHJcbiAgICB9XHJcblxyXG4gICAgLnNpZGViYXIge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlM2UzZTM7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogMzAwbXM7XHJcbiAgICAgICAgei1pbmRleDogOTk5O1xyXG4gICAgfVxyXG4gICAgLnNpZGViYXItLWlzSGlkZGVuIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEycmVtKTtcclxuICAgICAgICB0cmFuc2l0aW9uOiAzMDBtcztcclxuICAgIH1cclxuICAgIFxyXG4gICAgc2VjdGlvbiAuY29udGFpbmVyIHtcclxuICAgICAgICBtYXJnaW4tbGVmdDogMHB4O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAuc2lkZWJhci1tZW51IHtcclxuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgICAgIHBhZGRpbmc6IDEuNXJlbTtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxMnB4O1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBnYXA6IDNyZW07XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5zaWRlYmFyIGxpIHtcclxuICAgICAgICBjb2xvcjogIzEzMTIwMDtcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgY3Vyc29yOnBvaW50ZXI7XHJcbiAgICB9XHJcbiAgICAuc2lkZWJhciBsaTpob3ZlciB7XHJcbiAgICAgICAgY29sb3I6ICMwMTk3RjY7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMTUwbXMgbGluZWFyO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBcclxuICAgIC5vcGVuYnRuIHtcclxuICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDE1JTtcclxuICAgICAgICBib3JkZXI6bm9uZTtcclxuICAgICAgICBvdXRsaW5lOm5vbmU7XHJcbiAgICAgICAgY3Vyc29yOnBvaW50ZXI7XHJcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAzMDBtcyBlYXNlLWluO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBjb2xvcjogIzEzMTIwMDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiMwMTk3RjY7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgIH1cclxufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9tYWluLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLFVBQVU7SUFDVixTQUFTO0lBQ1Qsc0JBQXNCO0lBQ3RCLHVCQUF1Qjs7SUFFdkI7b0NBQ2dDO0FBQ3BDOztBQUVBLGtDQUFrQzs7RUFFaEM7O0tBRUc7OztBQUdMO0lBQ0ksYUFBYTtJQUNiLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2IsNkJBQTZCO0lBQzdCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLHdCQUF3QjtJQUN4QixpQkFBaUI7SUFDakIsY0FBYztJQUNkLHNCQUFzQjtJQUN0QixNQUFNO0FBQ1Y7Ozs7QUFJQTtJQUNJLGdCQUFnQjtJQUNoQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksZUFBZTtJQUNmLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsZ0JBQWdCO0FBQ3BCOztBQUVBOzs7Q0FHQztBQUNEO0lBQ0kseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixhQUFhO0lBQ2IsVUFBVTtJQUNWLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsWUFBWTtJQUNaLFdBQVc7QUFDZjtBQUNBO0lBQ0ksNkJBQTZCO0lBQzdCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsU0FBUztBQUNiOztBQUVBO0lBQ0ksY0FBYztJQUNkLHFCQUFxQjtJQUNyQixjQUFjO0lBQ2QsY0FBYztBQUNsQjtBQUNBO0lBQ0ksY0FBYztJQUNkLDhCQUE4QjtBQUNsQzs7O0FBR0E7SUFDSSxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGNBQWM7SUFDZCxlQUFlO0lBQ2YsbUNBQW1DO0lBQ25DLFdBQVc7SUFDWCxjQUFjO0lBQ2Qsd0JBQXdCO0lBQ3hCLGlCQUFpQjtFQUNuQjs7QUFFRjtJQUNJLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGNBQWM7SUFDZCxtQ0FBbUM7SUFDbkMsY0FBYztJQUNkLGNBQWM7SUFDZCxpQkFBaUI7QUFDckI7QUFDQTtJQUNJLGNBQWM7SUFDZCxxQkFBcUI7SUFDckIsY0FBYztBQUNsQjtBQUNBO0lBQ0ksY0FBYztJQUNkLDhCQUE4QjtBQUNsQzs7QUFFQTtJQUNJLDZCQUE2QjtJQUM3QixvQ0FBb0M7RUFDdEM7O0FBRUY7SUFDSSx5QkFBeUI7SUFDekIsNkJBQTZCO0FBQ2pDOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxvQkFBb0I7SUFDcEIsbUJBQW1CO0lBQ25CLFdBQVc7QUFDZjs7QUFFQSxXQUFXO0FBQ1g7OztJQUdJO1FBQ0ksZ0JBQWdCO1FBQ2hCLGdCQUFnQjtJQUNwQjs7SUFFQTtRQUNJLHlCQUF5QjtRQUN6QixVQUFVO1FBQ1YsZUFBZTtRQUNmLGlCQUFpQjtRQUNqQixZQUFZO0lBQ2hCO0lBQ0E7UUFDSSw2QkFBNkI7UUFDN0IsaUJBQWlCO0lBQ3JCOztJQUVBO1FBQ0ksZ0JBQWdCO0lBQ3BCOztJQUVBO1FBQ0ksZ0JBQWdCO1FBQ2hCLGVBQWU7UUFDZixnQkFBZ0I7UUFDaEIsYUFBYTtRQUNiLHNCQUFzQjtRQUN0QixTQUFTO0lBQ2I7O0lBRUE7UUFDSSxjQUFjO1FBQ2QscUJBQXFCO1FBQ3JCLGNBQWM7UUFDZCxjQUFjO0lBQ2xCO0lBQ0E7UUFDSSxjQUFjO1FBQ2QsOEJBQThCO0lBQ2xDOzs7SUFHQTtRQUNJLFlBQVk7UUFDWixrQkFBa0I7UUFDbEIsa0JBQWtCO1FBQ2xCLFdBQVc7UUFDWCxZQUFZO1FBQ1osY0FBYztRQUNkLGVBQWU7UUFDZixtQ0FBbUM7UUFDbkMsTUFBTTtRQUNOLGNBQWM7UUFDZCx3QkFBd0I7UUFDeEIsaUJBQWlCO01BQ25CO0FBQ05cIixcInNvdXJjZXNDb250ZW50XCI6W1wiKiB7XFxyXFxuICAgIHBhZGRpbmc6IDA7XFxyXFxuICAgIG1hcmdpbjogMDtcXHJcXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXHJcXG4gICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XFxyXFxuICBcXHJcXG4gICAgLyogLW1zLW92ZXJmbG93LXN0eWxlOiBub25lOyBcXHJcXG4gICAgc2Nyb2xsYmFyLXdpZHRoOiBub25lOyBGaXJlZm94ICovXFxyXFxufVxcclxcblxcclxcbi8qIC0tLS0gUkVTRVQvQkFTSUMgU1RZTElORyAtLS0tICovXFxyXFxuICBcXHJcXG4gIC8qICo6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcXHJcXG4gICAgZGlzcGxheTogbm9uZTtcXHJcXG4gIH0gKi9cXHJcXG5cXHJcXG5cXHJcXG4uY29udGFpbmVyIHtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246Y29sdW1uO1xcclxcbn1cXHJcXG5cXHJcXG4udG9wIHtcXHJcXG4gICAgbWluLWhlaWdodDogMjB2aDtcXHJcXG4gICAgZGlzcGxheTogZmxleDsgIFxcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IHN0YXJ0O1xcclxcbiAgICBwYWRkaW5nLWxlZnQ6IDUlO1xcclxcbiAgICBwYWRkaW5nLXRvcDogNSU7XFxyXFxuICAgIC8qIGJhY2tncm91bmQ6I2ZhZjJmZjsgKi9cXHJcXG4gICAgdHJhbnNpdGlvbjogMzAwbXM7XFxyXFxuICAgIG92ZXJmbG93OiBhdXRvO1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBmbGV4OjE7XFxyXFxufVxcclxcblxcclxcblxcclxcblxcclxcbi5wYWdlIHtcXHJcXG4gICAgbWFyZ2luLWxlZnQ6IDEwJTtcXHJcXG4gICAgZm9udC1zaXplOiAycmVtO1xcclxcbn1cXHJcXG5cXHJcXG4ubG9nbyB7XFxyXFxuICAgIGdyaWQtYXJlYTogbG9nbztcXHJcXG4gICAgZGlzcGxheTogZ3JpZDtcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxuICAgIG1hcmdpbi1sZWZ0OiA0NSU7XFxyXFxufVxcclxcblxcclxcbi8qXFxyXFxuVGhlIHNpZGViYXIgZWxlbWVudCBoYXMgYSBnYXAgb2YgNTBweFxcclxcblRoZSB0ZXh0IGVsZW1lbnRzIGluIHRoZSBzaWRlYmFyIGFyZSBjZW50ZXJlZCB3aXRoIGdyaWRcXHJcXG4qL1xcclxcbi5zaWRlYmFyIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2UzZTNlMztcXHJcXG4gICAgd2lkdGg6IDEycmVtO1xcclxcbiAgICBoZWlnaHQ6IDEwMHZoO1xcclxcbiAgICBwYWRkaW5nOiAwO1xcclxcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxyXFxuICAgIHRyYW5zaXRpb246IDMwMG1zO1xcclxcbiAgICB6LWluZGV4OiA5OTk7XFxyXFxuICAgIG9wYWNpdHk6OTAlO1xcclxcbn1cXHJcXG4uc2lkZWJhci0taXNIaWRkZW4ge1xcclxcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEycmVtKTtcXHJcXG4gICAgdHJhbnNpdGlvbjogMzAwbXM7XFxyXFxufVxcclxcblxcclxcbnNlY3Rpb24gLmNvbnRhaW5lciB7XFxyXFxuICAgIG1hcmdpbi1sZWZ0OiAyNTBweDtcXHJcXG59XFxyXFxuXFxyXFxuLnNpZGViYXItbWVudSB7XFxyXFxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XFxyXFxuICAgIHBhZGRpbmc6IDEuNXJlbTtcXHJcXG4gICAgbWFyZ2luLXRvcDogMTJweDtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgZ2FwOiAzcmVtO1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhciBsaSB7XFxyXFxuICAgIGNvbG9yOiAjMTMxMjAwO1xcclxcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxyXFxuICAgIGRpc3BsYXk6IGJsb2NrO1xcclxcbiAgICBjdXJzb3I6cG9pbnRlcjtcXHJcXG59XFxyXFxuLnNpZGViYXIgbGk6aG92ZXIge1xcclxcbiAgICBjb2xvcjogIzAxOTdGNjtcXHJcXG4gICAgdHJhbnNpdGlvbjogY29sb3IgMTUwbXMgbGluZWFyO1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG4ub3BlbmJ0biB7XFxyXFxuICAgIGJvcmRlcjogbm9uZTtcXHJcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiAxNSU7XFxyXFxuICAgIGJvcmRlcjpub25lO1xcclxcbiAgICBvdXRsaW5lOm5vbmU7XFxyXFxuICAgIGN1cnNvcjpwb2ludGVyO1xcclxcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxyXFxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAzMDBtcyBlYXNlLWluO1xcclxcbiAgICBsZWZ0OiAxMnJlbTtcXHJcXG4gICAgY29sb3I6ICMxMzEyMDA7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IzAxOTdGNjtcXHJcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxyXFxuICB9XFxyXFxuXFxyXFxuI3Nob3ctYWxse1xcclxcbiAgICBib3JkZXItcmFkaXVzOiAxNSU7XFxyXFxuICAgIGJvcmRlcjpub25lO1xcclxcbiAgICBvdXRsaW5lOm5vbmU7XFxyXFxuICAgIGN1cnNvcjpwb2ludGVyO1xcclxcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMzAwbXMgZWFzZS1pbjtcXHJcXG4gICAgY29sb3I6ICMxMzEyMDA7XFxyXFxuICAgIGRpc3BsYXk6IGJsb2NrO1xcclxcbiAgICBmb250LXdlaWdodDogYm9sZDtcXHJcXG59XFxyXFxuLnNpZGViYXIgbGkge1xcclxcbiAgICBjb2xvcjogIzEzMTIwMDtcXHJcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcclxcbiAgICBkaXNwbGF5OiBibG9jaztcXHJcXG59XFxyXFxuI3Nob3ctYWxsOmhvdmVyIHtcXHJcXG4gICAgY29sb3I6ICMwMTk3RjY7XFxyXFxuICAgIHRyYW5zaXRpb246IGNvbG9yIDE1MG1zIGxpbmVhcjtcXHJcXG59XFxyXFxuXFxyXFxuLm9wZW5idG4tLWlzSGlkZGVuIHtcXHJcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMnJlbSk7XFxyXFxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAzMDBtcyBlYXNlLW91dDtcXHJcXG4gIH1cXHJcXG5cXHJcXG4ub3BlbmJ0bjpob3ZlciB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNGEyNjE7XFxyXFxuICAgIHRyYW5zaXRpb246IGFsbCAxNTBtcyBlYXNlLWluO1xcclxcbn1cXHJcXG5cXHJcXG4jbG9nbyB7XFxyXFxuICAgIHdpZHRoOiA0LjVyZW07XFxyXFxuICAgIGhlaWdodDogNC41cmVtO1xcclxcbn1cXHJcXG5cXHJcXG4jZm9vdHtcXHJcXG4gICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XFxyXFxuICAgIGJhY2tncm91bmQ6ICMxMzEyMDA7XFxyXFxuICAgIGhlaWdodDogNXZoO1xcclxcbn1cXHJcXG5cXHJcXG4vKiBNb2JpbGUgKi9cXHJcXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XFxyXFxuXFxyXFxuICAgIFxcclxcbiAgICAudG9wIHtcXHJcXG4gICAgICAgIG1heC1oZWlnaHQ6IDE1dmg7XFxyXFxuICAgICAgICBtaW4taGVpZ2h0OiAxMHZoO1xcclxcbiAgICB9XFxyXFxuXFxyXFxuICAgIC5zaWRlYmFyIHtcXHJcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlM2UzZTM7XFxyXFxuICAgICAgICBwYWRkaW5nOiAwO1xcclxcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xcclxcbiAgICAgICAgdHJhbnNpdGlvbjogMzAwbXM7XFxyXFxuICAgICAgICB6LWluZGV4OiA5OTk7XFxyXFxuICAgIH1cXHJcXG4gICAgLnNpZGViYXItLWlzSGlkZGVuIHtcXHJcXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTJyZW0pO1xcclxcbiAgICAgICAgdHJhbnNpdGlvbjogMzAwbXM7XFxyXFxuICAgIH1cXHJcXG4gICAgXFxyXFxuICAgIHNlY3Rpb24gLmNvbnRhaW5lciB7XFxyXFxuICAgICAgICBtYXJnaW4tbGVmdDogMHB4O1xcclxcbiAgICB9XFxyXFxuICAgIFxcclxcbiAgICAuc2lkZWJhci1tZW51IHtcXHJcXG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XFxyXFxuICAgICAgICBwYWRkaW5nOiAxLjVyZW07XFxyXFxuICAgICAgICBtYXJnaW4tdG9wOiAxMnB4O1xcclxcbiAgICAgICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgICAgICBnYXA6IDNyZW07XFxyXFxuICAgIH1cXHJcXG4gICAgXFxyXFxuICAgIC5zaWRlYmFyIGxpIHtcXHJcXG4gICAgICAgIGNvbG9yOiAjMTMxMjAwO1xcclxcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcclxcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XFxyXFxuICAgICAgICBjdXJzb3I6cG9pbnRlcjtcXHJcXG4gICAgfVxcclxcbiAgICAuc2lkZWJhciBsaTpob3ZlciB7XFxyXFxuICAgICAgICBjb2xvcjogIzAxOTdGNjtcXHJcXG4gICAgICAgIHRyYW5zaXRpb246IGNvbG9yIDE1MG1zIGxpbmVhcjtcXHJcXG4gICAgfVxcclxcbiAgICBcXHJcXG4gICAgXFxyXFxuICAgIC5vcGVuYnRuIHtcXHJcXG4gICAgICAgIGJvcmRlcjogbm9uZTtcXHJcXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDE1JTtcXHJcXG4gICAgICAgIGJvcmRlcjpub25lO1xcclxcbiAgICAgICAgb3V0bGluZTpub25lO1xcclxcbiAgICAgICAgY3Vyc29yOnBvaW50ZXI7XFxyXFxuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XFxyXFxuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMzAwbXMgZWFzZS1pbjtcXHJcXG4gICAgICAgIHRvcDogMDtcXHJcXG4gICAgICAgIGNvbG9yOiAjMTMxMjAwO1xcclxcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjojMDE5N0Y2O1xcclxcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxyXFxuICAgICAgfVxcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGJ1dHRvbiB7XHJcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xyXG4gICAgZm9udC1zaXplOiAzMHB4O1xyXG4gICAgYm9yZGVyOiBzb2xpZCAjMTMxMjAwO1xyXG4gICAgY29sb3I6ICMxMzEyMDA7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICB3aWR0aDogNDVweDtcclxuICAgIGhlaWdodDogNDVweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIFxyXG59XHJcblxyXG5idXR0b246aG92ZXIge1xyXG4gICAgY29sb3I6ICNlM2UzZTM7XHJcbiAgICBib3JkZXI6IHNvbGlkICNlM2UzZTM7XHJcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAxNTBtcyBsaW5lYXI7XHJcbn1cclxuXHJcbiNwcm9qZWN0cyB7XHJcbiAgICBkaXNwbGF5OmZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgLyogcG9zaXRpb246IGZpeGVkOyAqL1xyXG4gICAgLyogd2lkdGg6IDEwMCU7ICovXHJcbiAgICB0b3A6IDIwdmg7XHJcbiAgICBwYWRkaW5nOiAxcmVtIDFyZW0gMXJlbSAxcmVtO1xyXG4gICAgdHJhbnNpdGlvbjogMzAwbXM7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxuICAgIGZsZXg6MTtcclxufVxyXG5cclxuI3Byb2plY3Qtc2VjdGlvbi1oZWFkZXIge1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDIsIDFmcik7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTJweDtcclxuICAgIG1hcmdpbi10b3A6IDEycHg7XHJcbn1cclxuXHJcbiNzdGF0dXMtbGFiZWxzIHtcclxuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxufVxyXG5cclxuI25ldy1wcm9qZWN0LWJ1dHRvbiB7XHJcbiAgICBhbGlnbi1zZWxmOiBzdGFydDtcclxuICAgIGhlaWdodDogM3JlbTtcclxuICAgIHdpZHRoOiA2cmVtO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDJyZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiAwJTtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxufVxyXG5cclxuLnByb2plY3QtaGVhZGVyIHtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDYwJSA0MCU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICBwYWRkaW5nOiAxcmVtO1xyXG4gICAgYmFja2dyb3VuZDogIzAxOTdGNjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMnB4O1xyXG59XHJcblxyXG4uaGVhZC1sYmwge1xyXG4gICAgYmFja2dyb3VuZDogI2UzZTNlMztcclxuICAgIGhlaWdodDoxMDAlO1xyXG4gICAgd2lkdGg6MTAwJTtcclxuICAgIHRleHQtYWxpZ246Y2VudGVyO1xyXG59XHJcblxyXG4ucHJvamVjdC1vcHRpb25zIHtcclxuICAgIGRpc3BsYXk6ZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLnByb2plY3QtbmFtZSB7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGNvbG9yOiMxMzEyMDA7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDI0cHg7XHJcbn1cclxuLnByb2plY3QtbmFtZS1jaGFuZ2UtYnV0dG9ue1xyXG4gICAgXHJcbn1cclxuXHJcbi5wcm9qZWN0LWRlbGV0ZS1idXR0b257XHJcbn1cclxuXHJcbi5wcm9qZWN0LWNvbGxhcHNlLWJ1dHRvbntcclxufVxyXG5cclxuLm5ldy10YXNrLWJ1dHRvbntcclxuICAgIGdyaWQtcm93OiAxO1xyXG4gICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDE7XHJcbn1cclxuXHJcbi5wcm9qZWN0LXN0YXR1cy13cmFwcGVyIHtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpO1xyXG4gICAgZ3JpZC1nYXA6IDEycHg7XHJcbiAgICBwYWRkaW5nOiAwcmVtIDJyZW07XHJcbiAgICBtYXJnaW4tdG9wOiAtMjRweDtcclxufVxyXG5cclxuLnByb2plY3Qtc3RhdHVzLWNvbCB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZTNlM2UzO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3RhcnQ7XHJcbiAgICBnYXA6IDE2cHg7XHJcbiAgICBvdmVyZmxvdzogc2Nyb2xsO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDFzO1xyXG4gICAgZ3JpZC1yb3c6IDI7XHJcbn1cclxuXHJcbi5ob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMDE5N0Y2O1xyXG4gICAgei1pbmRleDo5OTtcclxufVxyXG5cclxuLnNhdmV7XHJcbiAgICAvKiBiYWNrZ3JvdW5kOiA7ICovXHJcbn1cclxuXHJcbi5wcm9qZWN0LWNvbGxhcHNlLWJ1dHRvbjo6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6ICcgJztcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHJcbiAgICBib3JkZXItdG9wOiA1cHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItYm90dG9tOiA1cHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItbGVmdDogNXB4IHNvbGlkIGN1cnJlbnRDb2xvcjtcclxuXHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgLyogbWFyZ2luLXJpZ2h0OiAuN3JlbTsgKi9cclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMnB4KTtcclxuXHJcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjJzIGVhc2Utb3V0O1xyXG59XHJcblxyXG4udG9nZ2xlLWJ1dHRvbi10cmFuc2l0aW9uIHtcclxuICAgIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKSB0cmFuc2xhdGVYKC0zcHgpO1xyXG4gIH1cclxuXHJcbi5jb2xsYXBzZWQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDAlKTtcclxuICAgIG1heC1oZWlnaHQ6MHB4O1xyXG4gfVxyXG5cclxuXHJcbi5wcm9qZWN0IHtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgfVxyXG4gIFxyXG4vKiAjZXhwYW5kLWNvbnRyYWN0IHtcclxuYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJlZDtcclxubWFyZ2luLXRvcDogLTEwMCU7XHJcbnRyYW5zaXRpb246IGFsbCAxcztcclxufSAqL1xyXG5cclxuLnByb2plY3Qtc3RhdHVzLWNvbC5leHBhbmRlZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcclxuICAgIG1hcmdpbi10b3A6IDA7XHJcbn1cclxuXHJcbi5oaWRle1xyXG4gICAgZGlzcGxheTpub25lO1xyXG59XHJcblxyXG4uY2xpY2tlZHtcclxuICAgIGNvbG9yOiB5ZWxsb3c7XHJcbn1cclxuXHJcbiNuZXctcHJvamVjdCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IHN0YXJ0O1xyXG4gICAgdHJhbnNpdGlvbjogMzAwbXM7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBmbGV4OiAxO1xyXG59XHJcblxyXG4vKiBNb2JpbGUgKi9cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG5cclxuICAgIGJ1dHRvbiB7XHJcbiAgICAgICAgaGVpZ2h0OiAzNXB4O1xyXG4gICAgICAgIHdpZHRoOiAzNXB4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIH1cclxuICAgICNwcm9qZWN0c3tcclxuICAgICAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICB9XHJcbiAgICAjcHJvamVjdC1zZWN0aW9uLWhlYWRlcntcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG5cclxuICAgIC5wcm9qZWN0LXN0YXR1cy13cmFwcGVyIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgZ3JpZC1nYXA6IDBweDtcclxuICAgICAgICBwYWRkaW5nOiAwcHg7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogLTI0cHg7XHJcbiAgICB9XHJcblxyXG4gICAgLnByb2plY3QtaGVhZGVyIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNTAlIDUwJTtcclxuICAgIH1cclxuICAgIC5wcm9qZWN0LXN0YXR1cy1jb2wge1xyXG4gICAgICAgIGdhcDogMHB4O1xyXG4gICAgfVxyXG5cclxufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9wcm9qZWN0QXJlYS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLHFCQUFxQjtJQUNyQixjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxZQUFZO0lBQ1osZUFBZTs7QUFFbkI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QscUJBQXFCO0lBQ3JCLDhCQUE4QjtBQUNsQzs7QUFFQTtJQUNJLFlBQVk7SUFDWixzQkFBc0I7SUFDdEIscUJBQXFCO0lBQ3JCLGlCQUFpQjtJQUNqQixTQUFTO0lBQ1QsNEJBQTRCO0lBQzVCLGlCQUFpQjtJQUNqQixjQUFjO0lBQ2QsTUFBTTtBQUNWOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGtDQUFrQztJQUNsQyxvQkFBb0I7SUFDcEIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLHFCQUFxQjtJQUNyQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsWUFBWTtJQUNaLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxtQkFBbUI7SUFDbkIsV0FBVztJQUNYLFVBQVU7SUFDVixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNkJBQTZCO0lBQzdCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsYUFBYTtJQUNiLGtCQUFrQjtBQUN0QjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtJQUNJLFdBQVc7SUFDWCxvQkFBb0I7QUFDeEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IscUNBQXFDO0lBQ3JDLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsdUJBQXVCO0lBQ3ZCLHNCQUFzQjtJQUN0QixTQUFTO0lBQ1QsZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsV0FBVztBQUNmOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLFVBQVU7QUFDZDs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLFlBQVk7SUFDWixxQkFBcUI7O0lBRXJCLGlDQUFpQztJQUNqQyxvQ0FBb0M7SUFDcEMsbUNBQW1DOztJQUVuQyxzQkFBc0I7SUFDdEIseUJBQXlCO0lBQ3pCLDJCQUEyQjs7SUFFM0Isa0NBQWtDO0FBQ3RDOztBQUVBO0lBQ0kseUNBQXlDO0VBQzNDOztBQUVGO0lBQ0kscUJBQXFCO0lBQ3JCLDRCQUE0QjtJQUM1QixjQUFjO0NBQ2pCOzs7QUFHRDtJQUNJLGdCQUFnQjtFQUNsQjs7QUFFRjs7OztHQUlHOztBQUVIO0lBQ0ksdUJBQXVCO0lBQ3ZCLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLGNBQWM7SUFDZCxzQkFBc0I7SUFDdEIsT0FBTztBQUNYOztBQUVBLFdBQVc7QUFDWDs7SUFFSTtRQUNJLFlBQVk7UUFDWixXQUFXO1FBQ1gsZUFBZTtJQUNuQjtJQUNBO1FBQ0ksWUFBWTtJQUNoQjtJQUNBO1FBQ0ksYUFBYTtJQUNqQjs7SUFFQTtRQUNJLGFBQWE7UUFDYixzQkFBc0I7UUFDdEIsYUFBYTtRQUNiLFlBQVk7UUFDWixpQkFBaUI7SUFDckI7O0lBRUE7UUFDSSxtQkFBbUI7UUFDbkIsOEJBQThCO0lBQ2xDO0lBQ0E7UUFDSSxRQUFRO0lBQ1o7O0FBRUpcIixcInNvdXJjZXNDb250ZW50XCI6W1wiYnV0dG9uIHtcXHJcXG4gICAgYmFja2dyb3VuZDogbm9uZTtcXHJcXG4gICAgZm9udC1zaXplOiAzMHB4O1xcclxcbiAgICBib3JkZXI6IHNvbGlkICMxMzEyMDA7XFxyXFxuICAgIGNvbG9yOiAjMTMxMjAwO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XFxyXFxuICAgIHdpZHRoOiA0NXB4O1xcclxcbiAgICBoZWlnaHQ6IDQ1cHg7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgXFxyXFxufVxcclxcblxcclxcbmJ1dHRvbjpob3ZlciB7XFxyXFxuICAgIGNvbG9yOiAjZTNlM2UzO1xcclxcbiAgICBib3JkZXI6IHNvbGlkICNlM2UzZTM7XFxyXFxuICAgIHRyYW5zaXRpb246IGNvbG9yIDE1MG1zIGxpbmVhcjtcXHJcXG59XFxyXFxuXFxyXFxuI3Byb2plY3RzIHtcXHJcXG4gICAgZGlzcGxheTpmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICAvKiBwb3NpdGlvbjogZml4ZWQ7ICovXFxyXFxuICAgIC8qIHdpZHRoOiAxMDAlOyAqL1xcclxcbiAgICB0b3A6IDIwdmg7XFxyXFxuICAgIHBhZGRpbmc6IDFyZW0gMXJlbSAxcmVtIDFyZW07XFxyXFxuICAgIHRyYW5zaXRpb246IDMwMG1zO1xcclxcbiAgICBvdmVyZmxvdzogYXV0bztcXHJcXG4gICAgZmxleDoxO1xcclxcbn1cXHJcXG5cXHJcXG4jcHJvamVjdC1zZWN0aW9uLWhlYWRlciB7XFxyXFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDIsIDFmcik7XFxyXFxuICAgIHBhZGRpbmctYm90dG9tOiAxMnB4O1xcclxcbiAgICBtYXJnaW4tdG9wOiAxMnB4O1xcclxcbn1cXHJcXG5cXHJcXG4jc3RhdHVzLWxhYmVscyB7XFxyXFxuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAganVzdGlmeS1pdGVtczogY2VudGVyO1xcclxcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxyXFxufVxcclxcblxcclxcbiNuZXctcHJvamVjdC1idXR0b24ge1xcclxcbiAgICBhbGlnbi1zZWxmOiBzdGFydDtcXHJcXG4gICAgaGVpZ2h0OiAzcmVtO1xcclxcbiAgICB3aWR0aDogNnJlbTtcXHJcXG4gICAgbWFyZ2luLWxlZnQ6IDJyZW07XFxyXFxuICAgIGJvcmRlci1yYWRpdXM6IDAlO1xcclxcbiAgICBmb250LXNpemU6IDE4cHg7XFxyXFxufVxcclxcblxcclxcbi5wcm9qZWN0LWhlYWRlciB7XFxyXFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjAlIDQwJTtcXHJcXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xcclxcbiAgICBwYWRkaW5nOiAxcmVtO1xcclxcbiAgICBiYWNrZ3JvdW5kOiAjMDE5N0Y2O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiAxMnB4O1xcclxcbn1cXHJcXG5cXHJcXG4uaGVhZC1sYmwge1xcclxcbiAgICBiYWNrZ3JvdW5kOiAjZTNlM2UzO1xcclxcbiAgICBoZWlnaHQ6MTAwJTtcXHJcXG4gICAgd2lkdGg6MTAwJTtcXHJcXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XFxyXFxufVxcclxcblxcclxcbi5wcm9qZWN0LW9wdGlvbnMge1xcclxcbiAgICBkaXNwbGF5OmZsZXg7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbn1cXHJcXG5cXHJcXG4ucHJvamVjdC1uYW1lIHtcXHJcXG4gICAgZm9udC1zaXplOiAxOHB4O1xcclxcbiAgICBmb250LXdlaWdodDogYm9sZDtcXHJcXG4gICAgY29sb3I6IzEzMTIwMDtcXHJcXG4gICAgcGFkZGluZy1sZWZ0OiAyNHB4O1xcclxcbn1cXHJcXG4ucHJvamVjdC1uYW1lLWNoYW5nZS1idXR0b257XFxyXFxuICAgIFxcclxcbn1cXHJcXG5cXHJcXG4ucHJvamVjdC1kZWxldGUtYnV0dG9ue1xcclxcbn1cXHJcXG5cXHJcXG4ucHJvamVjdC1jb2xsYXBzZS1idXR0b257XFxyXFxufVxcclxcblxcclxcbi5uZXctdGFzay1idXR0b257XFxyXFxuICAgIGdyaWQtcm93OiAxO1xcclxcbiAgICBncmlkLWNvbHVtbi1zdGFydDogMTtcXHJcXG59XFxyXFxuXFxyXFxuLnByb2plY3Qtc3RhdHVzLXdyYXBwZXIge1xcclxcbiAgICBkaXNwbGF5OiBncmlkO1xcclxcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpO1xcclxcbiAgICBncmlkLWdhcDogMTJweDtcXHJcXG4gICAgcGFkZGluZzogMHJlbSAycmVtO1xcclxcbiAgICBtYXJnaW4tdG9wOiAtMjRweDtcXHJcXG59XFxyXFxuXFxyXFxuLnByb2plY3Qtc3RhdHVzLWNvbCB7XFxyXFxuICAgIGJhY2tncm91bmQ6ICNlM2UzZTM7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xcclxcbiAgICBnYXA6IDE2cHg7XFxyXFxuICAgIG92ZXJmbG93OiBzY3JvbGw7XFxyXFxuICAgIGhlaWdodDogMTAwJTtcXHJcXG4gICAgdHJhbnNpdGlvbjogYWxsIDFzO1xcclxcbiAgICBncmlkLXJvdzogMjtcXHJcXG59XFxyXFxuXFxyXFxuLmhvdmVyIHtcXHJcXG4gICAgYmFja2dyb3VuZDogIzAxOTdGNjtcXHJcXG4gICAgei1pbmRleDo5OTtcXHJcXG59XFxyXFxuXFxyXFxuLnNhdmV7XFxyXFxuICAgIC8qIGJhY2tncm91bmQ6IDsgKi9cXHJcXG59XFxyXFxuXFxyXFxuLnByb2plY3QtY29sbGFwc2UtYnV0dG9uOjpiZWZvcmUge1xcclxcbiAgICBjb250ZW50OiAnICc7XFxyXFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXHJcXG5cXHJcXG4gICAgYm9yZGVyLXRvcDogNXB4IHNvbGlkIHRyYW5zcGFyZW50O1xcclxcbiAgICBib3JkZXItYm90dG9tOiA1cHggc29saWQgdHJhbnNwYXJlbnQ7XFxyXFxuICAgIGJvcmRlci1sZWZ0OiA1cHggc29saWQgY3VycmVudENvbG9yO1xcclxcblxcclxcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcclxcbiAgICAvKiBtYXJnaW4tcmlnaHQ6IC43cmVtOyAqL1xcclxcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTJweCk7XFxyXFxuXFxyXFxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuMnMgZWFzZS1vdXQ7XFxyXFxufVxcclxcblxcclxcbi50b2dnbGUtYnV0dG9uLXRyYW5zaXRpb24ge1xcclxcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZykgdHJhbnNsYXRlWCgtM3B4KTtcXHJcXG4gIH1cXHJcXG5cXHJcXG4uY29sbGFwc2VkIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xcclxcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMCUpO1xcclxcbiAgICBtYXgtaGVpZ2h0OjBweDtcXHJcXG4gfVxcclxcblxcclxcblxcclxcbi5wcm9qZWN0IHtcXHJcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXHJcXG4gIH1cXHJcXG4gIFxcclxcbi8qICNleHBhbmQtY29udHJhY3Qge1xcclxcbmJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZWQ7XFxyXFxubWFyZ2luLXRvcDogLTEwMCU7XFxyXFxudHJhbnNpdGlvbjogYWxsIDFzO1xcclxcbn0gKi9cXHJcXG5cXHJcXG4ucHJvamVjdC1zdGF0dXMtY29sLmV4cGFuZGVkIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XFxyXFxuICAgIG1hcmdpbi10b3A6IDA7XFxyXFxufVxcclxcblxcclxcbi5oaWRle1xcclxcbiAgICBkaXNwbGF5Om5vbmU7XFxyXFxufVxcclxcblxcclxcbi5jbGlja2Vke1xcclxcbiAgICBjb2xvcjogeWVsbG93O1xcclxcbn1cXHJcXG5cXHJcXG4jbmV3LXByb2plY3Qge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogc3RhcnQ7XFxyXFxuICAgIHRyYW5zaXRpb246IDMwMG1zO1xcclxcbiAgICBvdmVyZmxvdzogYXV0bztcXHJcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgZmxleDogMTtcXHJcXG59XFxyXFxuXFxyXFxuLyogTW9iaWxlICovXFxyXFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xcclxcblxcclxcbiAgICBidXR0b24ge1xcclxcbiAgICAgICAgaGVpZ2h0OiAzNXB4O1xcclxcbiAgICAgICAgd2lkdGg6IDM1cHg7XFxyXFxuICAgICAgICBmb250LXNpemU6IDIwcHg7XFxyXFxuICAgIH1cXHJcXG4gICAgI3Byb2plY3Rze1xcclxcbiAgICAgICAgcGFkZGluZzogMHB4O1xcclxcbiAgICB9XFxyXFxuICAgICNwcm9qZWN0LXNlY3Rpb24taGVhZGVye1xcclxcbiAgICAgICAgZGlzcGxheTogbm9uZTtcXHJcXG4gICAgfVxcclxcblxcclxcbiAgICAucHJvamVjdC1zdGF0dXMtd3JhcHBlciB7XFxyXFxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gICAgICAgIGdyaWQtZ2FwOiAwcHg7XFxyXFxuICAgICAgICBwYWRkaW5nOiAwcHg7XFxyXFxuICAgICAgICBtYXJnaW4tdG9wOiAtMjRweDtcXHJcXG4gICAgfVxcclxcblxcclxcbiAgICAucHJvamVjdC1oZWFkZXIge1xcclxcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjRweDtcXHJcXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNTAlIDUwJTtcXHJcXG4gICAgfVxcclxcbiAgICAucHJvamVjdC1zdGF0dXMtY29sIHtcXHJcXG4gICAgICAgIGdhcDogMHB4O1xcclxcbiAgICB9XFxyXFxuXFxyXFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJleHBvcnQgY29uc3QgY3JlYXRlRG9tRWxlbWVudCA9ICh0eXBlLCBhdHRyaWJ1dGVzLCAuLi5jaGlsZHJlbikgPT4ge1xyXG4gICAgY29uc3QgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHR5cGUpXHJcblxyXG4gICAgZm9yIChsZXQga2V5IGluIGF0dHJpYnV0ZXMpIHtcclxuICAgICAgICBlbC5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyaWJ1dGVzW2tleV0pXHJcbiAgICB9XHJcblxyXG4gICAgY2hpbGRyZW4uZm9yRWFjaChjaGlsZCA9PiB7XHJcbiAgICAgICAgaWYgKCEoY2hpbGQgaW5zdGFuY2VvZiBFbGVtZW50KSkge1xyXG4gICAgICAgIGVsLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNoaWxkKSlcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGVsLmFwcGVuZENoaWxkKGNoaWxkKVxyXG4gICAgICAgIH1cclxuICAgIH0pXHJcblxyXG4gICAgcmV0dXJuIGVsXHJcbn0iLCJmdW5jdGlvbiBvbkRyYWdTdGFydChldmVudCkge1xyXG4gIGNvbnN0IHRhcmdldElEID0gZXZlbnQudGFyZ2V0LmlkO1xyXG4gIGV2ZW50LmRhdGFUcmFuc2Zlci5zZXREYXRhKCd0ZXh0JywgdGFyZ2V0SUQpOyAgXHJcbiAgZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5hZGQoXCJpcy1kcmFnZ2luZ1wiKTtcclxufVxyXG5cclxuZnVuY3Rpb24gb25EcmFnT3ZlcihldmVudCkge1xyXG4gIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiBcclxuICBjb25zdCBkcm9wem9uZSA9IGV2ZW50LmN1cnJlbnRUYXJnZXQ7XHJcbiAgY29uc3QgZHJvcHpvbmVJRCA9IGRyb3B6b25lLmlkXHJcblxyXG4gIGNvbnN0IGJvdHRvbVRhc2sgPSBpbnNlcnRBYm92ZVRhc2soZHJvcHpvbmUsIGV2ZW50LmNsaWVudFkpO1xyXG4gIGNvbnN0IGN1clRhc2sgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmlzLWRyYWdnaW5nXCIpO1xyXG5cclxuICBjb25zdCBwcm9qZWN0TmFtZSA9IGN1clRhc2suZGF0YXNldC5wcm9qZWN0XHJcbiAgY29uc29sZS5sb2coJ29uRHJhZ092ZXIgdGFzayBwcm9qZWN0IG5hbWUnLCBwcm9qZWN0TmFtZSlcclxuICBsZXQgYWJsZVRvRHJvcCA9IGRyb3B6b25lSUQuaW5jbHVkZXMocHJvamVjdE5hbWUpXHJcbiAgY29uc29sZS5sb2coZHJvcHpvbmVJRClcclxuICBjb25zb2xlLmxvZyhhYmxlVG9Ecm9wKVxyXG4gIGlmKGFibGVUb0Ryb3Ape1xyXG4gICAgaWYgKCFib3R0b21UYXNrKSB7XHJcbiAgICAgIGRyb3B6b25lLmFwcGVuZENoaWxkKGN1clRhc2spO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgZHJvcHpvbmUuaW5zZXJ0QmVmb3JlKGN1clRhc2ssIGJvdHRvbVRhc2spO1xyXG4gICAgfVxyXG4gIH1cclxuICBlbHNlIHJldHVyblxyXG59XHJcblxyXG5mdW5jdGlvbiBvbkRyYWdFbmQoZXZlbnQpIHtcclxuICBldmVudC50YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSgnaXMtZHJhZ2dpbmcnKVxyXG59XHJcblxyXG5mdW5jdGlvbiBvbkRyYWdMZWF2ZShldmVudCl7XHJcbiAgZXZlbnQucHJldmVudERlZmF1bHQoKVxyXG59XHJcblxyXG5mdW5jdGlvbiBvbkRyb3AoZXZlbnQpIHtcclxuICBjb25zdCBpZCA9IGV2ZW50LmRhdGFUcmFuc2Zlci5nZXREYXRhKCd0ZXh0JylcclxuICBjb25zdCBkcm9wem9uZSA9IGV2ZW50LmN1cnJlbnRUYXJnZXRcclxuICBjb25zdCBjdXJUYXNrID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5pcy1kcmFnZ2luZ1wiKTtcclxuICBjb25zdCBwcm9qZWN0TmFtZSA9IGN1clRhc2suZGF0YXNldC5wcm9qZWN0XHJcbiAgY29uc3QgZHJvcHpvbmVJRCA9IGRyb3B6b25lLmlkXHJcblxyXG4gIGNvbnNvbGUubG9nKCdvbkRyYWdPdmVyIHRhc2sgcHJvamVjdCBuYW1lJywgcHJvamVjdE5hbWUpXHJcbiAgbGV0IGFibGVUb0Ryb3AgPSBkcm9wem9uZUlELmluY2x1ZGVzKHByb2plY3ROYW1lKVxyXG4gIGxldCBuZXdTdGF0dXMgPSBkcm9wem9uZS5kYXRhc2V0LnN0YXR1c1xyXG4gIGlmKGFibGVUb0Ryb3Ape1xyXG4gICAgY3VyVGFzay5kYXRhc2V0LnN0YXR1cyA9IG5ld1N0YXR1c1xyXG5cclxuICAgIC8vIERpc3BhdGNoIGN1c3RvbSBldmVudCB3aXRoIHVwZGF0ZWQgc3RhdHVzXHJcbiAgICBjb25zdCBzdGF0dXNDaGFuZ2VFdmVudCA9IG5ldyBDdXN0b21FdmVudCgnc3RhdHVzQ2hhbmdlJywge1xyXG4gICAgICBkZXRhaWw6IHsgaWQ6IGlkLCBuZXdTdGF0dXM6IG5ld1N0YXR1cyB9XHJcbiAgICB9KTtcclxuICAgIGRvY3VtZW50LmRpc3BhdGNoRXZlbnQoc3RhdHVzQ2hhbmdlRXZlbnQpO1xyXG4gICAgZXZlbnQuZGF0YVRyYW5zZmVyLmNsZWFyRGF0YSgpO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbmNvbnN0IGluc2VydEFib3ZlVGFzayA9ICh6b25lLCBtb3VzZVkpID0+IHtcclxuICBjb25zdCBlbHMgPSB6b25lLnF1ZXJ5U2VsZWN0b3JBbGwoXCIubWluaS1jYXJkOm5vdCguaXMtZHJhZ2dpbmcpXCIpO1xyXG4gIC8vIGNvbnNvbGUubG9nKGVscylcclxuICBsZXQgY2xvc2VzdFRhc2sgPSBudWxsO1xyXG4gIGxldCBjbG9zZXN0T2Zmc2V0ID0gTnVtYmVyLk5FR0FUSVZFX0lORklOSVRZO1xyXG5cclxuICBlbHMuZm9yRWFjaCgodGFzaykgPT4ge1xyXG4gICAgY29uc3QgeyB0b3AgfSA9IHRhc2suZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcblxyXG4gICAgY29uc3Qgb2Zmc2V0ID0gbW91c2VZIC0gdG9wO1xyXG5cclxuICAgIGlmIChvZmZzZXQgPCAwICYmIG9mZnNldCA+IGNsb3Nlc3RPZmZzZXQpIHtcclxuICAgICAgY2xvc2VzdE9mZnNldCA9IG9mZnNldDtcclxuICAgICAgY2xvc2VzdFRhc2sgPSB0YXNrO1xyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICByZXR1cm4gY2xvc2VzdFRhc2s7XHJcbn07XHJcblxyXG5leHBvcnQge29uRHJhZ1N0YXJ0LCBvbkRyYWdPdmVyLCBvbkRyYWdFbmQsIG9uRHJhZ0xlYXZlLCBvbkRyb3B9IiwiLyoqXG4gKiBAbW9kdWxlIGNvbnN0YW50c1xuICogQHN1bW1hcnkgVXNlZnVsIGNvbnN0YW50c1xuICogQGRlc2NyaXB0aW9uXG4gKiBDb2xsZWN0aW9uIG9mIHVzZWZ1bCBkYXRlIGNvbnN0YW50cy5cbiAqXG4gKiBUaGUgY29uc3RhbnRzIGNvdWxkIGJlIGltcG9ydGVkIGZyb20gYGRhdGUtZm5zL2NvbnN0YW50c2A6XG4gKlxuICogYGBgdHNcbiAqIGltcG9ydCB7IG1heFRpbWUsIG1pblRpbWUgfSBmcm9tIFwiLi9jb25zdGFudHMvZGF0ZS1mbnMvY29uc3RhbnRzXCI7XG4gKlxuICogZnVuY3Rpb24gaXNBbGxvd2VkVGltZSh0aW1lKSB7XG4gKiAgIHJldHVybiB0aW1lIDw9IG1heFRpbWUgJiYgdGltZSA+PSBtaW5UaW1lO1xuICogfVxuICogYGBgXG4gKi9cblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIGRheXNJbldlZWtcbiAqIEBzdW1tYXJ5IERheXMgaW4gMSB3ZWVrLlxuICovXG5leHBvcnQgY29uc3QgZGF5c0luV2VlayA9IDc7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBkYXlzSW5ZZWFyXG4gKiBAc3VtbWFyeSBEYXlzIGluIDEgeWVhci5cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIEhvdyBtYW55IGRheXMgaW4gYSB5ZWFyLlxuICpcbiAqIE9uZSB5ZWFycyBlcXVhbHMgMzY1LjI0MjUgZGF5cyBhY2NvcmRpbmcgdG8gdGhlIGZvcm11bGE6XG4gKlxuICogPiBMZWFwIHllYXIgb2NjdXJlcyBldmVyeSA0IHllYXJzLCBleGNlcHQgZm9yIHllYXJzIHRoYXQgYXJlIGRpdmlzYWJsZSBieSAxMDAgYW5kIG5vdCBkaXZpc2FibGUgYnkgNDAwLlxuICogPiAxIG1lYW4geWVhciA9ICgzNjUrMS80LTEvMTAwKzEvNDAwKSBkYXlzID0gMzY1LjI0MjUgZGF5c1xuICovXG5leHBvcnQgY29uc3QgZGF5c0luWWVhciA9IDM2NS4yNDI1O1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbWF4VGltZVxuICogQHN1bW1hcnkgTWF4aW11bSBhbGxvd2VkIHRpbWUuXG4gKlxuICogQGV4YW1wbGVcbiAqIGltcG9ydCB7IG1heFRpbWUgfSBmcm9tIFwiLi9jb25zdGFudHMvZGF0ZS1mbnMvY29uc3RhbnRzXCI7XG4gKlxuICogY29uc3QgaXNWYWxpZCA9IDg2NDAwMDAwMDAwMDAwMDEgPD0gbWF4VGltZTtcbiAqIC8vPT4gZmFsc2VcbiAqXG4gKiBuZXcgRGF0ZSg4NjQwMDAwMDAwMDAwMDAxKTtcbiAqIC8vPT4gSW52YWxpZCBEYXRlXG4gKi9cbmV4cG9ydCBjb25zdCBtYXhUaW1lID0gTWF0aC5wb3coMTAsIDgpICogMjQgKiA2MCAqIDYwICogMTAwMDtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIG1pblRpbWVcbiAqIEBzdW1tYXJ5IE1pbmltdW0gYWxsb3dlZCB0aW1lLlxuICpcbiAqIEBleGFtcGxlXG4gKiBpbXBvcnQgeyBtaW5UaW1lIH0gZnJvbSBcIi4vY29uc3RhbnRzL2RhdGUtZm5zL2NvbnN0YW50c1wiO1xuICpcbiAqIGNvbnN0IGlzVmFsaWQgPSAtODY0MDAwMDAwMDAwMDAwMSA+PSBtaW5UaW1lO1xuICogLy89PiBmYWxzZVxuICpcbiAqIG5ldyBEYXRlKC04NjQwMDAwMDAwMDAwMDAxKVxuICogLy89PiBJbnZhbGlkIERhdGVcbiAqL1xuZXhwb3J0IGNvbnN0IG1pblRpbWUgPSAtbWF4VGltZTtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIG1pbGxpc2Vjb25kc0luV2Vla1xuICogQHN1bW1hcnkgTWlsbGlzZWNvbmRzIGluIDEgd2Vlay5cbiAqL1xuZXhwb3J0IGNvbnN0IG1pbGxpc2Vjb25kc0luV2VlayA9IDYwNDgwMDAwMDtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIG1pbGxpc2Vjb25kc0luRGF5XG4gKiBAc3VtbWFyeSBNaWxsaXNlY29uZHMgaW4gMSBkYXkuXG4gKi9cbmV4cG9ydCBjb25zdCBtaWxsaXNlY29uZHNJbkRheSA9IDg2NDAwMDAwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbWlsbGlzZWNvbmRzSW5NaW51dGVcbiAqIEBzdW1tYXJ5IE1pbGxpc2Vjb25kcyBpbiAxIG1pbnV0ZVxuICovXG5leHBvcnQgY29uc3QgbWlsbGlzZWNvbmRzSW5NaW51dGUgPSA2MDAwMDtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIG1pbGxpc2Vjb25kc0luSG91clxuICogQHN1bW1hcnkgTWlsbGlzZWNvbmRzIGluIDEgaG91clxuICovXG5leHBvcnQgY29uc3QgbWlsbGlzZWNvbmRzSW5Ib3VyID0gMzYwMDAwMDtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIG1pbGxpc2Vjb25kc0luU2Vjb25kXG4gKiBAc3VtbWFyeSBNaWxsaXNlY29uZHMgaW4gMSBzZWNvbmRcbiAqL1xuZXhwb3J0IGNvbnN0IG1pbGxpc2Vjb25kc0luU2Vjb25kID0gMTAwMDtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIG1pbnV0ZXNJblllYXJcbiAqIEBzdW1tYXJ5IE1pbnV0ZXMgaW4gMSB5ZWFyLlxuICovXG5leHBvcnQgY29uc3QgbWludXRlc0luWWVhciA9IDUyNTYwMDtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIG1pbnV0ZXNJbk1vbnRoXG4gKiBAc3VtbWFyeSBNaW51dGVzIGluIDEgbW9udGguXG4gKi9cbmV4cG9ydCBjb25zdCBtaW51dGVzSW5Nb250aCA9IDQzMjAwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbWludXRlc0luRGF5XG4gKiBAc3VtbWFyeSBNaW51dGVzIGluIDEgZGF5LlxuICovXG5leHBvcnQgY29uc3QgbWludXRlc0luRGF5ID0gMTQ0MDtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIG1pbnV0ZXNJbkhvdXJcbiAqIEBzdW1tYXJ5IE1pbnV0ZXMgaW4gMSBob3VyLlxuICovXG5leHBvcnQgY29uc3QgbWludXRlc0luSG91ciA9IDYwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbW9udGhzSW5RdWFydGVyXG4gKiBAc3VtbWFyeSBNb250aHMgaW4gMSBxdWFydGVyLlxuICovXG5leHBvcnQgY29uc3QgbW9udGhzSW5RdWFydGVyID0gMztcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIG1vbnRoc0luWWVhclxuICogQHN1bW1hcnkgTW9udGhzIGluIDEgeWVhci5cbiAqL1xuZXhwb3J0IGNvbnN0IG1vbnRoc0luWWVhciA9IDEyO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgcXVhcnRlcnNJblllYXJcbiAqIEBzdW1tYXJ5IFF1YXJ0ZXJzIGluIDEgeWVhclxuICovXG5leHBvcnQgY29uc3QgcXVhcnRlcnNJblllYXIgPSA0O1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgc2Vjb25kc0luSG91clxuICogQHN1bW1hcnkgU2Vjb25kcyBpbiAxIGhvdXIuXG4gKi9cbmV4cG9ydCBjb25zdCBzZWNvbmRzSW5Ib3VyID0gMzYwMDtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIHNlY29uZHNJbk1pbnV0ZVxuICogQHN1bW1hcnkgU2Vjb25kcyBpbiAxIG1pbnV0ZS5cbiAqL1xuZXhwb3J0IGNvbnN0IHNlY29uZHNJbk1pbnV0ZSA9IDYwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgc2Vjb25kc0luRGF5XG4gKiBAc3VtbWFyeSBTZWNvbmRzIGluIDEgZGF5LlxuICovXG5leHBvcnQgY29uc3Qgc2Vjb25kc0luRGF5ID0gc2Vjb25kc0luSG91ciAqIDI0O1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgc2Vjb25kc0luV2Vla1xuICogQHN1bW1hcnkgU2Vjb25kcyBpbiAxIHdlZWsuXG4gKi9cbmV4cG9ydCBjb25zdCBzZWNvbmRzSW5XZWVrID0gc2Vjb25kc0luRGF5ICogNztcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIHNlY29uZHNJblllYXJcbiAqIEBzdW1tYXJ5IFNlY29uZHMgaW4gMSB5ZWFyLlxuICovXG5leHBvcnQgY29uc3Qgc2Vjb25kc0luWWVhciA9IHNlY29uZHNJbkRheSAqIGRheXNJblllYXI7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBzZWNvbmRzSW5Nb250aFxuICogQHN1bW1hcnkgU2Vjb25kcyBpbiAxIG1vbnRoXG4gKi9cbmV4cG9ydCBjb25zdCBzZWNvbmRzSW5Nb250aCA9IHNlY29uZHNJblllYXIgLyAxMjtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIHNlY29uZHNJblF1YXJ0ZXJcbiAqIEBzdW1tYXJ5IFNlY29uZHMgaW4gMSBxdWFydGVyLlxuICovXG5leHBvcnQgY29uc3Qgc2Vjb25kc0luUXVhcnRlciA9IHNlY29uZHNJbk1vbnRoICogMztcbiIsIi8qKlxuICogQG5hbWUgdG9EYXRlXG4gKiBAY2F0ZWdvcnkgQ29tbW9uIEhlbHBlcnNcbiAqIEBzdW1tYXJ5IENvbnZlcnQgdGhlIGdpdmVuIGFyZ3VtZW50IHRvIGFuIGluc3RhbmNlIG9mIERhdGUuXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBDb252ZXJ0IHRoZSBnaXZlbiBhcmd1bWVudCB0byBhbiBpbnN0YW5jZSBvZiBEYXRlLlxuICpcbiAqIElmIHRoZSBhcmd1bWVudCBpcyBhbiBpbnN0YW5jZSBvZiBEYXRlLCB0aGUgZnVuY3Rpb24gcmV0dXJucyBpdHMgY2xvbmUuXG4gKlxuICogSWYgdGhlIGFyZ3VtZW50IGlzIGEgbnVtYmVyLCBpdCBpcyB0cmVhdGVkIGFzIGEgdGltZXN0YW1wLlxuICpcbiAqIElmIHRoZSBhcmd1bWVudCBpcyBub25lIG9mIHRoZSBhYm92ZSwgdGhlIGZ1bmN0aW9uIHJldHVybnMgSW52YWxpZCBEYXRlLlxuICpcbiAqICoqTm90ZSoqOiAqYWxsKiBEYXRlIGFyZ3VtZW50cyBwYXNzZWQgdG8gYW55ICpkYXRlLWZucyogZnVuY3Rpb24gaXMgcHJvY2Vzc2VkIGJ5IGB0b0RhdGVgLlxuICpcbiAqIEB0eXBlUGFyYW0gRGF0ZVR5cGUgLSBUaGUgYERhdGVgIHR5cGUsIHRoZSBmdW5jdGlvbiBvcGVyYXRlcyBvbi4gR2V0cyBpbmZlcnJlZCBmcm9tIHBhc3NlZCBhcmd1bWVudHMuIEFsbG93cyB0byB1c2UgZXh0ZW5zaW9ucyBsaWtlIFtgVVRDRGF0ZWBdKGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy91dGMpLlxuICpcbiAqIEBwYXJhbSBhcmd1bWVudCAtIFRoZSB2YWx1ZSB0byBjb252ZXJ0XG4gKlxuICogQHJldHVybnMgVGhlIHBhcnNlZCBkYXRlIGluIHRoZSBsb2NhbCB0aW1lIHpvbmVcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQ2xvbmUgdGhlIGRhdGU6XG4gKiBjb25zdCByZXN1bHQgPSB0b0RhdGUobmV3IERhdGUoMjAxNCwgMSwgMTEsIDExLCAzMCwgMzApKVxuICogLy89PiBUdWUgRmViIDExIDIwMTQgMTE6MzA6MzBcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQ29udmVydCB0aGUgdGltZXN0YW1wIHRvIGRhdGU6XG4gKiBjb25zdCByZXN1bHQgPSB0b0RhdGUoMTM5MjA5ODQzMDAwMClcbiAqIC8vPT4gVHVlIEZlYiAxMSAyMDE0IDExOjMwOjMwXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b0RhdGUoYXJndW1lbnQpIHtcbiAgY29uc3QgYXJnU3RyID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFyZ3VtZW50KTtcblxuICAvLyBDbG9uZSB0aGUgZGF0ZVxuICBpZiAoXG4gICAgYXJndW1lbnQgaW5zdGFuY2VvZiBEYXRlIHx8XG4gICAgKHR5cGVvZiBhcmd1bWVudCA9PT0gXCJvYmplY3RcIiAmJiBhcmdTdHIgPT09IFwiW29iamVjdCBEYXRlXVwiKVxuICApIHtcbiAgICAvLyBQcmV2ZW50IHRoZSBkYXRlIHRvIGxvc2UgdGhlIG1pbGxpc2Vjb25kcyB3aGVuIHBhc3NlZCB0byBuZXcgRGF0ZSgpIGluIElFMTBcbiAgICByZXR1cm4gbmV3IGFyZ3VtZW50LmNvbnN0cnVjdG9yKCthcmd1bWVudCk7XG4gIH0gZWxzZSBpZiAoXG4gICAgdHlwZW9mIGFyZ3VtZW50ID09PSBcIm51bWJlclwiIHx8XG4gICAgYXJnU3RyID09PSBcIltvYmplY3QgTnVtYmVyXVwiIHx8XG4gICAgdHlwZW9mIGFyZ3VtZW50ID09PSBcInN0cmluZ1wiIHx8XG4gICAgYXJnU3RyID09PSBcIltvYmplY3QgU3RyaW5nXVwiXG4gICkge1xuICAgIC8vIFRPRE86IENhbiB3ZSBnZXQgcmlkIG9mIGFzP1xuICAgIHJldHVybiBuZXcgRGF0ZShhcmd1bWVudCk7XG4gIH0gZWxzZSB7XG4gICAgLy8gVE9ETzogQ2FuIHdlIGdldCByaWQgb2YgYXM/XG4gICAgcmV0dXJuIG5ldyBEYXRlKE5hTik7XG4gIH1cbn1cblxuLy8gRmFsbGJhY2sgZm9yIG1vZHVsYXJpemVkIGltcG9ydHM6XG5leHBvcnQgZGVmYXVsdCB0b0RhdGU7XG4iLCJpbXBvcnQgeyB0b0RhdGUgfSBmcm9tIFwiLi90b0RhdGUubWpzXCI7XG5cbi8qKlxuICogQG5hbWUgc3RhcnRPZkRheVxuICogQGNhdGVnb3J5IERheSBIZWxwZXJzXG4gKiBAc3VtbWFyeSBSZXR1cm4gdGhlIHN0YXJ0IG9mIGEgZGF5IGZvciB0aGUgZ2l2ZW4gZGF0ZS5cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIFJldHVybiB0aGUgc3RhcnQgb2YgYSBkYXkgZm9yIHRoZSBnaXZlbiBkYXRlLlxuICogVGhlIHJlc3VsdCB3aWxsIGJlIGluIHRoZSBsb2NhbCB0aW1lem9uZS5cbiAqXG4gKiBAdHlwZVBhcmFtIERhdGVUeXBlIC0gVGhlIGBEYXRlYCB0eXBlLCB0aGUgZnVuY3Rpb24gb3BlcmF0ZXMgb24uIEdldHMgaW5mZXJyZWQgZnJvbSBwYXNzZWQgYXJndW1lbnRzLiBBbGxvd3MgdG8gdXNlIGV4dGVuc2lvbnMgbGlrZSBbYFVUQ0RhdGVgXShodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvdXRjKS5cbiAqXG4gKiBAcGFyYW0gZGF0ZSAtIFRoZSBvcmlnaW5hbCBkYXRlXG4gKlxuICogQHJldHVybnMgVGhlIHN0YXJ0IG9mIGEgZGF5XG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFRoZSBzdGFydCBvZiBhIGRheSBmb3IgMiBTZXB0ZW1iZXIgMjAxNCAxMTo1NTowMDpcbiAqIGNvbnN0IHJlc3VsdCA9IHN0YXJ0T2ZEYXkobmV3IERhdGUoMjAxNCwgOCwgMiwgMTEsIDU1LCAwKSlcbiAqIC8vPT4gVHVlIFNlcCAwMiAyMDE0IDAwOjAwOjAwXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdGFydE9mRGF5KGRhdGUpIHtcbiAgY29uc3QgX2RhdGUgPSB0b0RhdGUoZGF0ZSk7XG4gIF9kYXRlLnNldEhvdXJzKDAsIDAsIDAsIDApO1xuICByZXR1cm4gX2RhdGU7XG59XG5cbi8vIEZhbGxiYWNrIGZvciBtb2R1bGFyaXplZCBpbXBvcnRzOlxuZXhwb3J0IGRlZmF1bHQgc3RhcnRPZkRheTtcbiIsImltcG9ydCB7IHRvRGF0ZSB9IGZyb20gXCIuLi90b0RhdGUubWpzXCI7XG5cbi8qKlxuICogR29vZ2xlIENocm9tZSBhcyBvZiA2Ny4wLjMzOTYuODcgaW50cm9kdWNlZCB0aW1lem9uZXMgd2l0aCBvZmZzZXQgdGhhdCBpbmNsdWRlcyBzZWNvbmRzLlxuICogVGhleSB1c3VhbGx5IGFwcGVhciBmb3IgZGF0ZXMgdGhhdCBkZW5vdGUgdGltZSBiZWZvcmUgdGhlIHRpbWV6b25lcyB3ZXJlIGludHJvZHVjZWRcbiAqIChlLmcuIGZvciAnRXVyb3BlL1ByYWd1ZScgdGltZXpvbmUgdGhlIG9mZnNldCBpcyBHTVQrMDA6NTc6NDQgYmVmb3JlIDEgT2N0b2JlciAxODkxXG4gKiBhbmQgR01UKzAxOjAwOjAwIGFmdGVyIHRoYXQgZGF0ZSlcbiAqXG4gKiBEYXRlI2dldFRpbWV6b25lT2Zmc2V0IHJldHVybnMgdGhlIG9mZnNldCBpbiBtaW51dGVzIGFuZCB3b3VsZCByZXR1cm4gNTcgZm9yIHRoZSBleGFtcGxlIGFib3ZlLFxuICogd2hpY2ggd291bGQgbGVhZCB0byBpbmNvcnJlY3QgY2FsY3VsYXRpb25zLlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gcmV0dXJucyB0aGUgdGltZXpvbmUgb2Zmc2V0IGluIG1pbGxpc2Vjb25kcyB0aGF0IHRha2VzIHNlY29uZHMgaW4gYWNjb3VudC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFRpbWV6b25lT2Zmc2V0SW5NaWxsaXNlY29uZHMoZGF0ZSkge1xuICBjb25zdCBfZGF0ZSA9IHRvRGF0ZShkYXRlKTtcbiAgY29uc3QgdXRjRGF0ZSA9IG5ldyBEYXRlKFxuICAgIERhdGUuVVRDKFxuICAgICAgX2RhdGUuZ2V0RnVsbFllYXIoKSxcbiAgICAgIF9kYXRlLmdldE1vbnRoKCksXG4gICAgICBfZGF0ZS5nZXREYXRlKCksXG4gICAgICBfZGF0ZS5nZXRIb3VycygpLFxuICAgICAgX2RhdGUuZ2V0TWludXRlcygpLFxuICAgICAgX2RhdGUuZ2V0U2Vjb25kcygpLFxuICAgICAgX2RhdGUuZ2V0TWlsbGlzZWNvbmRzKCksXG4gICAgKSxcbiAgKTtcbiAgdXRjRGF0ZS5zZXRVVENGdWxsWWVhcihfZGF0ZS5nZXRGdWxsWWVhcigpKTtcbiAgcmV0dXJuICtkYXRlIC0gK3V0Y0RhdGU7XG59XG4iLCJpbXBvcnQgeyBkaWZmZXJlbmNlSW5DYWxlbmRhckRheXMgfSBmcm9tIFwiLi9kaWZmZXJlbmNlSW5DYWxlbmRhckRheXMubWpzXCI7XG5pbXBvcnQgeyB0b0RhdGUgfSBmcm9tIFwiLi90b0RhdGUubWpzXCI7XG5cbi8qKlxuICogQG5hbWUgZGlmZmVyZW5jZUluRGF5c1xuICogQGNhdGVnb3J5IERheSBIZWxwZXJzXG4gKiBAc3VtbWFyeSBHZXQgdGhlIG51bWJlciBvZiBmdWxsIGRheXMgYmV0d2VlbiB0aGUgZ2l2ZW4gZGF0ZXMuXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBHZXQgdGhlIG51bWJlciBvZiBmdWxsIGRheSBwZXJpb2RzIGJldHdlZW4gdHdvIGRhdGVzLiBGcmFjdGlvbmFsIGRheXMgYXJlXG4gKiB0cnVuY2F0ZWQgdG93YXJkcyB6ZXJvLlxuICpcbiAqIE9uZSBcImZ1bGwgZGF5XCIgaXMgdGhlIGRpc3RhbmNlIGJldHdlZW4gYSBsb2NhbCB0aW1lIGluIG9uZSBkYXkgdG8gdGhlIHNhbWVcbiAqIGxvY2FsIHRpbWUgb24gdGhlIG5leHQgb3IgcHJldmlvdXMgZGF5LiBBIGZ1bGwgZGF5IGNhbiBzb21ldGltZXMgYmUgbGVzcyB0aGFuXG4gKiBvciBtb3JlIHRoYW4gMjQgaG91cnMgaWYgYSBkYXlsaWdodCBzYXZpbmdzIGNoYW5nZSBoYXBwZW5zIGJldHdlZW4gdHdvIGRhdGVzLlxuICpcbiAqIFRvIGlnbm9yZSBEU1QgYW5kIG9ubHkgbWVhc3VyZSBleGFjdCAyNC1ob3VyIHBlcmlvZHMsIHVzZSB0aGlzIGluc3RlYWQ6XG4gKiBgTWF0aC50cnVuYyhkaWZmZXJlbmNlSW5Ib3VycyhkYXRlTGVmdCwgZGF0ZVJpZ2h0KS8yNCl8MGAuXG4gKlxuICogQHR5cGVQYXJhbSBEYXRlVHlwZSAtIFRoZSBgRGF0ZWAgdHlwZSwgdGhlIGZ1bmN0aW9uIG9wZXJhdGVzIG9uLiBHZXRzIGluZmVycmVkIGZyb20gcGFzc2VkIGFyZ3VtZW50cy4gQWxsb3dzIHRvIHVzZSBleHRlbnNpb25zIGxpa2UgW2BVVENEYXRlYF0oaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL3V0YykuXG4gKlxuICogQHBhcmFtIGRhdGVMZWZ0IC0gVGhlIGxhdGVyIGRhdGVcbiAqIEBwYXJhbSBkYXRlUmlnaHQgLSBUaGUgZWFybGllciBkYXRlXG4gKlxuICogQHJldHVybnMgVGhlIG51bWJlciBvZiBmdWxsIGRheXMgYWNjb3JkaW5nIHRvIHRoZSBsb2NhbCB0aW1lem9uZVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBIb3cgbWFueSBmdWxsIGRheXMgYXJlIGJldHdlZW5cbiAqIC8vIDIgSnVseSAyMDExIDIzOjAwOjAwIGFuZCAyIEp1bHkgMjAxMiAwMDowMDowMD9cbiAqIGNvbnN0IHJlc3VsdCA9IGRpZmZlcmVuY2VJbkRheXMoXG4gKiAgIG5ldyBEYXRlKDIwMTIsIDYsIDIsIDAsIDApLFxuICogICBuZXcgRGF0ZSgyMDExLCA2LCAyLCAyMywgMClcbiAqIClcbiAqIC8vPT4gMzY1XG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIEhvdyBtYW55IGZ1bGwgZGF5cyBhcmUgYmV0d2VlblxuICogLy8gMiBKdWx5IDIwMTEgMjM6NTk6MDAgYW5kIDMgSnVseSAyMDExIDAwOjAxOjAwP1xuICogY29uc3QgcmVzdWx0ID0gZGlmZmVyZW5jZUluRGF5cyhcbiAqICAgbmV3IERhdGUoMjAxMSwgNiwgMywgMCwgMSksXG4gKiAgIG5ldyBEYXRlKDIwMTEsIDYsIDIsIDIzLCA1OSlcbiAqIClcbiAqIC8vPT4gMFxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBIb3cgbWFueSBmdWxsIGRheXMgYXJlIGJldHdlZW5cbiAqIC8vIDEgTWFyY2ggMjAyMCAwOjAwIGFuZCAxIEp1bmUgMjAyMCAwOjAwID9cbiAqIC8vIE5vdGU6IGJlY2F1c2UgbG9jYWwgdGltZSBpcyB1c2VkLCB0aGVcbiAqIC8vIHJlc3VsdCB3aWxsIGFsd2F5cyBiZSA5MiBkYXlzLCBldmVuIGluXG4gKiAvLyB0aW1lIHpvbmVzIHdoZXJlIERTVCBzdGFydHMgYW5kIHRoZVxuICogLy8gcGVyaW9kIGhhcyBvbmx5IDkyKjI0LTEgaG91cnMuXG4gKiBjb25zdCByZXN1bHQgPSBkaWZmZXJlbmNlSW5EYXlzKFxuICogICBuZXcgRGF0ZSgyMDIwLCA1LCAxKSxcbiAqICAgbmV3IERhdGUoMjAyMCwgMiwgMSlcbiAqIClcbiAqIC8vPT4gOTJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRpZmZlcmVuY2VJbkRheXMoZGF0ZUxlZnQsIGRhdGVSaWdodCkge1xuICBjb25zdCBfZGF0ZUxlZnQgPSB0b0RhdGUoZGF0ZUxlZnQpO1xuICBjb25zdCBfZGF0ZVJpZ2h0ID0gdG9EYXRlKGRhdGVSaWdodCk7XG5cbiAgY29uc3Qgc2lnbiA9IGNvbXBhcmVMb2NhbEFzYyhfZGF0ZUxlZnQsIF9kYXRlUmlnaHQpO1xuICBjb25zdCBkaWZmZXJlbmNlID0gTWF0aC5hYnMoZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzKF9kYXRlTGVmdCwgX2RhdGVSaWdodCkpO1xuXG4gIF9kYXRlTGVmdC5zZXREYXRlKF9kYXRlTGVmdC5nZXREYXRlKCkgLSBzaWduICogZGlmZmVyZW5jZSk7XG5cbiAgLy8gTWF0aC5hYnMoZGlmZiBpbiBmdWxsIGRheXMgLSBkaWZmIGluIGNhbGVuZGFyIGRheXMpID09PSAxIGlmIGxhc3QgY2FsZW5kYXIgZGF5IGlzIG5vdCBmdWxsXG4gIC8vIElmIHNvLCByZXN1bHQgbXVzdCBiZSBkZWNyZWFzZWQgYnkgMSBpbiBhYnNvbHV0ZSB2YWx1ZVxuICBjb25zdCBpc0xhc3REYXlOb3RGdWxsID0gTnVtYmVyKFxuICAgIGNvbXBhcmVMb2NhbEFzYyhfZGF0ZUxlZnQsIF9kYXRlUmlnaHQpID09PSAtc2lnbixcbiAgKTtcbiAgY29uc3QgcmVzdWx0ID0gc2lnbiAqIChkaWZmZXJlbmNlIC0gaXNMYXN0RGF5Tm90RnVsbCk7XG4gIC8vIFByZXZlbnQgbmVnYXRpdmUgemVyb1xuICByZXR1cm4gcmVzdWx0ID09PSAwID8gMCA6IHJlc3VsdDtcbn1cblxuLy8gTGlrZSBgY29tcGFyZUFzY2AgYnV0IHVzZXMgbG9jYWwgdGltZSBub3QgVVRDLCB3aGljaCBpcyBuZWVkZWRcbi8vIGZvciBhY2N1cmF0ZSBlcXVhbGl0eSBjb21wYXJpc29ucyBvZiBVVEMgdGltZXN0YW1wcyB0aGF0IGVuZCB1cFxuLy8gaGF2aW5nIHRoZSBzYW1lIHJlcHJlc2VudGF0aW9uIGluIGxvY2FsIHRpbWUsIGUuZy4gb25lIGhvdXIgYmVmb3JlXG4vLyBEU1QgZW5kcyB2cy4gdGhlIGluc3RhbnQgdGhhdCBEU1QgZW5kcy5cbmZ1bmN0aW9uIGNvbXBhcmVMb2NhbEFzYyhkYXRlTGVmdCwgZGF0ZVJpZ2h0KSB7XG4gIGNvbnN0IGRpZmYgPVxuICAgIGRhdGVMZWZ0LmdldEZ1bGxZZWFyKCkgLSBkYXRlUmlnaHQuZ2V0RnVsbFllYXIoKSB8fFxuICAgIGRhdGVMZWZ0LmdldE1vbnRoKCkgLSBkYXRlUmlnaHQuZ2V0TW9udGgoKSB8fFxuICAgIGRhdGVMZWZ0LmdldERhdGUoKSAtIGRhdGVSaWdodC5nZXREYXRlKCkgfHxcbiAgICBkYXRlTGVmdC5nZXRIb3VycygpIC0gZGF0ZVJpZ2h0LmdldEhvdXJzKCkgfHxcbiAgICBkYXRlTGVmdC5nZXRNaW51dGVzKCkgLSBkYXRlUmlnaHQuZ2V0TWludXRlcygpIHx8XG4gICAgZGF0ZUxlZnQuZ2V0U2Vjb25kcygpIC0gZGF0ZVJpZ2h0LmdldFNlY29uZHMoKSB8fFxuICAgIGRhdGVMZWZ0LmdldE1pbGxpc2Vjb25kcygpIC0gZGF0ZVJpZ2h0LmdldE1pbGxpc2Vjb25kcygpO1xuXG4gIGlmIChkaWZmIDwgMCkge1xuICAgIHJldHVybiAtMTtcbiAgfSBlbHNlIGlmIChkaWZmID4gMCkge1xuICAgIHJldHVybiAxO1xuICAgIC8vIFJldHVybiAwIGlmIGRpZmYgaXMgMDsgcmV0dXJuIE5hTiBpZiBkaWZmIGlzIE5hTlxuICB9IGVsc2Uge1xuICAgIHJldHVybiBkaWZmO1xuICB9XG59XG5cbi8vIEZhbGxiYWNrIGZvciBtb2R1bGFyaXplZCBpbXBvcnRzOlxuZXhwb3J0IGRlZmF1bHQgZGlmZmVyZW5jZUluRGF5cztcbiIsImltcG9ydCB7IG1pbGxpc2Vjb25kc0luRGF5IH0gZnJvbSBcIi4vY29uc3RhbnRzLm1qc1wiO1xuaW1wb3J0IHsgc3RhcnRPZkRheSB9IGZyb20gXCIuL3N0YXJ0T2ZEYXkubWpzXCI7XG5pbXBvcnQgeyBnZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzIH0gZnJvbSBcIi4vX2xpYi9nZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzLm1qc1wiO1xuXG4vKipcbiAqIEBuYW1lIGRpZmZlcmVuY2VJbkNhbGVuZGFyRGF5c1xuICogQGNhdGVnb3J5IERheSBIZWxwZXJzXG4gKiBAc3VtbWFyeSBHZXQgdGhlIG51bWJlciBvZiBjYWxlbmRhciBkYXlzIGJldHdlZW4gdGhlIGdpdmVuIGRhdGVzLlxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogR2V0IHRoZSBudW1iZXIgb2YgY2FsZW5kYXIgZGF5cyBiZXR3ZWVuIHRoZSBnaXZlbiBkYXRlcy4gVGhpcyBtZWFucyB0aGF0IHRoZSB0aW1lcyBhcmUgcmVtb3ZlZFxuICogZnJvbSB0aGUgZGF0ZXMgYW5kIHRoZW4gdGhlIGRpZmZlcmVuY2UgaW4gZGF5cyBpcyBjYWxjdWxhdGVkLlxuICpcbiAqIEB0eXBlUGFyYW0gRGF0ZVR5cGUgLSBUaGUgYERhdGVgIHR5cGUsIHRoZSBmdW5jdGlvbiBvcGVyYXRlcyBvbi4gR2V0cyBpbmZlcnJlZCBmcm9tIHBhc3NlZCBhcmd1bWVudHMuIEFsbG93cyB0byB1c2UgZXh0ZW5zaW9ucyBsaWtlIFtgVVRDRGF0ZWBdKGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy91dGMpLlxuICpcbiAqIEBwYXJhbSBkYXRlTGVmdCAtIFRoZSBsYXRlciBkYXRlXG4gKiBAcGFyYW0gZGF0ZVJpZ2h0IC0gVGhlIGVhcmxpZXIgZGF0ZVxuICpcbiAqIEByZXR1cm5zIFRoZSBudW1iZXIgb2YgY2FsZW5kYXIgZGF5c1xuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBIb3cgbWFueSBjYWxlbmRhciBkYXlzIGFyZSBiZXR3ZWVuXG4gKiAvLyAyIEp1bHkgMjAxMSAyMzowMDowMCBhbmQgMiBKdWx5IDIwMTIgMDA6MDA6MDA/XG4gKiBjb25zdCByZXN1bHQgPSBkaWZmZXJlbmNlSW5DYWxlbmRhckRheXMoXG4gKiAgIG5ldyBEYXRlKDIwMTIsIDYsIDIsIDAsIDApLFxuICogICBuZXcgRGF0ZSgyMDExLCA2LCAyLCAyMywgMClcbiAqIClcbiAqIC8vPT4gMzY2XG4gKiAvLyBIb3cgbWFueSBjYWxlbmRhciBkYXlzIGFyZSBiZXR3ZWVuXG4gKiAvLyAyIEp1bHkgMjAxMSAyMzo1OTowMCBhbmQgMyBKdWx5IDIwMTEgMDA6MDE6MDA/XG4gKiBjb25zdCByZXN1bHQgPSBkaWZmZXJlbmNlSW5DYWxlbmRhckRheXMoXG4gKiAgIG5ldyBEYXRlKDIwMTEsIDYsIDMsIDAsIDEpLFxuICogICBuZXcgRGF0ZSgyMDExLCA2LCAyLCAyMywgNTkpXG4gKiApXG4gKiAvLz0+IDFcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRpZmZlcmVuY2VJbkNhbGVuZGFyRGF5cyhkYXRlTGVmdCwgZGF0ZVJpZ2h0KSB7XG4gIGNvbnN0IHN0YXJ0T2ZEYXlMZWZ0ID0gc3RhcnRPZkRheShkYXRlTGVmdCk7XG4gIGNvbnN0IHN0YXJ0T2ZEYXlSaWdodCA9IHN0YXJ0T2ZEYXkoZGF0ZVJpZ2h0KTtcblxuICBjb25zdCB0aW1lc3RhbXBMZWZ0ID1cbiAgICArc3RhcnRPZkRheUxlZnQgLSBnZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzKHN0YXJ0T2ZEYXlMZWZ0KTtcbiAgY29uc3QgdGltZXN0YW1wUmlnaHQgPVxuICAgICtzdGFydE9mRGF5UmlnaHQgLSBnZXRUaW1lem9uZU9mZnNldEluTWlsbGlzZWNvbmRzKHN0YXJ0T2ZEYXlSaWdodCk7XG5cbiAgLy8gUm91bmQgdGhlIG51bWJlciBvZiBkYXlzIHRvIHRoZSBuZWFyZXN0IGludGVnZXIgYmVjYXVzZSB0aGUgbnVtYmVyIG9mXG4gIC8vIG1pbGxpc2Vjb25kcyBpbiBhIGRheSBpcyBub3QgY29uc3RhbnQgKGUuZy4gaXQncyBkaWZmZXJlbnQgaW4gdGhlIHdlZWsgb2ZcbiAgLy8gdGhlIGRheWxpZ2h0IHNhdmluZyB0aW1lIGNsb2NrIHNoaWZ0KS5cbiAgcmV0dXJuIE1hdGgucm91bmQoKHRpbWVzdGFtcExlZnQgLSB0aW1lc3RhbXBSaWdodCkgLyBtaWxsaXNlY29uZHNJbkRheSk7XG59XG5cbi8vIEZhbGxiYWNrIGZvciBtb2R1bGFyaXplZCBpbXBvcnRzOlxuZXhwb3J0IGRlZmF1bHQgZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2NhcmRzLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vY2FyZHMuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IHsgY3JlYXRlRG9tRWxlbWVudCB9IGZyb20gXCIuL2NvbXBvbmVudE1ha2Vyc1wiXHJcbmltcG9ydCAqIGFzIERyYWcgZnJvbSAnLi9kcmFnRnVuY3Rpb25zLmpzJ1xyXG5pbXBvcnQgKiBhcyBEYXRlRk5TIGZyb20gXCJkYXRlLWZuc1wiXHJcbmltcG9ydCAnLi9zdHlsZXMvY2FyZHMuY3NzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBDYXJkUmVuZGVyZXIge1xyXG4gICAgY29uc3RydWN0b3IocHJvamVjdFJlbmRlcmVyLCB0YXNrKXtcclxuICAgICAgICB0aGlzLnRhc2sgPSB0YXNrXHJcbiAgICAgICAgdGhpcy5wcm9qZWN0UmVuZGVyZXIgPSBwcm9qZWN0UmVuZGVyZXJcclxuICAgIH1cclxuXHJcbiAgICBzZXRQcm9qZWN0UmVuZGVyZXIocHJvamVjdFJlbmRlcmVyKSB7XHJcbiAgICAgICAgdGhpcy5wcm9qZWN0UmVuZGVyZXIgPSBwcm9qZWN0UmVuZGVyZXI7XHJcbiAgICB9XHJcblxyXG4gICAgY3JlYXRlRnVsbENhcmQoKSB7XHJcbiAgICAgICAgY29uc3QgY2FyZFJlbW92ZUJ1dHRvbiA9IGNyZWF0ZURvbUVsZW1lbnQoJ2J1dHRvbicsIHtpZDogJ2NhcmQtcmVtb3ZlLWJ1dHRvbicsIGNsYXNzOiAnZnVsbC1jYXJkLWluZm8nfSwgJ0RlbGV0ZSBUYXNrJylcclxuICAgICAgICBjYXJkUmVtb3ZlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgY2FyZEFyZWEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY2FyZC1hcmVhJylcclxuICAgICAgICAgICAgdGhpcy5kZWxldGVUYXJnZXQoY2FyZEFyZWEpLFxyXG4gICAgICAgICAgICB0aGlzLnByb2plY3RSZW5kZXJlci5wcm9qZWN0LnJlbW92ZVRhc2sodGhpcy50YXNrLnRpdGxlKVxyXG4gICAgICAgICAgICB0aGlzLnByb2plY3RSZW5kZXJlci5yZW5kZXJBbmRVcGRhdGVQcm9qZWN0KClcclxuICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5wcm9qZWN0UmVuZGVyZXIucHJvamVjdC5yZXR1cm5Qcm9qZWN0SlNPTigpKX0pXHJcblxyXG4gICAgICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoKVxyXG4gICAgICAgICAgICAvLyBsZXQgY3VycmVudERhdGUgPSBkYXRlLmdldERhdGUoKVxyXG4gICAgICAgICAgICBsZXQgZHVlRGF0ZSA9IHRoaXMudGFzay5yZXR1cm5EdWVEYXRlKClcclxuICAgICAgICAgICAgbGV0IGR1ZURhdGVUaW1lciA9IERhdGVGTlMuZGlmZmVyZW5jZUluRGF5cyhkdWVEYXRlLCBkYXRlKTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IGR1ZURhdGVMYWJlbCA9IGNyZWF0ZURvbUVsZW1lbnQoJ2xhYmVsJywge2lkOlwiZHVlRGF0ZS1sYWJlbFwiLCBmb3I6XCJuZXctY2FyZC1kdWVEYXRlXCJ9LCBcIkR1ZTogXCIpXHJcbiAgICAgICAgICAgIGNvbnN0IGNhcmREdWVEYXRlID0gY3JlYXRlRG9tRWxlbWVudCgnaW5wdXQnLCB7aWQ6ICdmdWxsLWNhcmQtZHVlRGF0ZScsIGNsYXNzOidmdWxsLWNhcmQtaW5mbycsIGNvbnRlbnRlZGl0YWJsZSA6dHJ1ZSwgdHlwZTonZGF0ZSd9KVxyXG4gICAgICAgICAgICBjYXJkRHVlRGF0ZS52YWx1ZSA9IGR1ZURhdGVcclxuICAgICAgICAgICAgY29uc3QgZHVlRGF0ZURpdiA9IGNyZWF0ZURvbUVsZW1lbnQoJ2Rpdicse2lkOidkdWUtZGF0ZSd9LGR1ZURhdGVMYWJlbCwgY2FyZER1ZURhdGUpXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBjb25zdCBwcmlvcml0eUxhYmVsID0gY3JlYXRlRG9tRWxlbWVudCgnbGFiZWwnLHtpZDoncHJpb3JpdHktbGFiZWwnLGZvcjpcIm5ldy1jYXJkLXByaW9yaXR5XCJ9LCdQcmlvcml0eTonKVxyXG4gICAgICAgICAgICAvLyBjb25zdCBjYXJkUHJpb3JpdHkgPSBjcmVhdGVEb21FbGVtZW50KCdvcHRpb24nLCB7aWQ6ICdmdWxsLWNhcmQtcHJpb3JpdHknLCBjbGFzczonZnVsbC1jYXJkLWluZm8nLCBjb250ZW50ZWRpdGFibGUgOnRydWV9LCB0aGlzLnRhc2sucHJpb3JpdHkpXHJcbiAgICAgICAgICAgIGNvbnN0IGNhcmRQcmlvcml0eSA9IGNyZWF0ZURvbUVsZW1lbnQoJ3NlbGVjdCcsIHtpZDonbmV3LWNhcmQtcHJpb3JpdHknfSwvLywgc2VsZWN0ZWQ6YCR7dGhpcy50YXNrLnByaW9yaXR5fWB9LCBcclxuICAgICAgICAgICAgICAgIGNyZWF0ZURvbUVsZW1lbnQoJ29wdGlvbicsIHt2YWx1ZTogJ2xvdyd9LCBcIkxvd1wiKSwgXHJcbiAgICAgICAgICAgICAgICBjcmVhdGVEb21FbGVtZW50KCdvcHRpb24nLCB7dmFsdWU6ICdtZWRpdW0nfSwgXCJNZWRpdW1cIiksIFxyXG4gICAgICAgICAgICAgICAgY3JlYXRlRG9tRWxlbWVudCgnb3B0aW9uJywge3ZhbHVlOiAnaGlnaCd9LCBcIkhpZ2hcIlxyXG4gICAgICAgICAgICAgICAgKSlcclxuICAgICAgICAgICAgY2FyZFByaW9yaXR5LnZhbHVlID0gdGhpcy50YXNrLnByaW9yaXR5XHJcbiAgICAgICAgICAgIC8vIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNuZXctY2FyZC1wcmlvcml0eScpLnZhbHVlID0gdGhpcy50YXNrLnByaW9yaXR5XHJcbiAgICAgICAgICAgIGNvbnN0IHByaW9yaXRpZXNEaXYgPSBjcmVhdGVEb21FbGVtZW50KCdkaXYnLHtpZDoncHJpb3JpdGllcyd9LHByaW9yaXR5TGFiZWwsIGNhcmRQcmlvcml0eSlcclxuICAgIFxyXG4gICAgICAgICAgICBjb25zdCBkZXRhaWxMYWJlbCA9IGNyZWF0ZURvbUVsZW1lbnQoJ2xhYmVsJyx7aWQ6XCJkZXRhaWwtbGFiZWxcIixmb3I6XCJuZXctY2FyZC1kZXRhaWxcIn0sJ0RldGFpbHM6JylcclxuICAgICAgICAgICAgLy8gY29uc3QgY2FyZERldGFpbCA9IGNyZWF0ZURvbUVsZW1lbnQoJ3RleHRhcmVhJywge2lkOiAnbmV3LWNhcmQtZGV0YWlsJywgY2xhc3M6J25ldy1jYXJkLWluZm8nLCB0eXBlOid0ZXh0J30pXHJcbiAgICAgICAgICAgIGNvbnN0IGNhcmREZXRhaWwgPSBjcmVhdGVEb21FbGVtZW50KCd0ZXh0YXJlYScsIHtpZDogJ2Z1bGwtY2FyZC1kZXRhaWwnLCBjbGFzczonZnVsbC1jYXJkLWluZm8nLCBjb250ZW50ZWRpdGFibGUgOnRydWV9LCB0aGlzLnRhc2suZGV0YWlsKVxyXG4gICAgICAgICAgICBjb25zdCBkZXRhaWxEaXYgPSBjcmVhdGVEb21FbGVtZW50KCdkaXYnLCB7aWQ6XCJkZXRhaWxcIn0sIGRldGFpbExhYmVsLCBjYXJkRGV0YWlsKVxyXG5cclxuICAgICAgICAgICAgY29uc3Qgc3RhdHVzTGFiZWwgPSBjcmVhdGVEb21FbGVtZW50KCdsYWJlbCcse2lkOlwic3RhdHVzLWxhYmVsXCIsZm9yOlwibmV3LWNhcmQtZGV0YWlsXCJ9LCdTdGF0dXM6JylcclxuICAgICAgICAgICAgY29uc3QgY2FyZFN0YXR1cyA9IGNyZWF0ZURvbUVsZW1lbnQoJ3NlbGVjdCcsIHtpZDogJ2Z1bGwtY2FyZC1zdGF0dXMnLCBjbGFzczonZnVsbC1jYXJkLWluZm8nLCBjb250ZW50ZWRpdGFibGUgOmZhbHNlfSwgXHJcbiAgICAgICAgICAgICAgICBjcmVhdGVEb21FbGVtZW50KCdvcHRpb24nLCB7dmFsdWU6ICdub3Qtc3RhcnRlZCd9LCBcIk5vdCBTdGFydGVkXCIpLCBcclxuICAgICAgICAgICAgICAgIGNyZWF0ZURvbUVsZW1lbnQoJ29wdGlvbicsIHt2YWx1ZTogJ2luLXByb2dyZXNzJ30sIFwiSW4gUHJvZ3Jlc3NcIiksIFxyXG4gICAgICAgICAgICAgICAgY3JlYXRlRG9tRWxlbWVudCgnb3B0aW9uJywge3ZhbHVlOiAnY29tcGxldGVkJ30sIFwiQ29tcGxldGVkXCJcclxuICAgICAgICAgICAgKSlcclxuICAgICAgICAgICAgY2FyZFN0YXR1cy52YWx1ZSA9IHRoaXMudGFzay5qb2JTdGF0dXNcclxuICAgICAgICAgICAgY29uc3Qgc3RhdHVzRGl2ID0gY3JlYXRlRG9tRWxlbWVudCgnZGl2Jywge2lkOlwic3RhdHVzXCJ9LCBzdGF0dXNMYWJlbCwgY2FyZFN0YXR1cylcclxuXHJcbiAgICAgICAgY29uc3QgY2FyZFRpdGxlID0gY3JlYXRlRG9tRWxlbWVudCgnaDInLCB7aWQ6ICdmdWxsLWNhcmQtdGl0bGUnLCBjbGFzczonZnVsbC1jYXJkLWluZm8nLCBjb250ZW50ZWRpdGFibGUgOnRydWV9LCB0aGlzLnRhc2sudGl0bGUpXHJcbiAgICAgICAgY29uc3QgY2FyZCA9IGNyZWF0ZURvbUVsZW1lbnQoJ2RpdicsIHtjbGFzczogJ2Z1bGwtY2FyZCd9LCBjYXJkVGl0bGUsIHN0YXR1c0RpdiwgZHVlRGF0ZURpdiwgcHJpb3JpdGllc0RpdiwgZGV0YWlsRGl2LCBjYXJkUmVtb3ZlQnV0dG9uKVxyXG4gICAgICAgIGNvbnN0IHJlbW92ZUJHID0gY3JlYXRlRG9tRWxlbWVudCgnZGl2Jywge2NsYXNzOiAncmVtb3ZlLWJnJywgaWQ6J3JlbW92ZS1mdWxsLWNhcmQtYmcnfSwgY2FyZClcclxuXHJcbiAgICAgICAgY29uc3QgY2FyZEFyZWEgPSBjcmVhdGVEb21FbGVtZW50KCdkaXYnLCB7aWQ6ICdjYXJkLWFyZWEnfSwgY2FyZCwgcmVtb3ZlQkcpXHJcbiAgICAgICAgcmVtb3ZlQkcuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnRhc2sudXBkYXRlVGl0bGUoY2FyZFRpdGxlLmlubmVySFRNTClcclxuICAgICAgICAgICAgdGhpcy50YXNrLnVwZGF0ZVN0YXR1cyhjYXJkU3RhdHVzLnZhbHVlKVxyXG4gICAgICAgICAgICB0aGlzLnRhc2sudXBkYXRlRHVlRGF0ZShjYXJkRHVlRGF0ZS52YWx1ZSlcclxuICAgICAgICAgICAgdGhpcy50YXNrLnVwZGF0ZURldGFpbChjYXJkRGV0YWlsLmlubmVySFRNTClcclxuICAgICAgICAgICAgdGhpcy50YXNrLnVwZGF0ZVByaW9yaXR5KGNhcmRQcmlvcml0eS52YWx1ZSlcclxuICAgICAgICAgICAgdGhpcy5kZWxldGVQYXJlbnQoZSlcclxuICAgICAgICAgICAgdGhpcy5wcm9qZWN0UmVuZGVyZXIucmVuZGVyQW5kVXBkYXRlUHJvamVjdCgpXHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMucHJvamVjdFJlbmRlcmVyLnByb2plY3QucmV0dXJuUHJvamVjdEpTT04oKSlcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICByZXR1cm4gY2FyZEFyZWFcclxuICAgIH1cclxuXHJcbiAgICBjcmVhdGVNaW5pbWl6ZWRDYXJkKCkge1xyXG5cclxuICAgICAgICBjb25zdCBjYXJkVGl0bGUgPSBjcmVhdGVEb21FbGVtZW50KCdoMScsIHtpZDogJ21pbmktY2FyZC10aXRsZScsIGNsYXNzOidtaW5pLWNhcmQtaW5mbyd9LCBgVGl0bGU6ICR7dGhpcy50YXNrLnRpdGxlfWApXHJcbiAgICAgICAgY29uc3QgY2FyZFN0YXR1cyA9IGNyZWF0ZURvbUVsZW1lbnQoJ2gyJywge2lkOiAnbWluaS1jYXJkLXN0YXR1cycsIGNsYXNzOidtaW5pLWNhcmQtaW5mbyd9KVxyXG4gICAgICAgIGNvbnN0IGNhcmREdWVEYXRlID0gY3JlYXRlRG9tRWxlbWVudCgnaDInLCB7aWQ6ICdtaW5pLWNhcmQtZHVlRGF0ZScsIGNsYXNzOidtaW5pLWNhcmQtaW5mbyd9LCBgRHVlOiAke3RoaXMudGFzay5kdWVEYXRlfWApXHJcbiAgICAgICAgY29uc3QgY2FyZFByaW9yaXR5ID0gY3JlYXRlRG9tRWxlbWVudCgnaDInLCB7aWQ6ICdtaW5pLWNhcmQtcHJpb3JpdHknLCBjbGFzczonbWluaS1jYXJkLWluZm8nfSwgYFByaW9yaXR5OiAkeyB0aGlzLnRhc2sucHJpb3JpdHkuY2hhckF0KDApLnRvVXBwZXJDYXNlKClcclxuICAgICAgICAgICAgKyB0aGlzLnRhc2sucHJpb3JpdHkuc2xpY2UoMSl9YClcclxuXHJcbiAgICAgICAgY29uc3QgY2FyZCA9IGNyZWF0ZURvbUVsZW1lbnQoXHJcbiAgICAgICAgICAgICdkaXYnLCBcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgY2xhc3M6ICdtaW5pLWNhcmQnLCBcclxuICAgICAgICAgICAgICAgIGlkOiB0aGlzLnRhc2sudGl0bGUucmVwbGFjZSgvXFxzKy9nLCAnLScpLCBcclxuICAgICAgICAgICAgICAgIGRyYWdnYWJsZTp0cnVlLFxyXG4gICAgICAgICAgICAgICAgLy8gb25kcmFnc3RhcnQ6ICdvbkRyYWdTdGFydChldmVudCknLFxyXG4gICAgICAgICAgICAgICAgLy8gb25kcmFnb3ZlcjogJ29uRHJhZ092ZXIoZXZlbnQpJ1xyXG4gICAgICAgICAgICB9LCBcclxuICAgICAgICAgICAgY2FyZFRpdGxlLCBjYXJkRHVlRGF0ZSwgY2FyZFByaW9yaXR5LCBjYXJkU3RhdHVzKVxyXG4gICAgICAgICAgICBjYXJkLnNldEF0dHJpYnV0ZSgnZGF0YS1wcm9qZWN0JywgdGhpcy5wcm9qZWN0UmVuZGVyZXIucHJvamVjdC5yZXR1cm5Qcm9qZWN0TmFtZVdpdGhOb1doaXRlc3BhY2UoKSlcclxuICAgICAgICAgICAgY2FyZC5zZXRBdHRyaWJ1dGUoJ2RhdGEtc3RhdHVzJywgdGhpcy50YXNrLnJldHVyblN0YXR1c0FzSHRtbERhdGEoKSlcclxuXHJcbiAgICAgICAgLy8gc2V0IGNsYXNzIGZvciBzdGF0dXNcclxuICAgICAgICBpZih0aGlzLnRhc2suam9iU3RhdHVzID09ICdub3Qtc3RhcnRlZCcpe2NhcmRTdGF0dXMuY2xhc3NMaXN0LmFkZCgnbm90LXN0YXJ0ZWQnKX1cclxuICAgICAgICBlbHNlIGlmKHRoaXMudGFzay5qb2JTdGF0dXMgPT0gJ2luLXByb2dyZXNzJyl7Y2FyZFN0YXR1cy5jbGFzc0xpc3QuYWRkKCdpbi1wcm9ncmVzcycpfVxyXG4gICAgICAgIGVsc2UgaWYodGhpcy50YXNrLmpvYlN0YXR1cyA9PSAnY29tcGxldGVkJyl7Y2FyZFN0YXR1cy5jbGFzc0xpc3QuYWRkKCdjb21wbGV0ZWQnKX1cclxuXHJcbiAgICAgICAgLy8gQWRkIGV2ZW50IGxpc3RlbmVycyBmb3IgY2xpY2sgdG8gb3BlbiwgZHJhZywgYW5kIGRyb3BcclxuICAgICAgICBjYXJkLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZCh0aGlzLmNyZWF0ZUZ1bGxDYXJkKHRoaXMucHJvamVjdFJlbmRlcmVyLnByb2plY3QsIHRoaXMudGFzaykpXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgY2FyZC5hZGRFdmVudExpc3RlbmVyKFwiZHJhZ3N0YXJ0XCIsIChlKSA9PiB7XHJcbiAgICAgICAgICAgIERyYWcub25EcmFnU3RhcnQoZSlcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIGNhcmQuYWRkRXZlbnRMaXN0ZW5lcihcImRyYWdlbmRcIiwgKGUpID0+IHtcclxuICAgICAgICAgICAgRHJhZy5vbkRyYWdFbmQoZSlcclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoKVxyXG4gICAgICAgIC8vIGxldCBjdXJyZW50RGF0ZSA9IGRhdGUuZ2V0RGF0ZSgpXHJcbiAgICAgICAgbGV0IGR1ZURhdGUgPSB0aGlzLnRhc2sucmV0dXJuRHVlRGF0ZSgpXHJcbiAgICAgICAgbGV0IGR1ZURhdGVUaW1lciA9IERhdGVGTlMuZGlmZmVyZW5jZUluRGF5cyhkdWVEYXRlLCBkYXRlKTtcclxuXHJcbiAgICAgICAgaWYoZHVlRGF0ZVRpbWVyID49IDcpe2NhcmREdWVEYXRlLmNsYXNzTGlzdC5hZGQoJ2hhdmVUaW1lJyl9XHJcbiAgICAgICAgZWxzZSBpZigoZHVlRGF0ZVRpbWVyIDwgNykgJiYgKGR1ZURhdGVUaW1lciA+PSAyKSl7Y2FyZER1ZURhdGUuY2xhc3NMaXN0LmFkZCgnc2hvdWxkRG8nKX1cclxuICAgICAgICBlbHNlIGlmKGR1ZURhdGVUaW1lciA8IDIpe2NhcmREdWVEYXRlLmNsYXNzTGlzdC5hZGQoJ3VyZ2VudCcpfVxyXG5cclxuICAgICAgICBpZih0aGlzLnRhc2sucHJpb3JpdHkgPT0gJ2xvdycpe2NhcmRQcmlvcml0eS5jbGFzc0xpc3QuYWRkKCdoYXZlVGltZScpfVxyXG4gICAgICAgIGVsc2UgaWYodGhpcy50YXNrLnByaW9yaXR5ID09ICdtZWRpdW0nKXtjYXJkUHJpb3JpdHkuY2xhc3NMaXN0LmFkZCgnc2hvdWxkRG8nKX1cclxuICAgICAgICBlbHNlIGlmKHRoaXMudGFzay5wcmlvcml0eSA9PSAnaGlnaCcpe2NhcmRQcmlvcml0eS5jbGFzc0xpc3QuYWRkKCd1cmdlbnQnKX1cclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhjYXJkKVxyXG4gICAgICAgIHJldHVybiBjYXJkXHJcbiAgICB9XHJcblxyXG4gICAgZGVsZXRlUGFyZW50KGUpIHtcclxuICAgICAgICBlLmN1cnJlbnRUYXJnZXQucGFyZW50Tm9kZS5yZW1vdmUoKTtcclxuICAgIH1cclxuXHJcbiAgICBkZWxldGVUYXJnZXQodGFyZ2V0KSB7XHJcbiAgICAgICAgdGFyZ2V0LnJlbW92ZSgpXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuU3RhdHVzKCl7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudGFzay5qb2JTdGF0dXNcclxuICAgIH1cclxufVxyXG4iLCJpbXBvcnQgeyBjcmVhdGVDYXJkIH0gZnJvbSBcIi4vY2FyZERpc3BsYXlcIlxyXG5cclxuZXhwb3J0IGNsYXNzIFRvZG9JdGVtIHtcclxuICAgIC8vIGpvYlN0YXR1cyA9IDA7XHJcbiAgICBjb25zdHJ1Y3Rvcih0aXRsZSwgam9iU3RhdHVzLCBwcmlvcml0eSwgZHVlRGF0ZSwgZGV0YWlsKXtcclxuICAgICAgICB0aGlzLnRpdGxlID0gdGl0bGUsXHJcbiAgICAgICAgdGhpcy5qb2JTdGF0dXMgPSBqb2JTdGF0dXMsXHJcbiAgICAgICAgdGhpcy5wcmlvcml0eSA9IHByaW9yaXR5LFxyXG4gICAgICAgIHRoaXMuZHVlRGF0ZSA9IGR1ZURhdGUsXHJcbiAgICAgICAgdGhpcy5kZXRhaWwgPSBkZXRhaWxcclxuXHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc3RhdHVzQ2hhbmdlJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGlkID0gZXZlbnQuZGV0YWlsLmlkO1xyXG4gICAgICAgICAgICBjb25zdCBuZXdTdGF0dXMgPSBldmVudC5kZXRhaWwubmV3U3RhdHVzO1xyXG4gICAgICAgICAgICBpZiAoaWQgPT09IHRoaXMudGl0bGUpIHsgLy8gQXNzdW1pbmcgdGl0bGUgaXMgdW5pcXVlIGZvciBlYWNoIFRvZG9JdGVtXHJcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVN0YXR1cyhuZXdTdGF0dXMpXHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgU3RhdHVzIG9mIFRvZG9JdGVtICR7dGhpcy50aXRsZX0gY2hhbmdlZCB0byAke3RoaXMuam9iU3RhdHVzfWApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlU3RhdHVzKG5ld1N0YXR1cykge1xyXG4gICAgICAgIGlmKHRoaXMuam9iU3RhdHVzICE9IG5ld1N0YXR1cykge1xyXG4gICAgICAgICAgICB0aGlzLmpvYlN0YXR1cyA9IG5ld1N0YXR1c1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmpvYlN0YXR1cylcclxuICAgICAgICB9OyBcclxuICAgIH1cclxuICAgIFxyXG4gICAgdXBkYXRlRGV0YWlsKG5ld0RldGFpbCkge1xyXG4gICAgICAgIHRoaXMuZGV0YWlsID0gbmV3RGV0YWlsXHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlVGl0bGUobmV3VGl0bGUpIHtcclxuICAgICAgICB0aGlzLnRpdGxlID0gbmV3VGl0bGVcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGVQcmlvcml0eShuZXdQcmlvcml0eSl7XHJcbiAgICAgICAgdGhpcy5wcmlvcml0eSA9IG5ld1ByaW9yaXR5XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlRHVlRGF0ZShuZXdEYXRlKXtcclxuICAgICAgICB0aGlzLmR1ZURhdGUgPSBuZXdEYXRlXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuVGl0bGUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudGl0bGVcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm5TdGF0dXMoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuam9iU3RhdHVzXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuU3RhdHVzQXNIdG1sRGF0YSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5qb2JTdGF0dXMucmVwbGFjZSgvXFxzKy9nLCAnLScpXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuUHJpb3JpdHkoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucHJpb3JpdHlcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm5EdWVEYXRlKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmR1ZURhdGVcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm5EZXRhaWwoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZGV0YWlsXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuSXRlbUpTT04oKSB7XHJcbiAgICAgICAgcmV0dXJuIHsndGl0bGUnOiB0aGlzLnJldHVyblRpdGxlKCksXHJcbiAgICAgICAgICdzdGF0dXMnOiB0aGlzLnJldHVyblN0YXR1cygpLFxyXG4gICAgICAgICdkdWVEYXRlJzogdGhpcy5yZXR1cm5EdWVEYXRlKCksXHJcbiAgICAgICAgJ3ByaW9yaXR5JzogdGhpcy5yZXR1cm5Qcmlvcml0eSgpLFxyXG4gICAgICAgICdkZXRhaWwnOiB0aGlzLnJldHVybkRldGFpbCgpfVxyXG4gICAgfVxyXG59XHJcblxyXG4iLCJpbXBvcnQgeyBFcnJvckxvZyB9IGZyb20gXCIuL2Vycm9yTG9nZ2VyXCI7XHJcbmNvbnN0IEVycm9yTG9nZ2VyID0gbmV3IEVycm9yTG9nKClcclxuXHJcbmV4cG9ydCBjbGFzcyBQcm9qZWN0SGFuZGxlciB7XHJcbiAgICBjb25zdHJ1Y3RvcihzaWRlYmFyKXtcclxuICAgICAgICB0aGlzLnByb2plY3RMaXN0ID0gW107XHJcbiAgICAgICAgdGhpcy5zaWRlYmFyID0gc2lkZWJhclxyXG4gICAgfVxyXG5cclxuICAgIGFkZFByb2plY3QocHJvamVjdE9iaikge1xyXG4gICAgICAgIGNvbnN0IGZvdW5kID0gdGhpcy5wcm9qZWN0TGlzdC5zb21lKHBybyA9PiBwcm8ubmFtZSA9PT0gcHJvamVjdE9iai5uYW1lKTtcclxuICAgICAgICBpZiAoIWZvdW5kKSAodGhpcy5wcm9qZWN0TGlzdC5wdXNoKHByb2plY3RPYmopKTtcclxuICAgICAgICBlbHNlIHtFcnJvckxvZ2dlci50aHJvd0Vycm9yKCdQcm9qZWN0IEFscmVhZHkgRXhpc3RzJyl9XHJcbiAgICB9XHJcblxyXG4gICAgcmVtb3ZlUHJvamVjdChwcm9qZWN0TmFtZSkge1xyXG4gICAgICAgIHRoaXMucHJvamVjdExpc3QgPSB0aGlzLnByb2plY3RMaXN0LmZpbHRlcigocHJvKSA9PiBcclxuICAgICAgICAgICAgcHJvLm5hbWUgIT09IHByb2plY3ROYW1lXHJcbiAgICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm5BbGxQcm9qZWN0VGl0bGVzKCkge1xyXG4gICAgICAgIGNvbnN0IG91dCA9IFtdXHJcbiAgICAgICAgZm9yKGNvbnN0IHByb2plY3Qgb2YgdGhpcy5wcm9qZWN0TGlzdCkge1xyXG4gICAgICAgICAgICBvdXQucHVzaChwcm9qZWN0Lm5hbWUpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBvdXRcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm5BbGxQcm9qZWN0cygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5wcm9qZWN0TGlzdFxyXG4gICAgfVxyXG5cclxuICAgIHJldHVyblNpbmdsZVByb2plY3QocHJvamVjdE5hbWUpIHtcclxuICAgICAgICBsZXQgaW5kZXhlcyA9IFtdLCBpO1xyXG4gICAgICAgIGZvcihpID0gMDsgaSA8IHRoaXMucHJvamVjdExpc3QubGVuZ3RoOyBpKyspXHJcbiAgICAgICAgICAgIGlmICh0aGlzLnByb2plY3RMaXN0W2ldLm5hbWUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhwcm9qZWN0TmFtZS50b0xvd2VyQ2FzZSgpKSlcclxuICAgICAgICAgICAgICAgIGluZGV4ZXMucHVzaChpKTtcclxuICAgICAgICAgICAgLy8gbWlnaHQgaGF2ZSB0byB1bmRvIHN0cmluZ2lmeVxyXG4gICAgICAgIHJldHVybiB0aGlzLnByb2plY3RMaXN0W2luZGV4ZXNdO1xyXG4gICAgfVxyXG5cclxufSIsImV4cG9ydCBjbGFzcyBFcnJvckxvZyB7XHJcbiAgICBjb25zdHJ1Y3Rvcigpe1xyXG5cclxuICAgIH1cclxuXHJcbiAgICB0aHJvd0Vycm9yKG1lc3NhZ2UpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSlcclxuICAgIH1cclxufSIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9wcm9qZWN0QXJlYS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3Byb2plY3RBcmVhLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCB7IGNyZWF0ZURvbUVsZW1lbnQgfSBmcm9tIFwiLi9jb21wb25lbnRNYWtlcnNcIlxyXG5pbXBvcnQgeyBDYXJkUmVuZGVyZXJ9IGZyb20gXCIuL2NhcmREaXNwbGF5XCJcclxuaW1wb3J0IHsgVG9kb0l0ZW0gfSBmcm9tIFwiLi90b2RvT2JqXCI7XHJcbmltcG9ydCAnLi9zdHlsZXMvcHJvamVjdEFyZWEuY3NzJztcclxuaW1wb3J0ICogYXMgRHJhZyBmcm9tICcuL2RyYWdGdW5jdGlvbnMuanMnXHJcbi8vIGltcG9ydCB7IGNyZWF0ZSB9IGZyb20gXCJkb21haW5cIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBQcm9qZWN0UmVuZGVyZXIge1xyXG4gICAgY29uc3RydWN0b3IocHJvamVjdEhhbmRsZXIsIHByb2plY3QsIHNpZGViYXIpe1xyXG4gICAgICAgIHRoaXMucHJvamVjdCA9IHByb2plY3RcclxuICAgICAgICB0aGlzLmhhbmRsZXIgPSBwcm9qZWN0SGFuZGxlclxyXG4gICAgICAgIHRoaXMuc2lkZWJhciA9IHNpZGViYXJcclxuXHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc3RhdHVzQ2hhbmdlJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGlkID0gZXZlbnQuZGV0YWlsLmlkLnJlcGxhY2VBbGwoJy0nLCAnICcpLnRvTG93ZXJDYXNlKCk7XHJcbiAgICAgICAgICAgIGNvbnN0IG5ld1N0YXR1cyA9IGV2ZW50LmRldGFpbC5uZXdTdGF0dXM7XHJcbiAgICAgICAgICAgIGNvbnN0IHRhc2tUaXRsZXMgPSB0aGlzLnByb2plY3QucmV0dXJuQWxsVGFza1RpdGxlcygpXHJcbiAgICAgICAgICAgIHRhc2tUaXRsZXMuZm9yRWFjaCgodGl0bGUpID0+IHRpdGxlLnRvTG93ZXJDYXNlKCkpXHJcbiAgICAgICAgICAgIGlmICh0YXNrVGl0bGVzLmluY2x1ZGVzKGlkKSkgeyAvLyBBc3N1bWluZyB0aXRsZSBpcyB1bmlxdWUgZm9yIGVhY2ggVG9kb0l0ZW1cclxuICAgICAgICAgICAgICAgIHRoaXMucHJvamVjdC5maWx0ZXJUYXNrcyhpZCkudXBkYXRlU3RhdHVzKG5ld1N0YXR1cylcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBjbGVhckFsbENoaWxkcmVuKHRhcmdldCl7XHJcbiAgICAgICAgdGFyZ2V0LmlubmVySFRNTCA9ICcnXHJcbiAgICAgICAgLy8gd2hpbGUgKHRhcmdldC5jaGlsZE5vZGVzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAvLyAgICAgdGFyZ2V0LnJlbW92ZUNoaWxkKHRhcmdldC5sYXN0Q2hpbGQpO1xyXG4gICAgICAgIC8vIH1cclxuICAgIH1cclxuXHJcbiAgICByZW5kZXJBbmRVcGRhdGVQcm9qZWN0KCkgIHsgICAgICAgIFxyXG4gICAgICAgIGNvbnN0IHByb2plY3RJZCA9IHRoaXMucHJvamVjdC5yZXR1cm5Qcm9qZWN0TmFtZVdpdGhOb1doaXRlc3BhY2UoKVxyXG4gICAgICAgIGNvbnN0IGNvbHVtbnNUb1VwZGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoYCMke3Byb2plY3RJZH0gLnByb2plY3Qtc3RhdHVzLWNvbGApXHJcblxyXG4gICAgICAgIGNvbHVtbnNUb1VwZGF0ZS5mb3JFYWNoKChjb2wpID0+IHtcclxuICAgICAgICAgICAgaWYoY29sLmhhc0NoaWxkTm9kZXMoKSl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNsZWFyQWxsQ2hpbGRyZW4oY29sKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAvLyB0aGlzLmNyZWF0ZVByb2plY3RET00oKVxyXG4gICAgICAgIHRoaXMucGxhY2VUYXNrQ2FyZHNJbnRvUHJvamVjdERPTSgpXHJcbiAgICB9XHJcblxyXG4gICAgc3VibWl0TmV3VGFzaygpIHtcclxuICAgICAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNuZXctY2FyZC10aXRsZScpLnZhbHVlXHJcbiAgICAgICAgY29uc3QgZHVlZGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNuZXctY2FyZC1kdWVEYXRlJykudmFsdWVcclxuICAgICAgICBjb25zdCBwcmlvcml0eSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNuZXctY2FyZC1wcmlvcml0eScpLnZhbHVlXHJcbiAgICAgICAgY29uc3QgZGV0YWlsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI25ldy1jYXJkLWRldGFpbCcpLnZhbHVlXHJcblxyXG4gICAgICAgIGNvbnN0IHN0YXR1cyA9ICdub3Qtc3RhcnRlZCdcclxuICAgICAgICBsZXQgbmV3VGFzayA9IG5ldyBUb2RvSXRlbSh0aXRsZSwgc3RhdHVzLCBwcmlvcml0eSwgZHVlZGF0ZSwgZGV0YWlsKVxyXG4gICAgICAgIGNvbnNvbGUubG9nKG5ld1Rhc2sucmV0dXJuRHVlRGF0ZSgpKVxyXG4gICAgICAgIHRoaXMucHJvamVjdC5hZGRUYXNrKG5ld1Rhc2spXHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyVGFza0NhcmRzKCl7XHJcbiAgICAgICAgY29uc3QgbGlzdE9mVGFza3NJblByb2plY3QgPSB0aGlzLnByb2plY3QucmV0dXJuQWxsVGFza3MoKVxyXG5cclxuICAgICAgICBsZXQgY2FyZEFycmF5ID0gW11cclxuICAgICAgICBmb3IobGV0IHRhc2sgb2YgbGlzdE9mVGFza3NJblByb2plY3QpIHtcclxuICAgICAgICAgICAgbGV0IENhcmRDcmVhdGVyT2JqID0gbmV3IENhcmRSZW5kZXJlcih0aGlzLCB0YXNrKVxyXG4gICAgICAgICAgICBjYXJkQXJyYXkucHVzaChDYXJkQ3JlYXRlck9iailcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGNhcmRBcnJheVxyXG4gICAgfVxyXG5cclxuICAgIHBsYWNlVGFza0NhcmRzSW50b1Byb2plY3RET00oKXtcclxuXHJcbiAgICAgICAgbGV0IHRhc2tzID0gdGhpcy5yZW5kZXJUYXNrQ2FyZHMoKVxyXG5cclxuICAgICAgICBmb3IobGV0IHRhc2sgb2YgdGFza3Mpe1xyXG4gICAgICAgICAgICBsZXQgc3RhdHVzID0gdGFzay5yZXR1cm5TdGF0dXMoKVxyXG4gICAgICAgICAgICBsZXQgcHJvamVjdE5hbWVGb3JIVE1MID0gdGhpcy5wcm9qZWN0LnJldHVyblByb2plY3ROYW1lV2l0aE5vV2hpdGVzcGFjZSgpXHJcbiAgICAgICAgICAgIGxldCB0YXJnZXRJRCA9IGAjJHtzdGF0dXN9LSR7cHJvamVjdE5hbWVGb3JIVE1MfWBcclxuICAgICAgICAgICAgbGV0IGNvbHVtbkZvclRhc2tDYXJkQnlQcm9ncmVzcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0SUQpXHJcbiAgICAgICAgICAgIGNvbHVtbkZvclRhc2tDYXJkQnlQcm9ncmVzcy5hcHBlbmRDaGlsZCh0YXNrLmNyZWF0ZU1pbmltaXplZENhcmQoKSlcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0UHJvamVjdCgpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLnByb2plY3RcclxuICAgIH0gXHJcblxyXG4gICAgdXBkYXRlSURzVG9OZXdQcm9qZWN0TmFtZShvbGROYW1lLCBuZXdOYW1lKXtcclxuICAgICAgICBjb25zdCBwcm9qZWN0RE9NVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjJHtvbGROYW1lfS10aXRsZWApXHJcblxyXG4gICAgICAgIGxldCBlZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgIyR7dGhpcy5wcm9qZWN0LnJldHVyblByb2plY3ROYW1lV2l0aE5vV2hpdGVzcGFjZSgpfS1lZGl0YClcclxuICAgICAgICBpZihlZGl0QnV0dG9uLmlubmVySFRNTCAhPSAnXFx1MjcwRScpIGVkaXRCdXR0b24uaW5uZXJIVE1MID0gJ1xcdTI3MEUnXHJcblxyXG4gICAgICAgIGNvbnN0IHByb2plY3RET00gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjJHtvbGROYW1lfWApXHJcbiAgICAgICAgcHJvamVjdERPTS5zZXRBdHRyaWJ1dGUoJ2lkJywgbmV3TmFtZSlcclxuICAgICAgICBcclxuICAgICAgICBjb25zdCBwcm9qZWN0U3RhdHVzV3JhcHBlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNjb2x1bW5zLSR7b2xkTmFtZX1gKVxyXG4gICAgICAgIHByb2plY3RTdGF0dXNXcmFwcGVyLnNldEF0dHJpYnV0ZSgnaWQnLCBgI2NvbHVtbnMtJHtuZXdOYW1lfWApXHJcbiAgICAgICAgY29uc3QgcHJvamVjdE5vdFN0YXJ0ZWRDb2x1bW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjbm90LXN0YXJ0ZWQtJHtvbGROYW1lfWApXHJcbiAgICAgICAgcHJvamVjdE5vdFN0YXJ0ZWRDb2x1bW4uc2V0QXR0cmlidXRlKCdpZCcsIGBub3Qtc3RhcnRlZC0ke25ld05hbWV9YClcclxuICAgICAgICBjb25zdCBwcm9qZWN0SW5Qcm9ncmVzc0NvbHVtbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNpbi1wcm9ncmVzcy0ke29sZE5hbWV9YClcclxuICAgICAgICBwcm9qZWN0SW5Qcm9ncmVzc0NvbHVtbi5zZXRBdHRyaWJ1dGUoJ2lkJywgYGluLXByb2dyZXNzLSR7bmV3TmFtZX1gKVxyXG4gICAgICAgIGNvbnN0IHByb2plY3RDb21wbGV0ZWRDb2x1bW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjY29tcGxldGVkLSR7b2xkTmFtZX1gKVxyXG4gICAgICAgIHByb2plY3RDb21wbGV0ZWRDb2x1bW4uc2V0QXR0cmlidXRlKCdpZCcsIGBjb21wbGV0ZWQtJHtuZXdOYW1lfWApXHJcblxyXG4gICAgICAgIHByb2plY3RET01UaXRsZS5zZXRBdHRyaWJ1dGUoJ2lkJywgYCR7bmV3TmFtZX0tdGl0bGVgKVxyXG4gICAgICAgIGVkaXRCdXR0b24uc2V0QXR0cmlidXRlKCdpZCcsIGAke25ld05hbWV9LWVkaXRgKVxyXG5cclxuICAgICAgICBjb25zdCBwcm9qZWN0RE9NRGVsZXRlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgIyR7b2xkTmFtZX0tZGVsZXRlYClcclxuICAgICAgICBwcm9qZWN0RE9NRGVsZXRlQnV0dG9uLnNldEF0dHJpYnV0ZSgnaWQnLCBgJHtuZXdOYW1lfS1kZWxldGVgKVxyXG4gICAgICAgIGNvbnN0IHByb2plY3RET01Db2xsYXBzZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke29sZE5hbWV9LWNvbGxhcHNlYClcclxuICAgICAgICBwcm9qZWN0RE9NQ29sbGFwc2VCdXR0b24uc2V0QXR0cmlidXRlKCdpZCcsIGAke25ld05hbWV9LWNvbGxhcHNlYClcclxuXHJcbiAgICAgICAgaWYocHJvamVjdE5vdFN0YXJ0ZWRDb2x1bW4uaGFzQ2hpbGROb2RlcygpIHx8IHByb2plY3RJblByb2dyZXNzQ29sdW1uLmhhc0NoaWxkTm9kZXMoKSB8fCBwcm9qZWN0Q29tcGxldGVkQ29sdW1uLmhhc0NoaWxkTm9kZXMoKSl7XHJcbiAgICAgICAgICAgIHByb2plY3ROb3RTdGFydGVkQ29sdW1uLmNoaWxkTm9kZXMuZm9yRWFjaChjYXJkID0+IGNhcmQuZGF0YXNldC5wcm9qZWN0ID0gbmV3TmFtZSlcclxuICAgICAgICAgICAgcHJvamVjdEluUHJvZ3Jlc3NDb2x1bW4uY2hpbGROb2Rlcy5mb3JFYWNoKGNhcmQgPT4gY2FyZC5kYXRhc2V0LnByb2plY3QgPSBuZXdOYW1lKVxyXG4gICAgICAgICAgICBwcm9qZWN0Q29tcGxldGVkQ29sdW1uLmNoaWxkTm9kZXMuZm9yRWFjaChjYXJkID0+IGNhcmQuZGF0YXNldC5wcm9qZWN0ID0gbmV3TmFtZSkgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucHJvamVjdC51cGRhdGVQcm9qZWN0TmFtZShuZXdOYW1lKVxyXG4gICAgICAgIHRoaXMuc2lkZWJhci5kaXNwbGF5UHJvamVjdHMoKVxyXG4gICAgfVxyXG5cclxuICAgIGNyZWF0ZU5ld1Rhc2tGb3JtKCkge1xyXG4gICAgICAgIGNvbnN0IGNhcmRUaXRsZSA9IGNyZWF0ZURvbUVsZW1lbnQoXHJcbiAgICAgICAgICAgICdpbnB1dCcsIFxyXG4gICAgICAgICAgICB7aWQ6ICduZXctY2FyZC10aXRsZScsIGNsYXNzOiduZXctY2FyZC1pbmZvJywgdHlwZTondGV4dCcsIHBsYWNlaG9sZGVyOlwiTmV3IFRhc2tcIn0pXHJcblxyXG4gICAgICAgIGNvbnN0IGR1ZURhdGVMYWJlbCA9IGNyZWF0ZURvbUVsZW1lbnQoXHJcbiAgICAgICAgICAgICdsYWJlbCcsXHJcbiAgICAgICAgICAgIHtpZDpcImR1ZURhdGUtbGFiZWxcIixcclxuICAgICAgICAgICAgZm9yOlwibmV3LWNhcmQtZHVlRGF0ZVwifSxcclxuICAgICAgICAgICAgXCJEdWU6IFwiXHJcbiAgICAgICAgKVxyXG5cclxuICAgICAgICBjb25zdCBjYXJkRHVlRGF0ZSA9IGNyZWF0ZURvbUVsZW1lbnQoXHJcbiAgICAgICAgICAgICdpbnB1dCcsIFxyXG4gICAgICAgICAgICB7aWQ6ICduZXctY2FyZC1kdWVEYXRlJywgY2xhc3M6J25ldy1jYXJkLWluZm8nLCB0eXBlOidkYXRlJ30pXHJcbiAgICAgICBcclxuICAgICAgICBjb25zdCBkdWVEYXRlRGl2ID0gY3JlYXRlRG9tRWxlbWVudChcclxuICAgICAgICAgICAgJ2RpdicsXHJcbiAgICAgICAgICAgIHtpZDonZHVlLWRhdGUnfSxcclxuICAgICAgICAgICAgZHVlRGF0ZUxhYmVsLCBjYXJkRHVlRGF0ZVxyXG4gICAgICAgIClcclxuICAgICAgICBcclxuICAgICAgICBjb25zdCBwcmlvcml0eUxhYmVsID0gY3JlYXRlRG9tRWxlbWVudChcclxuICAgICAgICAgICAgJ2xhYmVsJyxcclxuICAgICAgICAgICAge2lkOidwcmlvcml0eS1sYWJlbCcsXHJcbiAgICAgICAgICAgIGZvcjpcIm5ldy1jYXJkLXByaW9yaXR5XCJ9LFxyXG4gICAgICAgICAgICAnUHJpb3JpdHk6J1xyXG4gICAgICAgIClcclxuXHJcbiAgICAgICAgY29uc3QgcHJpb3JpdGllcyA9IGNyZWF0ZURvbUVsZW1lbnQoXHJcbiAgICAgICAgICAgICdzZWxlY3QnLCBcclxuICAgICAgICAgICAge2lkOiduZXctY2FyZC1wcmlvcml0eSd9LCBcclxuICAgICAgICAgICAgY3JlYXRlRG9tRWxlbWVudCgnb3B0aW9uJywge3ZhbHVlOiAnbG93J30sIFwiTG93XCIpLCBcclxuICAgICAgICAgICAgY3JlYXRlRG9tRWxlbWVudCgnb3B0aW9uJywge3ZhbHVlOiAnbWVkaXVtJ30sIFwiTWVkaXVtXCIpLCBcclxuICAgICAgICAgICAgY3JlYXRlRG9tRWxlbWVudCgnb3B0aW9uJywge3ZhbHVlOiAnaGlnaCd9LCBcIkhpZ2hcIlxyXG4gICAgICAgICAgICApKVxyXG5cclxuICAgICAgICBjb25zdCBwcmlvcml0aWVzRGl2ID0gY3JlYXRlRG9tRWxlbWVudChcclxuICAgICAgICAgICAgJ2RpdicsXHJcbiAgICAgICAgICAgIHtpZDoncHJpb3JpdGllcyd9LFxyXG4gICAgICAgICAgICBwcmlvcml0eUxhYmVsLCBwcmlvcml0aWVzXHJcbiAgICAgICAgKVxyXG5cclxuICAgICAgICBjb25zdCBkZXRhaWxMYWJlbCA9IGNyZWF0ZURvbUVsZW1lbnQoXHJcbiAgICAgICAgICAgICdsYWJlbCcsXHJcbiAgICAgICAgICAgIHtpZDpcImRldGFpbC1sYWJlbFwiLFxyXG4gICAgICAgICAgICBmb3I6XCJuZXctY2FyZC1kZXRhaWxcIn0sXHJcbiAgICAgICAgICAgICdEZXRhaWxzOidcclxuICAgICAgICApXHJcblxyXG4gICAgICAgIGNvbnN0IGNhcmREZXRhaWwgPSBjcmVhdGVEb21FbGVtZW50KFxyXG4gICAgICAgICAgICAndGV4dGFyZWEnLCBcclxuICAgICAgICAgICAge2lkOiAnbmV3LWNhcmQtZGV0YWlsJywgY2xhc3M6J25ldy1jYXJkLWluZm8nLCB0eXBlOid0ZXh0J30pXHJcblxyXG4gICAgICAgIGNvbnN0IGRldGFpbERpdiA9IGNyZWF0ZURvbUVsZW1lbnQoXHJcbiAgICAgICAgICAgICdkaXYnLFxyXG4gICAgICAgICAgICB7aWQ6XCJkZXRhaWxcIn0sXHJcbiAgICAgICAgICAgIGRldGFpbExhYmVsLFxyXG4gICAgICAgICAgICBjYXJkRGV0YWlsXHJcbiAgICAgICAgKVxyXG5cclxuICAgICAgICBjb25zdCBjYXJkU3VibWl0QnV0dG9uID0gY3JlYXRlRG9tRWxlbWVudChcclxuICAgICAgICAgICAgJ2J1dHRvbicsIFxyXG4gICAgICAgICAgICB7aWQ6ICduZXctY2FyZC1jcmVhdGUtYnV0dG9uJywgY2xhc3M6ICduZXctY2FyZC1pbmZvJ30sIFxyXG4gICAgICAgICAgICAnQ3JlYXRlIFRhc2snKVxyXG4gICAgICAgIGNvbnN0IGNhcmQgPSBjcmVhdGVEb21FbGVtZW50KFxyXG4gICAgICAgICAgICAnZGl2JywgXHJcbiAgICAgICAgICAgIHtjbGFzczogJ2Z1bGwtY2FyZCd9LFxyXG4gICAgICAgICAgICAgY2FyZFRpdGxlLCBkZXRhaWxEaXYsIHByaW9yaXRpZXNEaXYsIGR1ZURhdGVEaXYsIGNhcmRTdWJtaXRCdXR0b24pXHJcblxyXG4gICAgICAgIGNvbnN0IHJlbW92ZUJHID0gY3JlYXRlRG9tRWxlbWVudChcclxuICAgICAgICAgICAgJ2RpdicsIFxyXG4gICAgICAgICAgICB7Y2xhc3M6ICdyZW1vdmUtYmcnLCBpZDoncmVtb3ZlLWZ1bGwtY2FyZC1iZyd9LCBcclxuICAgICAgICAgICAgY2FyZClcclxuICAgIFxyXG4gICAgICAgIGNvbnN0IGNhcmRBcmVhID0gY3JlYXRlRG9tRWxlbWVudChcclxuICAgICAgICAgICAgJ2RpdicsIFxyXG4gICAgICAgICAgICB7aWQ6ICdjYXJkLWFyZWEnfSwgXHJcbiAgICAgICAgICAgIGNhcmQsIHJlbW92ZUJHKVxyXG5cclxuICAgICAgICByZW1vdmVCRy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpe1xyXG4gICAgICAgICAgICBlLmN1cnJlbnRUYXJnZXQucGFyZW50Tm9kZS5yZW1vdmUoKTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBjYXJkU3VibWl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5zdWJtaXROZXdUYXNrKHRoaXMucHJvamVjdCksIFxyXG4gICAgICAgICAgICB0aGlzLnJlbmRlckFuZFVwZGF0ZVByb2plY3QoKVxyXG4gICAgICAgICAgICBlLmN1cnJlbnRUYXJnZXQucGFyZW50Tm9kZS5wYXJlbnROb2RlLnJlbW92ZSgpXHJcbiAgICAgICAgfSlcclxuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZChjYXJkQXJlYSlcclxuICAgIH1cclxuXHJcbiAgICBjcmVhdGVQcm9qZWN0RE9NKG5ld0RPTSl7XHJcbiAgICAgICAgY29uc3QgaGVhZGVyID0gdGhpcy5yZW5kZXJQcm9qZWN0SGVhZGVyKClcclxuICAgICAgICBjb25zdCBwcm9qZWN0Q29sdW1ucyA9IHRoaXMucmVuZGVyUHJvamVjdFRhc2tDb2x1bW5zKG5ld0RPTSlcclxuXHJcblxyXG4gICAgfVxyXG4gICAgXHJcbiAgICByZW5kZXJQcm9qZWN0SGVhZGVyKCl7XHJcbiAgICAgICAgY29uc3QgcHJvaiA9IHRoaXMucHJvamVjdFxyXG5cclxuICAgICAgICBjb25zdCBuZXdUYXNrQnV0dG9uID0gY3JlYXRlRG9tRWxlbWVudCgnYnV0dG9uJywgXHJcbiAgICAgICAgICAgIHtjbGFzczonbmV3LXRhc2stYnV0dG9uJ30sIFxyXG4gICAgICAgICAgICAnKycpXHJcblxyXG4gICAgICAgIG5ld1Rhc2tCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuY3JlYXRlTmV3VGFza0Zvcm0odGhpcy5wcm9qZWN0KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8gSGVhZGVyXHJcbiAgICAgICAgY29uc3QgcHJvamVjdERPTVRpdGxlID0gY3JlYXRlRG9tRWxlbWVudChcclxuICAgICAgICAgICAgJ2RpdicsXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGNsYXNzOidwcm9qZWN0LW5hbWUnLCBcclxuICAgICAgICAgICAgICAgIGlkOiBgJHt0aGlzLnByb2plY3QucmV0dXJuUHJvamVjdE5hbWVXaXRoTm9XaGl0ZXNwYWNlKCl9LXRpdGxlYCwgXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHRoaXMucHJvamVjdC5uYW1lXHJcbiAgICAgICAgICAgIClcclxuXHJcbiAgICAgICAgY29uc3QgcHJvamVjdERPTUVkaXRUaXRsZUJ1dHRvbiA9IGNyZWF0ZURvbUVsZW1lbnQoXHJcbiAgICAgICAgICAgICdidXR0b24nLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBjbGFzczoncHJvamVjdC1uYW1lLWNoYW5nZS1idXR0b24nLCBcclxuICAgICAgICAgICAgICAgIGlkOiBgJHt0aGlzLnByb2plY3QucmV0dXJuUHJvamVjdE5hbWVXaXRoTm9XaGl0ZXNwYWNlKCl9LWVkaXRgXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICdcXHUyNzBFJ1xyXG4gICAgICAgICAgICApXHJcbiAgICAgICAgZnVuY3Rpb24gZWRpdFRpdGxlKGUpe1xyXG4gICAgICAgICAgICAgICAgcHJvamVjdERPTVRpdGxlLnNldEF0dHJpYnV0ZSgnY29udGVudGVkaXRhYmxlJywgdHJ1ZSlcclxuICAgICAgICAgICAgICAgIHByb2plY3RET01UaXRsZS5mb2N1cygpIFxyXG4gICAgICAgICAgICAgICAgZS5pbm5lckhUTUwgPSAnXFx1RDgzRFxcdURDQkUnXHJcbiAgICAgICAgICAgICAgICBlLmNsYXNzTGlzdC5hZGQoJ3NhdmUnKVxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBmdW5jdGlvbiBzYXZlVGl0bGUoZSl7XHJcbiAgICAgICAgICAgICAgICBlLmlubmVySFRNTCA9ICdcXHUyNzBFJ1xyXG4gICAgICAgICAgICAgICAgcHJvamVjdERPTVRpdGxlLnNldEF0dHJpYnV0ZSgnY29udGVudGVkaXRhYmxlJywgZmFsc2UpICBcclxuICAgICAgICAgICAgICAgIGUuY2xhc3NMaXN0LnJlbW92ZSgnc2F2ZScpXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwcm9qZWN0RE9NRWRpdFRpdGxlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgcHJvamVjdERPTSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke3RoaXMucHJvamVjdC5yZXR1cm5Qcm9qZWN0TmFtZVdpdGhOb1doaXRlc3BhY2UoKX1gKVxyXG4gICAgICAgICAgICBpZihwcm9qZWN0RE9NRWRpdFRpdGxlQnV0dG9uLmNsYXNzTGlzdC5jb250YWlucygnc2F2ZScpKXtcclxuICAgICAgICAgICAgICAgIGxldCBvbGRJRCA9IHByb2plY3RET00uaWRcclxuICAgICAgICAgICAgICAgIGxldCBuZXdJRCA9IHByb2plY3RET01UaXRsZS5pbm5lckhUTUwucmVwbGFjZSgvXFxzKy9nLCAnLScpXHJcblxyXG4gICAgICAgICAgICAgICAgc2F2ZVRpdGxlKHByb2plY3RET01FZGl0VGl0bGVCdXR0b24pXHJcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUlEc1RvTmV3UHJvamVjdE5hbWUob2xkSUQsIG5ld0lEKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICBlZGl0VGl0bGUocHJvamVjdERPTUVkaXRUaXRsZUJ1dHRvbilcclxuICAgICAgICAgICAgICAgIHByb2plY3RET01FZGl0VGl0bGVCdXR0b24uaW5uZXJIVE1MID0gJ1xcdUQ4M0RcXHVEQ0JFJ1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGNvbnN0IHByb2plY3RET01EZWxldGVCdXR0b24gPSBjcmVhdGVEb21FbGVtZW50KFxyXG4gICAgICAgICAgICAnYnV0dG9uJyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgY2xhc3M6J3Byb2plY3QtZGVsZXRlLWJ1dHRvbicsIFxyXG4gICAgICAgICAgICAgICAgaWQ6IGAke3RoaXMucHJvamVjdC5yZXR1cm5Qcm9qZWN0TmFtZVdpdGhOb1doaXRlc3BhY2UoKX0tZGVsZXRlYCwgXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICdcXHVEODNEXFx1REREMSdcclxuICAgICAgICAgICAgKVxyXG4gICAgICAgIHByb2plY3RET01EZWxldGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHByb2plY3RET00gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjJHt0aGlzLnByb2plY3QucmV0dXJuUHJvamVjdE5hbWVXaXRoTm9XaGl0ZXNwYWNlKCl9YClcclxuICAgICAgICAgICAgdGhpcy5oYW5kbGVyLnJlbW92ZVByb2plY3QodGhpcy5wcm9qZWN0Lm5hbWUpXHJcbiAgICAgICAgICAgIHByb2plY3RET00ucmVtb3ZlKClcclxuICAgICAgICAgICAgdGhpcy5zaWRlYmFyLmRpc3BsYXlQcm9qZWN0cygpXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGNvbnN0IHByb2plY3RET01Db2xsYXBzZUJ1dHRvbiA9IGNyZWF0ZURvbUVsZW1lbnQoXHJcbiAgICAgICAgICAgICdidXR0b24nLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBjbGFzczoncHJvamVjdC1jb2xsYXBzZS1idXR0b24nLCBcclxuICAgICAgICAgICAgICAgIGlkOiBgJHt0aGlzLnByb2plY3QucmV0dXJuUHJvamVjdE5hbWVXaXRoTm9XaGl0ZXNwYWNlKCl9LWNvbGxhcHNlYCwgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgKVxyXG5cclxuICAgICAgICBwcm9qZWN0RE9NQ29sbGFwc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgI2NvbHVtbnMtJHt0aGlzLnByb2plY3QucmV0dXJuUHJvamVjdE5hbWVXaXRoTm9XaGl0ZXNwYWNlKCl9YClcclxuICAgICAgICAgICAgY29uc3QgcHJvamVjdENvbHVtbnNXcmFwcGVyID0gZS50YXJnZXQucGFyZW50Tm9kZS5wYXJlbnROb2RlLm5leHRTaWJsaW5nIC8vZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYCNjb2x1bW5zLSR7dGhpcy5wcm9qZWN0LnJldHVyblByb2plY3ROYW1lV2l0aE5vV2hpdGVzcGFjZSgpfWApXHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHByb2plY3RDb2x1bW5zV3JhcHBlcilcclxuICAgICAgICAgICAgaWYocHJvamVjdENvbHVtbnNXcmFwcGVyLmNsYXNzTGlzdC5jb250YWlucygnY29sbGFwc2VkJykpe1xyXG4gICAgICAgICAgICAgICAgcHJvamVjdENvbHVtbnNXcmFwcGVyLmNsYXNzTGlzdC5yZW1vdmUoJ2NvbGxhcHNlZCcpXHJcbiAgICAgICAgICAgICAgICBwcm9qZWN0RE9NQ29sbGFwc2VCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgndG9nZ2xlLWJ1dHRvbi10cmFuc2l0aW9uJylcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgcHJvamVjdENvbHVtbnNXcmFwcGVyLmNsYXNzTGlzdC5hZGQoJ2NvbGxhcHNlZCcpXHJcbiAgICAgICAgICAgICAgICBwcm9qZWN0RE9NQ29sbGFwc2VCdXR0b24uY2xhc3NMaXN0LmFkZCgndG9nZ2xlLWJ1dHRvbi10cmFuc2l0aW9uJylcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgY29uc3QgcHJvamVjdERPTU9wdGlvbnMgPSBjcmVhdGVEb21FbGVtZW50KFxyXG4gICAgICAgICAgICAnZGl2JywgXHJcbiAgICAgICAgICAgIHtjbGFzczoncHJvamVjdC1vcHRpb25zJ30sIFxyXG4gICAgICAgICAgICAvLyBwcm9qZWN0RE9NVGl0bGUsXHJcbiAgICAgICAgICAgIHByb2plY3RET01FZGl0VGl0bGVCdXR0b24sXHJcbiAgICAgICAgICAgIG5ld1Rhc2tCdXR0b24sXHJcbiAgICAgICAgICAgIHByb2plY3RET01EZWxldGVCdXR0b24sXHJcbiAgICAgICAgICAgIHByb2plY3RET01Db2xsYXBzZUJ1dHRvblxyXG4gICAgICAgICAgICAvLyBwcm9qZWN0Q29sbGFwc2VMYWJlbFxyXG4gICAgICAgICAgICApXHJcblxyXG4gICAgICAgIGNvbnN0IHByb2plY3RIZWFkZXIgPSBjcmVhdGVEb21FbGVtZW50KFxyXG4gICAgICAgICAgICAnZGl2JyxcclxuICAgICAgICAgICAge2NsYXNzOiAncHJvamVjdC1oZWFkZXInfSxcclxuICAgICAgICAgICAgcHJvamVjdERPTVRpdGxlLFxyXG4gICAgICAgICAgICBwcm9qZWN0RE9NT3B0aW9ucylcclxuXHJcbiAgICAgICAgLy91cGRhdGUgcHJvamVjdCBuYW1lIGFuZCBkaXYgaWRzIHdoZW4gZWRpdHRpbmdcclxuICAgICAgICBwcm9qZWN0RE9NVGl0bGUuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoZSkgPT4ge1xyXG4gICAgICAgICAgICBsZXQgZWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke3RoaXMucHJvamVjdC5yZXR1cm5Qcm9qZWN0TmFtZVdpdGhOb1doaXRlc3BhY2UoKX0tZWRpdGApXHJcbiAgICAgICAgICAgIGlmKGVkaXRCdXR0b24uaW5uZXJIVE1MICE9ICdcXHUyNzBFJykgZWRpdEJ1dHRvbi5pbm5lckhUTUwgPSAnXFx1RDgzRFxcdURDQkUnXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgcmV0dXJuIHByb2plY3RIZWFkZXJcclxuICAgIH1cclxuICAgIFxyXG4gICAgcmVuZGVyUHJvamVjdFRhc2tDb2x1bW5zKG5ld0RPTSl7XHJcbiAgICAgICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0gUHJvZ3Jlc3MgY29sdW1ucyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS8vXHJcblxyXG4gICAgICAgIGNvbnN0IHByb2plY3ROb3RTdGFydGVkQ29sdW1uID0gY3JlYXRlRG9tRWxlbWVudChcclxuICAgICAgICAgICAgJ2RpdicsXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGNsYXNzOidwcm9qZWN0LXN0YXR1cy1jb2wnLCBcclxuICAgICAgICAgICAgICAgIGlkOmBub3Qtc3RhcnRlZC0ke3RoaXMucHJvamVjdC5yZXR1cm5Qcm9qZWN0TmFtZVdpdGhOb1doaXRlc3BhY2UoKX1gLFxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIHByb2plY3ROb3RTdGFydGVkQ29sdW1uLmNsYXNzTGlzdC5hZGQoJ25vdC1zdGFydGVkJylcclxuICAgICAgICBwcm9qZWN0Tm90U3RhcnRlZENvbHVtbi5zZXRBdHRyaWJ1dGUoJ2RhdGEtc3RhdHVzJywgJ25vdC1zdGFydGVkJylcclxuICAgICAgICBwcm9qZWN0Tm90U3RhcnRlZENvbHVtbi5hZGRFdmVudExpc3RlbmVyKFwiZHJhZ292ZXJcIiwgKGUpID0+IHtcclxuICAgICAgICAgICAgRHJhZy5vbkRyYWdPdmVyKGUpXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICBwcm9qZWN0Tm90U3RhcnRlZENvbHVtbi5hZGRFdmVudExpc3RlbmVyKFwiZHJvcFwiLCAoZSkgPT4ge1xyXG4gICAgICAgICAgICBEcmFnLm9uRHJvcChlKVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgcHJvamVjdE5vdFN0YXJ0ZWRDb2x1bW4uYWRkRXZlbnRMaXN0ZW5lcihcImRyYWdsZWF2ZVwiLCAoZSkgPT4ge1xyXG4gICAgICAgICAgICBEcmFnLm9uRHJhZ0xlYXZlKGUpXHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgY29uc3QgcHJvamVjdEluUHJvZ3Jlc3NDb2x1bW4gPSBjcmVhdGVEb21FbGVtZW50KFxyXG4gICAgICAgICAgICAnZGl2JyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgY2xhc3M6J3Byb2plY3Qtc3RhdHVzLWNvbCcsIFxyXG4gICAgICAgICAgICAgICAgaWQ6YGluLXByb2dyZXNzLSR7dGhpcy5wcm9qZWN0LnJldHVyblByb2plY3ROYW1lV2l0aE5vV2hpdGVzcGFjZSgpfWAsXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgcHJvamVjdEluUHJvZ3Jlc3NDb2x1bW4uY2xhc3NMaXN0LmFkZCgnaW4tcHJvZ3Jlc3MnKVxyXG4gICAgICAgIHByb2plY3RJblByb2dyZXNzQ29sdW1uLnNldEF0dHJpYnV0ZSgnZGF0YS1zdGF0dXMnLCAnaW4tcHJvZ3Jlc3MnKVxyXG4gICAgICAgIHByb2plY3RJblByb2dyZXNzQ29sdW1uLmFkZEV2ZW50TGlzdGVuZXIoXCJkcmFnb3ZlclwiLCAoZSkgPT4ge1xyXG4gICAgICAgICAgICBEcmFnLm9uRHJhZ092ZXIoZSlcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIHByb2plY3RJblByb2dyZXNzQ29sdW1uLmFkZEV2ZW50TGlzdGVuZXIoXCJkcm9wXCIsIChlKSA9PiB7XHJcbiAgICAgICAgICAgIERyYWcub25Ecm9wKGUpXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICBwcm9qZWN0SW5Qcm9ncmVzc0NvbHVtbi5hZGRFdmVudExpc3RlbmVyKFwiZHJhZ2xlYXZlXCIsIChlKSA9PiB7XHJcbiAgICAgICAgICAgIERyYWcub25EcmFnTGVhdmUoZSlcclxuICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICBjb25zdCBwcm9qZWN0Q29tcGxldGVkQ29sdW1uID0gY3JlYXRlRG9tRWxlbWVudChcclxuICAgICAgICAgICAgJ2RpdicsXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGNsYXNzOidwcm9qZWN0LXN0YXR1cy1jb2wnLCBcclxuICAgICAgICAgICAgICAgIGlkOmBjb21wbGV0ZWQtJHt0aGlzLnByb2plY3QucmV0dXJuUHJvamVjdE5hbWVXaXRoTm9XaGl0ZXNwYWNlKCl9YCxcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICBwcm9qZWN0Q29tcGxldGVkQ29sdW1uLmNsYXNzTGlzdC5hZGQoJ2NvbXBsZXRlZCcpXHJcbiAgICAgICAgcHJvamVjdENvbXBsZXRlZENvbHVtbi5zZXRBdHRyaWJ1dGUoJ2RhdGEtc3RhdHVzJywgJ2NvbXBsZXRlZCcpXHJcbiAgICAgICAgcHJvamVjdENvbXBsZXRlZENvbHVtbi5hZGRFdmVudExpc3RlbmVyKFwiZHJhZ292ZXJcIiwgKGUpID0+IHtcclxuICAgICAgICAgICAgRHJhZy5vbkRyYWdPdmVyKGUpXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICBwcm9qZWN0Q29tcGxldGVkQ29sdW1uLmFkZEV2ZW50TGlzdGVuZXIoXCJkcm9wXCIsIChlKSA9PiB7XHJcbiAgICAgICAgICAgIERyYWcub25Ecm9wKGUpXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIHByb2plY3RDb21wbGV0ZWRDb2x1bW4uYWRkRXZlbnRMaXN0ZW5lcihcImRyYWdsZWF2ZVwiLCAoZSkgPT4ge1xyXG4gICAgICAgICAgICBEcmFnLm9uRHJhZ0xlYXZlKGUpXHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgY29uc3QgcHJvamVjdENvbHVtbnNXcmFwcGVyID0gY3JlYXRlRG9tRWxlbWVudChcclxuICAgICAgICAgICAgJ2RpdicsXHJcbiAgICAgICAgICAgIHtjbGFzczoncHJvamVjdC1zdGF0dXMtd3JhcHBlcicsIGlkOmBjb2x1bW5zLSR7dGhpcy5wcm9qZWN0LnJldHVyblByb2plY3ROYW1lV2l0aE5vV2hpdGVzcGFjZSgpfWB9LFxyXG4gICAgICAgICAgICAvLyBuZXdUYXNrQnV0dG9uLFxyXG4gICAgICAgICAgICBwcm9qZWN0Tm90U3RhcnRlZENvbHVtbiwgcHJvamVjdEluUHJvZ3Jlc3NDb2x1bW4sIHByb2plY3RDb21wbGV0ZWRDb2x1bW4pXHJcblxyXG4gICAgICAgIC8vIHB1bGwgZXZlcnl0aGluZyB0b2dldGhlclxyXG4gICAgICAgIGNvbnN0IHByb2plY3RIZWFkZXIgPSB0aGlzLnJlbmRlclByb2plY3RIZWFkZXIoKVxyXG5cclxuICAgICAgICBjb25zdCBwcm9qZWN0RE9NID0gY3JlYXRlRG9tRWxlbWVudCgnZGl2JywgXHJcbiAgICAgICAgICAgIHtjbGFzczoncHJvamVjdCcsIFxyXG4gICAgICAgICAgICAgICAgaWQ6IHRoaXMucHJvamVjdC5yZXR1cm5Qcm9qZWN0TmFtZVdpdGhOb1doaXRlc3BhY2UoKX0sIFxyXG4gICAgICAgICAgICBwcm9qZWN0SGVhZGVyLCBwcm9qZWN0Q29sdW1uc1dyYXBwZXIpXHJcblxyXG4gICAgICAgIC8vIHByb2plY3RET00uYXBwZW5kKC4uLnRoaXMucmVuZGVyVGFza0NhcmRzKCkpXHJcbiBcclxuICAgICAgICBjb25zdCBwcm9qZWN0QXJlYSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwcm9qZWN0cycpXHJcbiAgICAgICAgaWYobmV3RE9NKXtcclxuICAgICAgICAgICAgY29uc3QgcHJvamVjdFNlY3Rpb25IZWFkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcHJvamVjdC1zZWN0aW9uLWhlYWRlcicpXHJcbiAgICAgICAgICAgIHByb2plY3RBcmVhLmluc2VydEJlZm9yZShwcm9qZWN0RE9NLCBudWxsKVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHByb2plY3RBcmVhLmluc2VydEJlZm9yZShwcm9qZWN0RE9NLCBudWxsKVxyXG4gICAgfVxyXG59XHJcbiIsImV4cG9ydCBjbGFzcyBQcm9qZWN0IHtcclxuICAgIC8vIHRhc2tzID0gW107XHJcbiAgICBjb25zdHJ1Y3RvcihuYW1lKXtcclxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lXHJcbiAgICAgICAgdGhpcy50YXNrcyA9IFtdXHJcbiAgICB9XHJcblxyXG4gICAgYWRkVGFzayhuZXdUYXNrSlNPTil7XHJcbiAgICAgICAgaWYodGhpcy50YXNrcy5maWx0ZXIodGFzayA9PiBuZXdUYXNrSlNPTi50aXRsZSAhPT0gdGFzaykpe3RoaXMudGFza3MucHVzaChuZXdUYXNrSlNPTil9XHJcbiAgICB9XHJcblxyXG4gICAgcmVtb3ZlVGFzayhUYXNrVGl0bGUpe1xyXG4gICAgICAgIHRoaXMudGFza3MgPSB0aGlzLnRhc2tzLmZpbHRlcigodGFzaykgPT4gXHJcbiAgICAgICAgICAgIHRhc2sudGl0bGUgIT09IFRhc2tUaXRsZVxyXG4gICAgICAgICk7XHJcbiAgICB9XHJcblxyXG4gICAgZmlsdGVyVGFza3Moc2VhcmNoKSB7XHJcbiAgICAgICAgbGV0IGluZGV4ZXMgPSBbXSwgaTtcclxuICAgICAgICBmb3IoaSA9IDA7IGkgPCB0aGlzLnRhc2tzLmxlbmd0aDsgaSsrKVxyXG4gICAgICAgICAgICBpZiAodGhpcy50YXNrc1tpXS50aXRsZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHNlYXJjaC50b0xvd2VyQ2FzZSgpKSlcclxuICAgICAgICAgICAgICAgIGluZGV4ZXMucHVzaChpKTtcclxuICAgICAgICByZXR1cm4gdGhpcy50YXNrc1tpbmRleGVzXTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm5BbGxUYXNrcygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy50YXNrc1xyXG4gICAgfTtcclxuXHJcbiAgICByZXR1cm5BbGxUYXNrVGl0bGVzKCl7XHJcbiAgICAgICAgbGV0IG91dCA9IFtdXHJcbiAgICAgICAgZm9yKGxldCB0YXNrIG9mIHRoaXMudGFza3Mpe1xyXG4gICAgICAgICAgICBvdXQucHVzaCh0YXNrLnJldHVyblRpdGxlKCkpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnNvbGUubG9nKG91dClcclxuICAgICAgICByZXR1cm4gb3V0XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuUHJvamVjdE5hbWUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubmFtZVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVyblByb2plY3ROYW1lV2l0aE5vV2hpdGVzcGFjZSgpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLm5hbWUucmVwbGFjZSgvXFxzKy9nLCAnLScpXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuUHJvamVjdEpTT04oKSB7XHJcbiAgICAgICAgbGV0IHRhc2tzSlNPTiA9IFtdXHJcbiAgICAgICAgZm9yKGNvbnN0IHRhc2sgb2YgdGhpcy50YXNrcyl7XHJcbiAgICAgICAgICAgIHRhc2tzSlNPTi5wdXNoKHRhc2sucmV0dXJuSXRlbUpTT04oKSlcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHsnbmFtZSc6IHRoaXMucmV0dXJuUHJvamVjdE5hbWUoKSxcclxuICAgICAgICAndGFza3MnOiB0YXNrc0pTT059XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlUHJvamVjdE5hbWUobmV3TmFtZSkge1xyXG4gICAgICAgIHRoaXMubmFtZSA9IG5ld05hbWVcclxuICAgIH1cclxuXHJcblxyXG59IiwiaW1wb3J0IHsgY3JlYXRlRG9tRWxlbWVudCB9IGZyb20gXCIuL2NvbXBvbmVudE1ha2Vyc1wiXHJcbmltcG9ydCAnLi9zdHlsZXMvcHJvamVjdEFyZWEuY3NzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBTaWRlYmFyIHtcclxuICAgIGNvbnN0cnVjdG9yKGhhbmRsZXIpe1xyXG4gICAgICAgIHRoaXMuaGFuZGxlciA9IGhhbmRsZXJcclxuICAgICAgICB0aGlzLnByb2plY3RMaXN0ID0gdGhpcy5oYW5kbGVyLnJldHVybkFsbFByb2plY3RzKClcclxuICAgICAgICB0aGlzLkRPTSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaWRlYmFyJylcclxuICAgIH1cclxuXHJcbiAgICBnZXRQcm9qZWN0TGlzdCgpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLmhhbmRsZXIucmV0dXJuQWxsUHJvamVjdHMoKVxyXG4gICAgfVxyXG5cclxuICAgIGdldFByb2plY3RUaXRsZXMoKXtcclxuICAgICAgICByZXR1cm4gdGhpcy5oYW5kbGVyLnJldHVybkFsbFByb2plY3RUaXRsZXMoKVxyXG4gICAgfVxyXG5cclxuICAgIGRpc3BsYXlQcm9qZWN0cygpe1xyXG4gICAgICAgIGNvbnN0IHByb2plY3RMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3NpZGViYXItcHJvamVjdC1saXN0JylcclxuICAgICAgICBpZihwcm9qZWN0TGlzdC5oYXNDaGlsZE5vZGVzKXtcclxuICAgICAgICAgICAgcHJvamVjdExpc3QuaW5uZXJIVE1MID0gJydcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IHRpdGxlcyA9IHRoaXMuZ2V0UHJvamVjdExpc3QoKVxyXG4gICAgICAgIGZvcihsZXQgcHJvaiBvZiB0aXRsZXMpe1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhwcm9qKVxyXG4gICAgICAgICAgICBjb25zdCBwcm9qZWN0VGl0bGUgPSBjcmVhdGVEb21FbGVtZW50KFxyXG4gICAgICAgICAgICAgICAgJ2xpJyxcclxuICAgICAgICAgICAgICAgIHtjbGFzczoncHJvamVjdC1saXN0LWl0ZW0nLCBpZDpgJHtwcm9qLnJldHVyblByb2plY3ROYW1lV2l0aE5vV2hpdGVzcGFjZSgpfS1zaWRlYmFyYH0sXHJcbiAgICAgICAgICAgICAgICBwcm9qLnJldHVyblByb2plY3ROYW1lKClcclxuICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICBwcm9qZWN0VGl0bGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zaG93U2luZ2xlUHJvamVjdChwcm9qLnJldHVyblByb2plY3ROYW1lV2l0aE5vV2hpdGVzcGFjZSgpKVxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZSlcclxuICAgICAgICAgICAgICAgIGUudGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ2NsaWNrZWQnKVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICBwcm9qZWN0TGlzdC5hcHBlbmRDaGlsZChwcm9qZWN0VGl0bGUpXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHNob3dTaW5nbGVQcm9qZWN0KHByb2plY3Qpe1xyXG4gICAgICAgIGNvbnN0IGFsbFByb2plY3RET01TID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnByb2plY3QnKVxyXG4gICAgICAgIGFsbFByb2plY3RET01TLmZvckVhY2goZG9tID0+IHtkb20uY2xhc3NMaXN0LmFkZCgnaGlkZScpfSlcclxuICAgICAgICBcclxuICAgICAgICBjb25zdCBsaXN0SXRlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdsaScpXHJcbiAgICAgICAgbGlzdEl0ZW1zLmZvckVhY2gobGkgPT4gbGkuY2xhc3NMaXN0LnJlbW92ZSgnY2xpY2tlZCcpKVxyXG5cclxuICAgICAgICBjb25zdCB0YXJnZXRET00gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjJHtwcm9qZWN0fWApXHJcbiAgICAgICAgdGFyZ2V0RE9NLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGUnKVxyXG4gICAgfVxyXG5cclxuICAgIGdpdmVTaWRlYmFyT3BlbkJ1dHRvbkZ1bmN0aW9uKCl7XHJcbiAgICAgICAgY29uc3Qgb3BlbkJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5vcGVuYnRuJylcclxuICAgICAgICBjb25zdCBzaWRlYmFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNpZGViYXInKVxyXG4gICAgICAgIGNvbnN0IGhlYWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudG9wJylcclxuICAgICAgICBjb25zdCBwcm9qZWN0U2VjdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwcm9qZWN0cycpXHJcbiAgICAgICAgY29uc3QgbmV3UHJvamVjdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNuZXctcHJvamVjdCcpXHJcbiAgICAgICAgY29uc3QgZm9vdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNmb290JylcclxuXHJcbiAgICAgICAgZnVuY3Rpb24gb3Blbk5hdigpIHtcclxuICAgICAgICAgICAgY29uc3QgbXEgPSB3aW5kb3cubWF0Y2hNZWRpYShcIihtaW4td2lkdGg6IDc2OHB4KVwiKVxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhtcSlcclxuICAgICAgICAgICAgaWYobXEubWF0Y2hlcyl7XHJcbiAgICAgICAgICAgICAgICBzaWRlYmFyLnN0eWxlLndpZHRoID0gXCIyNTBweFwiO1xyXG4gICAgICAgICAgICAgICAgaGVhZC5zdHlsZS5tYXJnaW5MZWZ0ID0gXCIyNTBweFwiO1xyXG4gICAgICAgICAgICAgICAgcHJvamVjdFNlY3Rpb24uc3R5bGUubWFyZ2luTGVmdCA9IFwiMjUwcHhcIlxyXG4gICAgICAgICAgICAgICAgbmV3UHJvamVjdC5zdHlsZS5tYXJnaW5MZWZ0ID0gXCIyNTBweFwiXHJcbiAgICAgICAgICAgICAgICBmb290LnN0eWxlLm1hcmdpbkxlZnQgPSBcIjI1MHB4XCJcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIH1cclxuICAgICAgICAgIFxyXG4gICAgICAgICAgZnVuY3Rpb24gY2xvc2VOYXYoKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IG1xID0gd2luZG93Lm1hdGNoTWVkaWEoXCIobWluLXdpZHRoOiA3NjhweClcIilcclxuICAgICAgICAgICAgY29uc29sZS5sb2cobXEpXHJcbiAgICAgICAgICAgIGlmKG1xLm1hdGNoZXMpe1xyXG4gICAgICAgICAgICAgICAgc2lkZWJhci5zdHlsZS53aWR0aCA9IFwiMFwiO1xyXG4gICAgICAgICAgICAgICAgaGVhZC5zdHlsZS5tYXJnaW5MZWZ0ID0gXCIwcHhcIjtcclxuICAgICAgICAgICAgICAgIHByb2plY3RTZWN0aW9uLnN0eWxlLm1hcmdpbkxlZnQgPSBcIjBweFwiXHJcbiAgICAgICAgICAgICAgICBuZXdQcm9qZWN0LnN0eWxlLm1hcmdpbkxlZnQgPSBcIjBweFwiXHJcbiAgICAgICAgICAgICAgICBmb290LnN0eWxlLm1hcmdpbkxlZnQgPSBcIjBweFwiXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IF90b2dnbGVTaWRlYmFyID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBzaWRlYmFyLmNsYXNzTGlzdC50b2dnbGUoXCJzaWRlYmFyLS1pc0hpZGRlblwiKTtcclxuICAgICAgICAgICAgb3BlbkJ1dHRvbi5jbGFzc0xpc3QudG9nZ2xlKCcub3BlbmJ0bi0taXNIaWRkZW4nKTtcclxuXHJcbiAgICAgICAgICAgIGlmKHNpZGViYXIuY2xhc3NMaXN0LmNvbnRhaW5zKCdzaWRlYmFyLS1pc0hpZGRlbicpKXtcclxuICAgICAgICAgICAgICAgIGNsb3NlTmF2KClcclxuICAgICAgICAgICAgICAgIG9wZW5CdXR0b24uaW5uZXJIVE1MID0gXCLimLBcIjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgb3Blbk5hdigpXHJcbiAgICAgICAgICAgICAgICBvcGVuQnV0dG9uLmlubmVySFRNTCA9IFwiWFwiO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIG9wZW5CdXR0b24uaW5uZXJIVE1MID0gc2lkZWJhci5jbGFzc0xpc3QuY29udGFpbnMoXHJcbiAgICAgICAgICAgIC8vICAgICBcInNpZGViYXItLWlzSGlkZGVuXCJcclxuICAgICAgICAgICAgLy8gKVxyXG4gICAgICAgICAgICAvLyAgICAgPyBcIlhcIlxyXG4gICAgICAgICAgICAvLyAgICAgOiBcIuKYsFwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBvcGVuQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBfdG9nZ2xlU2lkZWJhcik7XHJcbiAgICB9XHJcblxyXG4gICAgc2hvd0FsbFByb2plY3RzKCkge1xyXG4gICAgICAgIGNvbnN0IGFsbFByb2plY3RET01TID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnByb2plY3QnKVxyXG4gICAgICAgIGFsbFByb2plY3RET01TLmZvckVhY2goZG9tID0+IHtkb20uY2xhc3NMaXN0LnJlbW92ZSgnaGlkZScpfSlcclxuICAgICAgICBcclxuICAgICAgICBjb25zdCBsaXN0SXRlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdsaScpXHJcbiAgICAgICAgbGlzdEl0ZW1zLmZvckVhY2gobGkgPT4gbGkuY2xhc3NMaXN0LnJlbW92ZSgnY2xpY2tlZCcpKVxyXG4gICAgfVxyXG5cclxuICAgIGdpdmVTaG93QWxsRnVuY3Rpb24oKXtcclxuICAgICAgICBjb25zdCBzaG93QWxsQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Nob3ctYWxsJylcclxuICAgICAgICBzaG93QWxsQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5zaG93QWxsUHJvamVjdHMpXHJcbiAgICB9XHJcblxyXG4gICAgYWN0aXZhdGVTaWRlYmFyKCl7XHJcbiAgICAgICAgdGhpcy5naXZlU2lkZWJhck9wZW5CdXR0b25GdW5jdGlvbigpXHJcbiAgICAgICAgdGhpcy5naXZlU2hvd0FsbEZ1bmN0aW9uKClcclxuICAgIH1cclxuXHJcbn0iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbWFpbi5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21haW4uY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IHsgUHJvamVjdCB9IGZyb20gXCIuL3Byb2plY3RPYmpcIjtcclxuaW1wb3J0IHsgVG9kb0l0ZW0gfSBmcm9tIFwiLi90b2RvT2JqXCI7XHJcbmltcG9ydCB7UHJvamVjdEhhbmRsZXJ9IGZyb20gJy4vcHJvamVjdEhhbmRsZXIuanMnXHJcbmltcG9ydCAqIGFzIFByb2plY3REaXNwbGF5IGZyb20gJy4vcHJvamVjdERpc3BsYXkuanMnXHJcbmltcG9ydCB7IFBhZ2VJbml0aWFsaXplciB9IGZyb20gXCIuL3BhZ2VDb250cm9sbGVyLmpzXCI7XHJcbmltcG9ydCAnLi9zdHlsZXMvbWFpbi5jc3MnO1xyXG5cclxuY29uc3QgcHJvamVjdEhhbmRsZXIgPSBuZXcgUHJvamVjdEhhbmRsZXIoKVxyXG5cclxuLy8gY29uc3QgdGVzdFRhc2sxID0gbmV3IFRvZG9JdGVtKFxyXG4vLyAgICAgJ2RvIHRoZSB0aGluZycsXHJcbi8vICAgICAnbm90LXN0YXJ0ZWQnLFxyXG4vLyAgICAgJ2hpZ2gnLFxyXG4vLyAgICAgJzgvMTcvMjAzNCcsXHJcbi8vICAgICAneW91IG5lZWQgdG8gZG8gdGhlIHRoaW5nJylcclxuXHJcbi8vIGNvbnN0IHRlc3RUYXNrMiA9IG5ldyBUb2RvSXRlbShcclxuLy8gICAgICdkbyB0aGlzIHRoaW5nIHRvbycsXHJcbi8vICAgICAnY29tcGxldGVkJyxcclxuLy8gICAgICdsb3cnLFxyXG4vLyAgICAgJzkvMTcvMjAzNCcsXHJcbi8vICAgICAneW91IG5lZWQgdG8gZG8gdGhlIHRoaW5nIGJ1dCBub3QgbW9yZSBpbXBvcnRhbnQgdGhhbiBvdGhlciB0aGluZycpXHJcblxyXG4vLyBjb25zdCB0ZXN0UHJvamVjdCA9IG5ldyBQcm9qZWN0KFxyXG4vLyAgICAgJ3Rlc3RQcm9qZWN0J1xyXG4vLyApXHJcblxyXG4vLyBjb25zdCB0ZXN0VGFzazMgPSBuZXcgVG9kb0l0ZW0oXHJcbi8vICAgICAndGhpcyBpcyBpbiBwcm9qZWN0IDInLFxyXG4vLyAgICAgJ2luLXByb2dyZXNzJyxcclxuLy8gICAgICdtZWRpdW0nLFxyXG4vLyAgICAgJzkvMTcvMjAzNCcsXHJcbi8vICAgICAneW91IG5lZWQgdG8gZG8gdGhlIHRoaW5nIGJ1dCBub3QgbW9yZSBpbXBvcnRhbnQgdGhhbiBvdGhlciB0aGluZycpXHJcblxyXG4vLyB0ZXN0UHJvamVjdC5hZGRUYXNrKHRlc3RUYXNrMSlcclxuLy8gdGVzdFByb2plY3QuYWRkVGFzayh0ZXN0VGFzazIpXHJcblxyXG4vLyBwcm9qZWN0SGFuZGxlci5hZGRQcm9qZWN0KHRlc3RQcm9qZWN0KVxyXG5cclxuLy8gY29uc3QgcHJvamVjdDIgPSBuZXcgUHJvamVjdCgnc2Vjb25kIHByb2plY3QnKVxyXG4vLyBwcm9qZWN0Mi5hZGRUYXNrKHRlc3RUYXNrMylcclxuLy8gcHJvamVjdEhhbmRsZXIuYWRkUHJvamVjdChwcm9qZWN0MilcclxuXHJcbi8vIGNvbnNvbGUubG9nKHByb2plY3RIYW5kbGVyLnJldHVybkFsbFByb2plY3RzKCkpXHJcbmxldCBQYWdlID0gbmV3IFBhZ2VJbml0aWFsaXplcihwcm9qZWN0SGFuZGxlcilcclxuXHJcblBhZ2UuaW5pdGlhbGl6ZShwcm9qZWN0SGFuZGxlcilcclxuXHJcbmV4cG9ydCB7UGFnZX0iLCJpbXBvcnQgeyBQcm9qZWN0IH0gZnJvbSBcIi4vcHJvamVjdE9ialwiO1xyXG5pbXBvcnQgJy4vc3R5bGVzL3Byb2plY3RBcmVhLmNzcyc7XHJcbmltcG9ydCB7IFNpZGViYXIgfSBmcm9tIFwiLi9zaWRlYmFyLmpzXCI7XHJcbmltcG9ydCB7IFByb2plY3RSZW5kZXJlciB9IGZyb20gXCIuL3Byb2plY3REaXNwbGF5LmpzXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgUGFnZUluaXRpYWxpemVyIHtcclxuICAgIGNvbnN0cnVjdG9yKHByb2plY3RIYW5kbGVyKSB7XHJcbiAgICAgICAgdGhpcy5wcm9qZWN0SGFuZGxlciA9IHByb2plY3RIYW5kbGVyO1xyXG4gICAgICAgIHRoaXMuc2lkZWJhciA9IG5ldyBTaWRlYmFyKHRoaXMucHJvamVjdEhhbmRsZXIpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldFByb2plY3RIYW5kbGVyKHByb2plY3RIYW5kbGVyKSB7XHJcbiAgICAgICAgdGhpcy5wcm9qZWN0SGFuZGxlciA9IHByb2plY3RIYW5kbGVyO1xyXG4gICAgfVxyXG5cclxuICAgIHNldENyZWF0ZU5ld1Byb2plY3RCdXR0b24oKSB7XHJcbiAgICAgICAgY29uc3QgbmV3UHJvamVjdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNuZXctcHJvamVjdC1idXR0b24nKTtcclxuICAgICAgICBuZXdQcm9qZWN0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5jcmVhdGVTaW5nbGVQcm9qZWN0LmJpbmQodGhpcykpO1xyXG4gICAgfVxyXG5cclxuICAgIGNyZWF0ZVNpbmdsZVByb2plY3QoKSB7XHJcbiAgICAgICAgY29uc3QgbmV3UHJvamVjdFRpdGxlQmFzZSA9ICdOZXcgUHJvamVjdCc7XHJcbiAgICAgICAgbGV0IGkgPSAxO1xyXG4gICAgICAgIGxldCBuZXdQcm9qZWN0VGl0bGU7XHJcblxyXG4gICAgICAgIGNvbnN0IHByb2plY3RUaXRsZXMgPSB0aGlzLnByb2plY3RIYW5kbGVyLnJldHVybkFsbFByb2plY3RUaXRsZXMoKTtcclxuICAgICAgICBpZiAocHJvamVjdFRpdGxlcy5pbmNsdWRlcyhuZXdQcm9qZWN0VGl0bGVCYXNlKSkge1xyXG4gICAgICAgICAgICBkbyB7XHJcbiAgICAgICAgICAgICAgICBuZXdQcm9qZWN0VGl0bGUgPSBuZXdQcm9qZWN0VGl0bGVCYXNlICsgaTtcclxuICAgICAgICAgICAgICAgIGkgKz0gMTtcclxuICAgICAgICAgICAgfSB3aGlsZSAocHJvamVjdFRpdGxlcy5pbmNsdWRlcyhuZXdQcm9qZWN0VGl0bGUpKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBuZXdQcm9qZWN0VGl0bGUgPSBuZXdQcm9qZWN0VGl0bGVCYXNlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgbmV3UHJvamVjdCA9IG5ldyBQcm9qZWN0KG5ld1Byb2plY3RUaXRsZSk7XHJcbiAgICAgICAgY29uc3QgbmV3UHJvamVjdFJlbmRlcmVyID0gbmV3IFByb2plY3RSZW5kZXJlcih0aGlzLnByb2plY3RIYW5kbGVyLCBuZXdQcm9qZWN0LCB0aGlzLnNpZGViYXIpO1xyXG4gICAgICAgIHRoaXMucHJvamVjdEhhbmRsZXIuYWRkUHJvamVjdChuZXdQcm9qZWN0KTtcclxuICAgICAgICBuZXdQcm9qZWN0UmVuZGVyZXIuY3JlYXRlUHJvamVjdERPTSh0cnVlKTtcclxuICAgICAgICB0aGlzLnNpZGViYXIuZGlzcGxheVByb2plY3RzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdGlhbGl6ZSgpIHtcclxuICAgICAgICBjb25zdCBwcm9qZWN0TGlzdCA9IHRoaXMucHJvamVjdEhhbmRsZXIucmV0dXJuQWxsUHJvamVjdHMoKTtcclxuICAgICAgICBmb3IgKGNvbnN0IHByb2ogb2YgcHJvamVjdExpc3QpIHtcclxuICAgICAgICAgICAgY29uc3QgcHJvamVjdE1hbmFnZXIgPSBuZXcgUHJvamVjdFJlbmRlcmVyKHRoaXMucHJvamVjdEhhbmRsZXIsIHByb2osIHRoaXMuc2lkZWJhcik7XHJcbiAgICAgICAgICAgIHByb2plY3RNYW5hZ2VyLmNyZWF0ZVByb2plY3RET00oKTtcclxuICAgICAgICAgICAgcHJvamVjdE1hbmFnZXIucGxhY2VUYXNrQ2FyZHNJbnRvUHJvamVjdERPTSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnNpZGViYXIuYWN0aXZhdGVTaWRlYmFyKCk7XHJcbiAgICAgICAgdGhpcy5zaWRlYmFyLmRpc3BsYXlQcm9qZWN0cygpO1xyXG4gICAgICAgIHRoaXMuc2V0Q3JlYXRlTmV3UHJvamVjdEJ1dHRvbigpO1xyXG4gICAgfVxyXG59Il0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJuYyIsImNyZWF0ZURvbUVsZW1lbnQiLCJ0eXBlIiwiY2hpbGRyZW4iLCJlbCIsImZvckVhY2giLCJjaGlsZCIsIkVsZW1lbnQiLCJvbkRyYWdPdmVyIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsImRyb3B6b25lIiwiY3VycmVudFRhcmdldCIsImRyb3B6b25lSUQiLCJib3R0b21UYXNrIiwiaW5zZXJ0QWJvdmVUYXNrIiwiY2xpZW50WSIsImN1clRhc2siLCJwcm9qZWN0TmFtZSIsImRhdGFzZXQiLCJwcm9qZWN0IiwiY29uc29sZSIsImxvZyIsImFibGVUb0Ryb3AiLCJpbmNsdWRlcyIsImluc2VydEJlZm9yZSIsIm9uRHJhZ0xlYXZlIiwib25Ecm9wIiwiZGF0YVRyYW5zZmVyIiwiZ2V0RGF0YSIsIm5ld1N0YXR1cyIsInN0YXR1cyIsInN0YXR1c0NoYW5nZUV2ZW50IiwiQ3VzdG9tRXZlbnQiLCJkZXRhaWwiLCJkaXNwYXRjaEV2ZW50IiwiY2xlYXJEYXRhIiwiem9uZSIsIm1vdXNlWSIsImVscyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjbG9zZXN0VGFzayIsImNsb3Nlc3RPZmZzZXQiLCJOdW1iZXIiLCJORUdBVElWRV9JTkZJTklUWSIsInRhc2siLCJ0b3AiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJvZmZzZXQiLCJtaWxsaXNlY29uZHNJbkRheSIsIk1hdGgiLCJwb3ciLCJ0b0RhdGUiLCJhcmd1bWVudCIsImFyZ1N0ciIsIkRhdGUiLCJjb25zdHJ1Y3RvciIsIk5hTiIsInN0YXJ0T2ZEYXkiLCJkYXRlIiwiX2RhdGUiLCJzZXRIb3VycyIsImdldFRpbWV6b25lT2Zmc2V0SW5NaWxsaXNlY29uZHMiLCJ1dGNEYXRlIiwiVVRDIiwiZ2V0RnVsbFllYXIiLCJnZXRNb250aCIsImdldERhdGUiLCJnZXRIb3VycyIsImdldE1pbnV0ZXMiLCJnZXRTZWNvbmRzIiwiZ2V0TWlsbGlzZWNvbmRzIiwic2V0VVRDRnVsbFllYXIiLCJkaWZmZXJlbmNlSW5EYXlzIiwiZGF0ZUxlZnQiLCJkYXRlUmlnaHQiLCJfZGF0ZUxlZnQiLCJfZGF0ZVJpZ2h0Iiwic2lnbiIsImNvbXBhcmVMb2NhbEFzYyIsImRpZmZlcmVuY2UiLCJhYnMiLCJzdGFydE9mRGF5TGVmdCIsInN0YXJ0T2ZEYXlSaWdodCIsInRpbWVzdGFtcExlZnQiLCJ0aW1lc3RhbXBSaWdodCIsInJvdW5kIiwiZGlmZmVyZW5jZUluQ2FsZW5kYXJEYXlzIiwic2V0RGF0ZSIsImRpZmYiLCJsb2NhbHMiLCJDYXJkUmVuZGVyZXIiLCJwcm9qZWN0UmVuZGVyZXIiLCJzZXRQcm9qZWN0UmVuZGVyZXIiLCJjcmVhdGVGdWxsQ2FyZCIsImNhcmRSZW1vdmVCdXR0b24iLCJjbGFzcyIsImFkZEV2ZW50TGlzdGVuZXIiLCJjYXJkQXJlYSIsImRlbGV0ZVRhcmdldCIsInJlbW92ZVRhc2siLCJ0aXRsZSIsInJlbmRlckFuZFVwZGF0ZVByb2plY3QiLCJyZXR1cm5Qcm9qZWN0SlNPTiIsImR1ZURhdGUiLCJyZXR1cm5EdWVEYXRlIiwiZHVlRGF0ZUxhYmVsIiwiZm9yIiwiY2FyZER1ZURhdGUiLCJjb250ZW50ZWRpdGFibGUiLCJ2YWx1ZSIsImR1ZURhdGVEaXYiLCJwcmlvcml0eUxhYmVsIiwiY2FyZFByaW9yaXR5IiwicHJpb3JpdHkiLCJwcmlvcml0aWVzRGl2IiwiZGV0YWlsTGFiZWwiLCJjYXJkRGV0YWlsIiwiZGV0YWlsRGl2Iiwic3RhdHVzTGFiZWwiLCJjYXJkU3RhdHVzIiwiam9iU3RhdHVzIiwic3RhdHVzRGl2IiwiY2FyZFRpdGxlIiwiY2FyZCIsInJlbW92ZUJHIiwidXBkYXRlVGl0bGUiLCJpbm5lckhUTUwiLCJ1cGRhdGVTdGF0dXMiLCJ1cGRhdGVEdWVEYXRlIiwidXBkYXRlRGV0YWlsIiwidXBkYXRlUHJpb3JpdHkiLCJkZWxldGVQYXJlbnQiLCJjcmVhdGVNaW5pbWl6ZWRDYXJkIiwiY2hhckF0IiwidG9VcHBlckNhc2UiLCJzbGljZSIsInJlcGxhY2UiLCJkcmFnZ2FibGUiLCJyZXR1cm5Qcm9qZWN0TmFtZVdpdGhOb1doaXRlc3BhY2UiLCJyZXR1cm5TdGF0dXNBc0h0bWxEYXRhIiwiY2xhc3NMaXN0IiwiYWRkIiwiYm9keSIsImFwcGVuZCIsInRhcmdldElEIiwic2V0RGF0YSIsImR1ZURhdGVUaW1lciIsInJldHVyblN0YXR1cyIsIlRvZG9JdGVtIiwibmV3RGV0YWlsIiwibmV3VGl0bGUiLCJuZXdQcmlvcml0eSIsIm5ld0RhdGUiLCJyZXR1cm5UaXRsZSIsInJldHVyblByaW9yaXR5IiwicmV0dXJuRGV0YWlsIiwicmV0dXJuSXRlbUpTT04iLCJFcnJvckxvZ2dlciIsInRocm93RXJyb3IiLCJtZXNzYWdlIiwiUHJvamVjdFJlbmRlcmVyIiwicHJvamVjdEhhbmRsZXIiLCJzaWRlYmFyIiwiaGFuZGxlciIsInJlcGxhY2VBbGwiLCJ0b0xvd2VyQ2FzZSIsInRhc2tUaXRsZXMiLCJyZXR1cm5BbGxUYXNrVGl0bGVzIiwiZmlsdGVyVGFza3MiLCJjbGVhckFsbENoaWxkcmVuIiwicHJvamVjdElkIiwiY29sIiwiaGFzQ2hpbGROb2RlcyIsInBsYWNlVGFza0NhcmRzSW50b1Byb2plY3RET00iLCJzdWJtaXROZXdUYXNrIiwiZHVlZGF0ZSIsIm5ld1Rhc2siLCJhZGRUYXNrIiwicmVuZGVyVGFza0NhcmRzIiwibGlzdE9mVGFza3NJblByb2plY3QiLCJyZXR1cm5BbGxUYXNrcyIsImNhcmRBcnJheSIsIkNhcmRDcmVhdGVyT2JqIiwidGFza3MiLCJnZXRQcm9qZWN0IiwidXBkYXRlSURzVG9OZXdQcm9qZWN0TmFtZSIsIm9sZE5hbWUiLCJuZXdOYW1lIiwicHJvamVjdERPTVRpdGxlIiwiZWRpdEJ1dHRvbiIsInByb2plY3ROb3RTdGFydGVkQ29sdW1uIiwicHJvamVjdEluUHJvZ3Jlc3NDb2x1bW4iLCJwcm9qZWN0Q29tcGxldGVkQ29sdW1uIiwiY2hpbGROb2RlcyIsInVwZGF0ZVByb2plY3ROYW1lIiwiZGlzcGxheVByb2plY3RzIiwiY3JlYXRlTmV3VGFza0Zvcm0iLCJwbGFjZWhvbGRlciIsInByaW9yaXRpZXMiLCJjYXJkU3VibWl0QnV0dG9uIiwiY3JlYXRlUHJvamVjdERPTSIsIm5ld0RPTSIsInJlbmRlclByb2plY3RIZWFkZXIiLCJyZW5kZXJQcm9qZWN0VGFza0NvbHVtbnMiLCJuZXdUYXNrQnV0dG9uIiwibmFtZSIsInByb2plY3RET01FZGl0VGl0bGVCdXR0b24iLCJwcm9qZWN0RE9NIiwiY29udGFpbnMiLCJvbGRJRCIsIm5ld0lEIiwic2F2ZVRpdGxlIiwiZm9jdXMiLCJlZGl0VGl0bGUiLCJwcm9qZWN0RE9NRGVsZXRlQnV0dG9uIiwicmVtb3ZlUHJvamVjdCIsInByb2plY3RET01Db2xsYXBzZUJ1dHRvbiIsInByb2plY3RDb2x1bW5zV3JhcHBlciIsIm5leHRTaWJsaW5nIiwicHJvamVjdERPTU9wdGlvbnMiLCJwcm9qZWN0SGVhZGVyIiwicHJvamVjdEFyZWEiLCJQcm9qZWN0IiwibmV3VGFza0pTT04iLCJmaWx0ZXIiLCJUYXNrVGl0bGUiLCJzZWFyY2giLCJpbmRleGVzIiwib3V0IiwicmV0dXJuUHJvamVjdE5hbWUiLCJ0YXNrc0pTT04iLCJTaWRlYmFyIiwicHJvamVjdExpc3QiLCJyZXR1cm5BbGxQcm9qZWN0cyIsIkRPTSIsImdldFByb2plY3RMaXN0IiwiZ2V0UHJvamVjdFRpdGxlcyIsInJldHVybkFsbFByb2plY3RUaXRsZXMiLCJ0aXRsZXMiLCJwcm9qIiwicHJvamVjdFRpdGxlIiwic2hvd1NpbmdsZVByb2plY3QiLCJkb20iLCJsaSIsImdpdmVTaWRlYmFyT3BlbkJ1dHRvbkZ1bmN0aW9uIiwib3BlbkJ1dHRvbiIsInByb2plY3RTZWN0aW9uIiwibmV3UHJvamVjdCIsImZvb3QiLCJ0b2dnbGUiLCJtcSIsIm1hdGNoTWVkaWEiLCJtYXRjaGVzIiwid2lkdGgiLCJtYXJnaW5MZWZ0IiwiY2xvc2VOYXYiLCJvcGVuTmF2Iiwic2hvd0FsbFByb2plY3RzIiwiZ2l2ZVNob3dBbGxGdW5jdGlvbiIsImFjdGl2YXRlU2lkZWJhciIsImFkZFByb2plY3QiLCJwcm9qZWN0T2JqIiwic29tZSIsInBybyIsInJldHVyblNpbmdsZVByb2plY3QiLCJQYWdlIiwic2V0UHJvamVjdEhhbmRsZXIiLCJzZXRDcmVhdGVOZXdQcm9qZWN0QnV0dG9uIiwiY3JlYXRlU2luZ2xlUHJvamVjdCIsImJpbmQiLCJuZXdQcm9qZWN0VGl0bGVCYXNlIiwibmV3UHJvamVjdFRpdGxlIiwicHJvamVjdFRpdGxlcyIsIm5ld1Byb2plY3RSZW5kZXJlciIsImluaXRpYWxpemUiLCJwcm9qZWN0TWFuYWdlciJdLCJzb3VyY2VSb290IjoiIn0=